{"fname": "just", "lineno_map": [[62, 62]], "source_code_file": "lib/rand-isaac.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "ind", "lineno_map": [[75, 75], [76, 76], [77, 77], [78, 78]], "source_code_file": "lib/rand-isaac.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "isaac_refill", "lineno_map": [[93, 93], [94, 94], [97, 97], [98, 98], [118, 118], [119, 119], [120, 120], [121, 121], [122, 122], [124, 124], [128, 128], [129, 129], [130, 130], [131, 131], [132, 132], [134, 134], [136, 136], [137, 137]], "source_code_file": "lib/rand-isaac.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "isaac_seed", "lineno_map": [[250, 250], [251, 251], [252, 252], [253, 253], [254, 254], [255, 255], [256, 256], [257, 257], [269, 269], [270, 270], [272, 272]], "source_code_file": "lib/rand-isaac.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "mbscasecmp", "lineno_map": [[39, 39], [45, 45], [50, 50], [51, 51], [53, 53], [55, 55], [57, 57], [60, 60], [61, 61], [63, 63], [66, 66], [73, 73], [74, 74], [79, 79], [80, 80], [82, 82], [85, 85], [86, 86], [88, 88]], "source_code_file": "lib/mbscasecmp.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "open_safer", "lineno_map": [[31, 31], [33, 33], [36, 36], [40, 40]], "source_code_file": "lib/open-safer.c", "binary_file1": "mkdir.json", "binary_file2": "mkdir.json"}
{"fname": "strip_trailing_slashes", "lineno_map": [[33, 33], [39, 39], [40, 40], [41, 41], [42, 42], [43, 43]], "source_code_file": "lib/stripslash.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "mem_cd_iconv", "lineno_map": [[55, 55], [60, 60], [65, 65], [66, 66], [68, 68], [70, 70], [71, 71], [72, 72], [76, 76], [78, 78], [80, 80], [96, 96], [103, 103], [104, 104], [105, 105], [107, 107], [109, 109], [112, 112], [116, 116], [118, 118], [121, 121], [122, 122], [125, 125], [126, 126], [128, 128], [138, 138], [143, 143], [144, 144], [145, 145], [146, 146], [148, 148], [150, 150], [154, 154], [156, 156], [178, 178], [180, 180], [184, 184], [185, 185], [188, 188], [189, 189], [195, 195], [197, 197], [198, 198], [199, 199]], "source_code_file": "lib/striconv.c", "binary_file1": "factor.json", "binary_file2": "ptx.json"}
{"fname": "str_cd_iconv", "lineno_map": [[255, 255], [256, 256], [261, 261], [263, 263], [264, 264], [265, 265], [267, 267], [269, 269], [270, 270], [272, 272], [281, 281], [286, 286], [287, 287], [293, 293], [297, 297], [299, 299], [301, 301], [303, 303], [304, 304], [307, 307], [309, 309], [312, 312], [313, 313], [315, 315], [318, 318], [319, 319], [320, 320], [321, 321], [336, 336], [338, 338], [340, 340], [342, 342], [343, 343], [346, 346], [348, 348], [351, 351], [352, 352], [354, 354], [357, 357], [358, 358], [359, 359], [360, 360], [371, 371], [373, 373], [377, 377], [379, 379], [381, 381], [382, 382], [389, 389], [390, 390], [391, 391]], "source_code_file": "lib/striconv.c", "binary_file1": "factor.json", "binary_file2": "ptx.json"}
{"fname": "str_iconv", "lineno_map": [[403, 403], [405, 405], [407, 407], [408, 408], [427, 427], [428, 428], [431, 431], [433, 433], [436, 436], [437, 437], [438, 438], [442, 442], [446, 446], [447, 447], [448, 448]], "source_code_file": "lib/striconv.c", "binary_file1": "factor.json", "binary_file2": "ptx.json"}
{"fname": "close_stdout_set_file_name", "lineno_map": [[53, 53]], "source_code_file": "lib/closeout.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "close_stdout_set_ignore_EPIPE", "lineno_map": [[90, 90]], "source_code_file": "lib/closeout.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "close_stdout", "lineno_map": [[119, 119], [120, 120], [122, 122], [123, 123], [124, 124], [127, 127], [129, 129], [134, 134], [135, 135]], "source_code_file": "lib/closeout.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "adjust_value", "lineno_map": [[60, 60], [62, 62], [63, 63]], "source_code_file": "lib/human.c", "binary_file1": "dd.json", "binary_file2": "sum.json"}
{"fname": "group_number", "lineno_map": [[83, 83], [84, 84], [85, 85], [91, 91], [92, 92], [96, 96], [98, 98], [100, 100], [101, 101], [104, 104], [105, 105], [107, 107], [108, 108], [109, 109], [110, 110], [113, 113], [114, 114]], "source_code_file": "lib/human.c", "binary_file1": "dd.json", "binary_file2": "sum.json"}
{"fname": "human_readable", "lineno_map": [[156, 156], [158, 158], [161, 161], [162, 162], [173, 173], [174, 174], [175, 175], [176, 176], [177, 177], [178, 178], [179, 179], [181, 181], [182, 182], [184, 184], [185, 185], [186, 186], [189, 189], [190, 190], [195, 195], [197, 197], [199, 199], [200, 200], [201, 201], [203, 203], [204, 204], [209, 209], [211, 211], [212, 212], [213, 213], [214, 214], [215, 215], [216, 216], [225, 225], [226, 226], [230, 230], [232, 232], [233, 233], [234, 234], [238, 238], [239, 239], [243, 243], [244, 244], [246, 246], [248, 248], [250, 250], [251, 251], [252, 252], [254, 254], [255, 255], [256, 256], [258, 258], [259, 259], [260, 260], [261, 261], [265, 265], [266, 266], [267, 267], [278, 278], [280, 280], [282, 282], [286, 286], [287, 287], [288, 288], [289, 289], [290, 290], [291, 291], [292, 292], [293, 293], [295, 295], [297, 297], [299, 299], [300, 300], [301, 301], [303, 303], [304, 304], [306, 306], [308, 308], [309, 309], [313, 313], [314, 314], [316, 316], [317, 317], [318, 318], [319, 319], [325, 325], [326, 326], [327, 327], [329, 329], [331, 331], [332, 332], [334, 334], [335, 335], [337, 337], [338, 338], [339, 339], [341, 341], [345, 345], [349, 349], [350, 350], [352, 352], [356, 356], [357, 357], [359, 359], [361, 361], [364, 364], [365, 365], [366, 366], [370, 370], [371, 371], [373, 373], [374, 374], [378, 378], [380, 380], [381, 381], [382, 382], [386, 386]], "source_code_file": "lib/human.c", "binary_file1": "dd.json", "binary_file2": "sum.json"}
{"fname": "humblock", "lineno_map": [[415, 415], [417, 417], [418, 418], [419, 419], [420, 420], [423, 423], [425, 425], [426, 426], [429, 429], [431, 431], [432, 432], [437, 437], [439, 439], [441, 441], [444, 444], [445, 445], [447, 447], [448, 448], [449, 449], [450, 450], [451, 451], [457, 457]], "source_code_file": "lib/human.c", "binary_file1": "dd.json", "binary_file2": "sum.json"}
{"fname": "human_options", "lineno_map": [[464, 464], [465, 465], [467, 467], [468, 468]], "source_code_file": "lib/human.c", "binary_file1": "dd.json", "binary_file2": "sum.json"}
{"fname": "record_file", "lineno_map": [[33, 33], [36, 36], [37, 37], [38, 38], [39, 39], [42, 42], [43, 43], [46, 46], [49, 49], [53, 53]], "source_code_file": "lib/file-set.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "seen_file", "lineno_map": [[66, 66], [69, 69], [70, 70], [71, 71]], "source_code_file": "lib/file-set.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "qset_acl", "lineno_map": [[44, 44], [45, 45], [46, 46], [47, 47]], "source_code_file": "lib/qset-acl.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "mbsstr_trimmed_wordbounded", "lineno_map": [[57, 57], [58, 58], [60, 60], [62, 62], [63, 63], [67, 67], [73, 73], [74, 74], [75, 75], [80, 80], [81, 81], [82, 82], [83, 83], [85, 85], [86, 86], [87, 87], [90, 90], [94, 94], [95, 95], [96, 96], [98, 98], [99, 99], [100, 100], [103, 103], [104, 104], [106, 106], [107, 107], [108, 108], [111, 111], [113, 113], [117, 117], [118, 118], [120, 120], [128, 128], [129, 129], [130, 130], [131, 131], [133, 133], [134, 134], [135, 135], [136, 136], [137, 137], [139, 139], [141, 141], [145, 145], [147, 147], [151, 151]], "source_code_file": "lib/propername.c", "binary_file1": "ptx.json", "binary_file2": "ptx.json"}
{"fname": "proper_name", "lineno_map": [[161, 161], [163, 163], [166, 166], [171, 171], [172, 172], [174, 174]], "source_code_file": "lib/propername.c", "binary_file1": "ptx.json", "binary_file2": "ptx.json"}
{"fname": "proper_name_utf8", "lineno_map": [[191, 191], [194, 194], [195, 195], [196, 196], [197, 197], [198, 198], [201, 201], [204, 204], [213, 213], [214, 214], [215, 215], [216, 216], [218, 218], [221, 221], [223, 223], [230, 230], [231, 231], [234, 234], [243, 243], [244, 244], [248, 248], [249, 249], [255, 255], [258, 258], [259, 259], [260, 260], [261, 261], [262, 262], [264, 264], [265, 265], [266, 266], [267, 267], [273, 273], [274, 274], [276, 276], [278, 278], [279, 279], [280, 280], [281, 281], [287, 287], [288, 288], [289, 289], [290, 290], [291, 291]], "source_code_file": "lib/propername.c", "binary_file1": "ptx.json", "binary_file2": "ptx.json"}
{"fname": "openat_proc_name", "lineno_map": [[46, 46], [50, 50], [52, 52], [66, 66], [76, 76], [78, 78], [79, 79], [88, 88], [89, 89], [90, 90], [94, 94], [98, 98], [99, 99], [101, 101], [102, 102], [106, 106], [132, 132]], "source_code_file": "lib/openat-proc.c", "binary_file1": "chcon.json", "binary_file2": "chcon.json"}
{"fname": "freadptr", "lineno_map": [[37, 37], [39, 39], [40, 40], [42, 42]], "source_code_file": "lib/freadptr.c", "binary_file1": "cut.json", "binary_file2": "cut.json"}
{"fname": "mfile_name_concat", "lineno_map": [[49, 49], [50, 50], [51, 51], [52, 52], [53, 53], [54, 54], [57, 57], [58, 58], [60, 60], [67, 67], [70, 70], [73, 73], [76, 76], [77, 77], [78, 78], [80, 80], [81, 81], [83, 83], [84, 84]], "source_code_file": "lib/filenamecat-lgpl.c", "binary_file1": "tac.json", "binary_file2": "tac.json"}
{"fname": "fdadvise", "lineno_map": [[34, 34]], "source_code_file": "lib/fadvise.c", "binary_file1": "base32.json", "binary_file2": "base32.json"}
{"fname": "fadvise", "lineno_map": [[41, 41], [42, 42]], "source_code_file": "lib/fadvise.c", "binary_file1": "base32.json", "binary_file2": "base32.json"}
{"fname": "call_chunkfun", "lineno_map": [[86, 86]], "source_code_file": "lib/obstack.c", "binary_file1": "dircolors.json", "binary_file2": "dircolors.json"}
{"fname": "call_freefun", "lineno_map": [[95, 95], [96, 96], [98, 98]], "source_code_file": "lib/obstack.c", "binary_file1": "dircolors.json", "binary_file2": "dircolors.json"}
{"fname": "_obstack_begin_worker", "lineno_map": [[114, 114], [115, 115], [116, 116], [127, 127], [130, 130], [133, 133], [134, 134], [136, 136], [137, 137], [138, 138], [139, 139], [141, 141], [142, 142], [144, 144], [145, 145]], "source_code_file": "lib/obstack.c", "binary_file1": "dircolors.json", "binary_file2": "dircolors.json"}
{"fname": "_obstack_begin", "lineno_map": [[155, 155], [156, 156], [157, 157]], "source_code_file": "lib/obstack.c", "binary_file1": "dircolors.json", "binary_file2": "dircolors.json"}
{"fname": "_obstack_begin_1", "lineno_map": [[168, 168], [169, 169], [170, 170], [171, 171]], "source_code_file": "lib/obstack.c", "binary_file1": "dircolors.json", "binary_file2": "dircolors.json"}
{"fname": "_obstack_newchunk", "lineno_map": [[184, 184], [185, 185], [186, 186], [190, 190], [191, 191], [192, 192], [193, 193], [194, 194], [195, 195], [196, 196], [199, 199], [200, 200], [201, 201], [202, 202], [203, 203], [204, 204], [205, 205], [208, 208], [209, 209], [212, 212], [217, 217], [218, 218], [219, 219], [222, 222], [223, 223], [226, 226], [227, 227], [229, 229]], "source_code_file": "lib/obstack.c", "binary_file1": "dircolors.json", "binary_file2": "dircolors.json"}
{"fname": "_obstack_allocated_p", "lineno_map": [[246, 246], [250, 250], [252, 252], [253, 253]], "source_code_file": "lib/obstack.c", "binary_file1": "dircolors.json", "binary_file2": "dircolors.json"}
{"fname": "_obstack_free", "lineno_map": [[267, 267], [271, 271], [273, 273], [274, 274], [275, 275], [278, 278], [280, 280], [282, 282], [283, 283], [284, 284], [286, 286], [288, 288]], "source_code_file": "lib/obstack.c", "binary_file1": "dircolors.json", "binary_file2": "dircolors.json"}
{"fname": "_obstack_memory_used", "lineno_map": [[295, 295], [297, 297], [299, 299]], "source_code_file": "lib/obstack.c", "binary_file1": "dircolors.json", "binary_file2": "dircolors.json"}
{"fname": "print_and_abort", "lineno_map": [[340, 340], [342, 342]], "source_code_file": "lib/obstack.c", "binary_file1": "dircolors.json", "binary_file2": "dircolors.json"}
{"fname": "seen_triple", "lineno_map": [[72, 72], [74, 74], [75, 75], [80, 80], [81, 81], [84, 84], [87, 87]], "source_code_file": "lib/canonicalize.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "canonicalize_filename_mode", "lineno_map": [[101, 101], [105, 105], [106, 106], [108, 108], [109, 109], [112, 112], [114, 114], [116, 116], [120, 120], [122, 122], [126, 126], [128, 128], [134, 134], [136, 136], [138, 138], [139, 139], [141, 141], [142, 142], [144, 144], [145, 145], [146, 146], [147, 147], [151, 151], [153, 153], [154, 154], [158, 158], [159, 159], [160, 160], [161, 161], [163, 163], [164, 164], [166, 166], [173, 173], [176, 176], [179, 179], [180, 180], [183, 183], [186, 186], [188, 188], [190, 190], [193, 193], [194, 194], [196, 196], [204, 204], [205, 205], [207, 207], [209, 209], [210, 210], [212, 212], [213, 213], [215, 215], [216, 216], [217, 217], [219, 219], [222, 222], [223, 223], [224, 224], [226, 226], [231, 231], [233, 233], [236, 236], [237, 237], [239, 239], [241, 241], [243, 243], [245, 245], [248, 248], [257, 257], [259, 259], [260, 260], [261, 261], [265, 265], [266, 266], [268, 268], [269, 269], [270, 270], [274, 274], [275, 275], [277, 277], [279, 279], [280, 280], [281, 281], [283, 283], [285, 285], [286, 286], [290, 290], [291, 291], [293, 293], [295, 295], [297, 297], [298, 298], [299, 299], [300, 300], [308, 308], [314, 314], [315, 315], [322, 322], [326, 326], [328, 328], [334, 334], [335, 335], [339, 339], [340, 340], [341, 341], [343, 343], [344, 344], [345, 345], [349, 349], [350, 350], [351, 351], [352, 352], [353, 353]], "source_code_file": "lib/canonicalize.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "strnlen1", "lineno_map": [[30, 30], [31, 31]], "source_code_file": "lib/strnlen1.c", "binary_file1": "expr.json", "binary_file2": "ptx.json"}
{"fname": "set_simple_backup_suffix", "lineno_map": [[87, 87], [88, 88], [89, 89]], "source_code_file": "lib/backupfile.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "check_extension", "lineno_map": [[100, 100], [101, 101], [102, 102], [104, 104], [112, 112], [113, 113], [114, 114], [115, 115], [116, 116], [118, 118], [119, 119], [120, 120], [122, 122], [140, 140], [142, 142], [143, 143], [144, 144], [145, 145], [146, 146]], "source_code_file": "lib/backupfile.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "numbered_backup", "lineno_map": [[189, 189], [190, 190], [192, 192], [193, 193], [194, 194], [195, 195], [197, 197], [198, 198], [204, 204], [205, 205], [206, 206], [207, 207], [208, 208], [209, 209], [210, 210], [211, 211], [213, 213], [216, 216], [223, 223], [224, 224], [226, 226], [227, 227], [229, 229], [235, 235], [236, 236], [237, 237], [238, 238], [239, 239], [241, 241], [243, 243], [244, 244], [245, 245], [251, 251], [252, 252], [253, 253], [254, 254], [256, 256], [257, 257], [258, 258], [259, 259], [261, 261], [264, 264], [265, 265], [267, 267], [268, 268], [269, 269], [270, 270], [271, 271], [272, 272], [276, 276], [277, 277], [278, 278], [279, 279], [282, 282]], "source_code_file": "lib/backupfile.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "backupfile_internal", "lineno_map": [[294, 294], [295, 295], [297, 297], [298, 298], [302, 302], [303, 303], [305, 305], [306, 306], [308, 308], [309, 309], [310, 310], [313, 313], [316, 316], [318, 318], [319, 319], [321, 321], [327, 327], [329, 329], [330, 330], [333, 333], [337, 337], [341, 341], [342, 342], [346, 346], [349, 349], [350, 350], [352, 352], [353, 353], [355, 355], [356, 356], [358, 358], [359, 359], [361, 361], [362, 362], [363, 363], [364, 364], [369, 369], [370, 370]], "source_code_file": "lib/backupfile.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "safe_read", "lineno_map": [[60, 60], [62, 62], [64, 64], [65, 65], [66, 66], [67, 67]], "source_code_file": "lib/safe-read.c", "binary_file1": "tac.json", "binary_file2": "tac.json"}
{"fname": "get_permissions", "lineno_map": [[36, 36], [37, 37]], "source_code_file": "lib/get-permissions.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "xset_binary_mode_error", "lineno_map": [[33, 33]], "source_code_file": "lib/xbinary-io.c", "binary_file1": "base32.json", "binary_file2": "base32.json"}
{"fname": "last_component", "lineno_map": [[32, 32], [34, 34], [36, 36], [37, 37], [39, 39], [41, 41], [42, 42], [43, 43], [45, 45], [46, 46]], "source_code_file": "lib/basename-lgpl.c", "binary_file1": "mkdir.json", "binary_file2": "mkdir.json"}
{"fname": "base_len", "lineno_map": [[61, 61], [63, 63]], "source_code_file": "lib/basename-lgpl.c", "binary_file1": "mkdir.json", "binary_file2": "mkdir.json"}
{"fname": "getuser", "lineno_map": [[72, 72], [74, 74], [76, 76], [78, 78], [83, 83], [85, 85], [86, 86], [87, 87], [88, 88], [89, 89], [92, 92], [93, 93]], "source_code_file": "lib/idcache.c", "binary_file1": "ls.json", "binary_file2": "vdir.json"}
{"fname": "getuidbyname", "lineno_map": [[110, 110], [112, 112], [115, 115], [117, 117], [120, 120], [131, 131], [132, 132], [135, 135], [137, 137], [138, 138], [139, 139], [143, 143], [144, 144]], "source_code_file": "lib/idcache.c", "binary_file1": "ls.json", "binary_file2": "vdir.json"}
{"fname": "getgroup", "lineno_map": [[154, 154], [156, 156], [158, 158], [160, 160], [165, 165], [167, 167], [168, 168], [169, 169], [170, 170], [171, 171], [174, 174], [175, 175]], "source_code_file": "lib/idcache.c", "binary_file1": "ls.json", "binary_file2": "vdir.json"}
{"fname": "getgidbyname", "lineno_map": [[192, 192], [194, 194], [197, 197], [199, 199], [202, 202], [213, 213], [214, 214], [217, 217], [219, 219], [220, 220], [221, 221], [225, 225], [226, 226]], "source_code_file": "lib/idcache.c", "binary_file1": "ls.json", "binary_file2": "vdir.json"}
{"fname": "match_suffix", "lineno_map": [[36, 36], [37, 37], [38, 38], [40, 40], [42, 42], [43, 43], [44, 44], [46, 46], [48, 48], [49, 49], [50, 50], [52, 52], [53, 53], [54, 54]], "source_code_file": "lib/filevercmp.c", "binary_file1": "sort.json", "binary_file2": "vdir.json"}
{"fname": "order", "lineno_map": [[63, 63], [65, 65], [67, 67]], "source_code_file": "lib/filevercmp.c", "binary_file1": "sort.json", "binary_file2": "vdir.json"}
{"fname": "verrevcmp", "lineno_map": [[86, 86], [87, 87], [88, 88], [90, 90], [91, 91], [92, 92], [94, 94], [95, 95], [96, 96], [98, 98], [99, 99], [101, 101], [102, 102], [103, 103], [104, 104], [105, 105], [107, 107], [108, 108], [109, 109], [110, 110], [112, 112], [114, 114], [116, 116]], "source_code_file": "lib/filevercmp.c", "binary_file1": "sort.json", "binary_file2": "vdir.json"}
{"fname": "filevercmp", "lineno_map": [[134, 134], [135, 135], [139, 139], [141, 141], [143, 143], [145, 145], [147, 147], [149, 149], [153, 153], [155, 155], [157, 157], [159, 159], [160, 160], [164, 164], [165, 165], [166, 166], [167, 167], [168, 168], [169, 169], [172, 172], [173, 173], [175, 175], [176, 176], [179, 179]], "source_code_file": "lib/filevercmp.c", "binary_file1": "sort.json", "binary_file2": "vdir.json"}
{"fname": "careadlinkat", "lineno_map": [[71, 71], [75, 75], [76, 76], [78, 78], [84, 84], [85, 85], [88, 88], [89, 89], [94, 94], [96, 96], [100, 100], [101, 101], [103, 103], [105, 105], [106, 106], [112, 112], [114, 114], [116, 116], [118, 118], [120, 120], [121, 121], [122, 122], [124, 124], [125, 125], [127, 127], [130, 130], [131, 131], [132, 132], [138, 138], [139, 139], [141, 141], [142, 142], [143, 143], [144, 144], [145, 145], [147, 147], [152, 152], [154, 154], [156, 156], [157, 157], [158, 158]], "source_code_file": "lib/careadlinkat.c", "binary_file1": "stdbuf.json", "binary_file2": "stdbuf.json"}
{"fname": "locale_charset", "lineno_map": [[696, 696], [754, 754], [756, 756], [907, 907], [908, 908]], "source_code_file": "lib/localcharset.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "settime", "lineno_map": [[36, 36], [37, 37], [46, 46], [47, 47]], "source_code_file": "lib/settime.c", "binary_file1": "date.json", "binary_file2": "date.json"}
{"fname": "realloc_groupbuf", "lineno_map": [[45, 45], [47, 47]], "source_code_file": "lib/mgetgroups.c", "binary_file1": "chroot.json", "binary_file2": "chroot.json"}
{"fname": "mgetgroups", "lineno_map": [[81, 81], [84, 84], [86, 86], [87, 87], [93, 93], [96, 96], [100, 100], [101, 101], [103, 103], [105, 105], [106, 106], [107, 107], [110, 110], [112, 112], [114, 114], [124, 124], [126, 126], [131, 131], [133, 133], [135, 135], [136, 136], [142, 142], [143, 143], [144, 144], [145, 145], [148, 148], [149, 149], [150, 150], [151, 151], [153, 153], [156, 156], [157, 157], [158, 158], [162, 162], [164, 164], [165, 165], [167, 167], [185, 185], [187, 187], [189, 189], [191, 191], [193, 193], [194, 194], [196, 196]], "source_code_file": "lib/mgetgroups.c", "binary_file1": "chroot.json", "binary_file2": "chroot.json"}
{"fname": "ftoastr", "lineno_map": [[113, 113], [115, 115], [118, 118], [119, 119], [122, 122], [123, 123], [124, 124], [125, 125], [127, 127], [128, 128], [129, 129], [130, 130], [131, 131], [132, 132], [134, 134], [136, 136], [137, 137], [138, 138], [139, 139]], "source_code_file": "lib/ftoastr.c", "binary_file1": "od.json", "binary_file2": "od.json"}
{"fname": "time_overflow", "lineno_map": [[126, 126], [127, 127], [129, 129]], "source_code_file": "lib/parse-datetime.c", "binary_file1": "touch.json", "binary_file2": "touch.json"}
{"fname": "to_uchar", "lineno_map": [[134, 134]], "source_code_file": "lib/parse-datetime.c", "binary_file1": "touch.json", "binary_file2": "touch.json"}
{"fname": "dbg_printf", "lineno_map": [[138, 138], [141, 141], [143, 143], [144, 144], [146, 146]], "source_code_file": "lib/parse-datetime.c", "binary_file1": "touch.json", "binary_file2": "touch.json"}
{"fname": "digits_to_date_time", "lineno_map": [[264, 264], [265, 265], [266, 266], [268, 268], [269, 269], [273, 273], [275, 275], [276, 276], [277, 277], [278, 278], [279, 279], [283, 283], [284, 284], [286, 286], [287, 287], [291, 291], [292, 292], [294, 294], [295, 295], [296, 296], [299, 299]], "source_code_file": "lib/parse-datetime.c", "binary_file1": "touch.json", "binary_file2": "touch.json"}
{"fname": "apply_relative_time", "lineno_map": [[305, 305], [306, 306], [307, 307], [308, 308], [309, 309], [310, 310], [311, 311], [312, 312], [313, 313], [314, 314], [315, 315], [316, 316], [317, 317], [318, 318], [319, 319], [320, 320], [321, 321], [322, 322], [323, 323], [324, 324]], "source_code_file": "lib/parse-datetime.c", "binary_file1": "touch.json", "binary_file2": "touch.json"}
{"fname": "set_hhmmss", "lineno_map": [[330, 330], [331, 331], [333, 333], [334, 334]], "source_code_file": "lib/parse-datetime.c", "binary_file1": "touch.json", "binary_file2": "touch.json"}
{"fname": "str_days", "lineno_map": [[341, 341], [374, 374], [377, 377], [378, 378], [379, 379], [383, 383], [384, 384], [390, 390], [396, 396]], "source_code_file": "lib/parse-datetime.c", "binary_file1": "touch.json", "binary_file2": "touch.json"}
{"fname": "time_zone_str", "lineno_map": [[404, 404], [405, 405], [407, 407], [408, 408], [409, 409], [410, 410], [412, 412], [413, 413], [414, 414], [415, 415], [416, 416], [417, 417], [419, 419], [420, 420], [421, 421], [423, 423], [425, 425], [426, 426]], "source_code_file": "lib/parse-datetime.c", "binary_file1": "touch.json", "binary_file2": "touch.json"}
{"fname": "debug_print_current_time", "lineno_map": [[433, 433], [434, 434], [436, 436], [437, 437], [442, 442], [448, 448], [451, 451], [453, 453], [454, 454], [455, 455], [458, 458], [463, 463], [464, 464], [466, 466], [468, 468], [471, 471], [472, 472], [474, 474], [475, 475], [478, 478], [480, 480], [481, 481], [486, 486], [492, 492], [494, 494], [495, 495], [496, 496], [497, 497], [500, 500], [503, 503], [505, 505], [506, 506], [509, 509], [511, 511], [512, 512], [513, 513], [518, 518]], "source_code_file": "lib/parse-datetime.c", "binary_file1": "touch.json", "binary_file2": "touch.json"}
{"fname": "print_rel_part", "lineno_map": [[525, 525], [526, 526], [528, 528], [529, 529]], "source_code_file": "lib/parse-datetime.c", "binary_file1": "touch.json", "binary_file2": "touch.json"}
{"fname": "debug_print_relative_time", "lineno_map": [[533, 533], [534, 534], [536, 536], [537, 537], [540, 540], [542, 542], [543, 543], [547, 547], [548, 548], [551, 551], [552, 552], [554, 554], [555, 555], [556, 556], [557, 557], [559, 559], [560, 560]], "source_code_file": "lib/parse-datetime.c", "binary_file1": "touch.json", "binary_file2": "touch.json"}
{"fname": "yydestruct", "lineno_map": [[1636, 1636], [1637, 1637]], "source_code_file": "lib/parse-datetime.c", "binary_file1": "touch.json", "binary_file2": "touch.json"}
{"fname": "yyparse", "lineno_map": [[611, 611], [612, 612], [624, 624], [629, 629], [630, 630], [634, 634], [635, 635], [639, 639], [640, 640], [644, 644], [645, 645], [649, 649], [650, 650], [654, 654], [658, 658], [662, 662], [677, 677], [678, 678], [682, 682], [683, 683], [687, 687], [688, 688], [696, 696], [697, 697], [701, 701], [702, 702], [706, 706], [707, 707], [719, 719], [720, 720], [743, 743], [746, 746], [747, 747], [755, 755], [757, 757], [759, 759], [760, 760], [761, 761], [764, 764], [765, 765], [766, 766], [769, 769], [770, 770], [772, 772], [774, 774], [780, 780], [781, 781], [785, 785], [786, 786], [790, 790], [791, 791], [792, 792], [796, 796], [797, 797], [798, 798], [805, 805], [806, 806], [815, 815], [817, 817], [819, 819], [820, 820], [822, 822], [825, 825], [826, 826], [827, 827], [831, 831], [832, 832], [834, 834], [836, 836], [837, 837], [838, 838], [844, 844], [845, 845], [846, 846], [847, 847], [852, 852], [853, 853], [854, 854], [855, 855], [859, 859], [860, 860], [864, 864], [865, 865], [866, 866], [870, 870], [871, 871], [875, 875], [876, 876], [877, 877], [886, 886], [887, 887], [888, 888], [894, 894], [896, 896], [898, 898], [903, 903], [905, 905], [907, 907], [909, 909], [911, 911], [913, 913], [915, 915], [916, 916], [918, 918], [921, 921], [923, 923], [925, 925], [927, 927], [929, 929], [931, 931], [933, 933], [935, 935], [937, 937], [939, 939], [941, 941], [943, 943], [949, 949], [951, 951], [953, 953], [954, 954], [956, 956], [958, 958], [960, 960], [965, 965], [973, 973], [974, 974], [980, 980], [981, 981], [986, 986], [994, 994], [995, 995], [1001, 1001], [1003, 1003], [1694, 1694], [1710, 1710], [1712, 1712], [1713, 1713], [1714, 1714], [1718, 1718], [1719, 1719], [1720, 1720], [1721, 1721], [1730, 1730], [1733, 1733], [1735, 1735], [1738, 1738], [1765, 1765], [1767, 1767], [1768, 1768], [1769, 1769], [1772, 1772], [1773, 1773], [1774, 1774], [1775, 1775], [1777, 1777], [1778, 1778], [1780, 1780], [1781, 1781], [1786, 1786], [1787, 1787], [1792, 1792], [1793, 1793], [1798, 1798], [1799, 1799], [1812, 1812], [1813, 1813], [1819, 1819], [1822, 1822], [1825, 1825], [1827, 1827], [1832, 1832], [1838, 1838], [1839, 1839], [1841, 1841], [1842, 1842], [1846, 1846], [1852, 1852], [1853, 1853], [1859, 1859], [1861, 1861], [1863, 1863], [1873, 1873], [1874, 1874], [1884, 1884], [1894, 1894], [1898, 1898], [2500, 2500], [2515, 2515], [2516, 2516], [2519, 2519], [2525, 2525], [2527, 2527], [2528, 2528], [2529, 2529], [2531, 2531], [2542, 2542], [2545, 2545], [2547, 2547], [2549, 2549], [2586, 2586], [2591, 2591], [2594, 2594], [2595, 2595], [2599, 2599], [2601, 2601], [2634, 2634], [2638, 2638], [2639, 2639], [2641, 2641], [2642, 2642], [2644, 2644], [2645, 2645], [2651, 2651], [2652, 2652], [2655, 2655], [2656, 2656], [2657, 2657], [2658, 2658], [2663, 2663], [2670, 2670], [2678, 2678], [2685, 2685], [2693, 2693], [2694, 2694], [2699, 2699], [2703, 2703], [2704, 2704], [2709, 2709], [2711, 2711], [2713, 2713], [2714, 2714], [2715, 2715], [2718, 2718], [2719, 2719]], "source_code_file": "lib/parse-datetime.c", "binary_file1": "touch.json", "binary_file2": "touch.json"}
{"fname": "time_zone_hhmm", "lineno_map": [[1206, 1206], [1212, 1212], [1213, 1213], [1215, 1215], [1216, 1216], [1219, 1219], [1220, 1220], [1221, 1221], [1222, 1222], [1225, 1225], [1226, 1226], [1227, 1227], [1228, 1228], [1229, 1229]], "source_code_file": "lib/parse-datetime.c", "binary_file1": "touch.json", "binary_file2": "touch.json"}
{"fname": "to_hour", "lineno_map": [[1233, 1233], [1234, 1234], [1238, 1238], [1240, 1240], [1244, 1244]], "source_code_file": "lib/parse-datetime.c", "binary_file1": "touch.json", "binary_file2": "touch.json"}
{"fname": "tm_year_str", "lineno_map": [[1254, 1254], [1256, 1256], [1257, 1257], [1258, 1258], [1259, 1259], [1260, 1260]], "source_code_file": "lib/parse-datetime.c", "binary_file1": "touch.json", "binary_file2": "touch.json"}
{"fname": "to_tm_year", "lineno_map": [[1267, 1267], [1268, 1268], [1272, 1272], [1274, 1274], [1275, 1275], [1276, 1276], [1281, 1281], [1282, 1282], [1283, 1283], [1285, 1285], [1286, 1286], [1287, 1287], [1290, 1290], [1291, 1291]], "source_code_file": "lib/parse-datetime.c", "binary_file1": "touch.json", "binary_file2": "touch.json"}
{"fname": "lookup_zone", "lineno_map": [[1298, 1298], [1299, 1299], [1304, 1304], [1305, 1305], [1308, 1308], [1309, 1309], [1310, 1310], [1312, 1312], [1313, 1313]], "source_code_file": "lib/parse-datetime.c", "binary_file1": "touch.json", "binary_file2": "touch.json"}
{"fname": "lookup_word", "lineno_map": [[1344, 1344], [1354, 1354], [1356, 1356], [1357, 1357], [1358, 1358], [1362, 1362], [1364, 1364], [1365, 1365], [1366, 1366], [1371, 1371], [1372, 1372], [1374, 1374], [1375, 1375], [1376, 1376], [1379, 1379], [1381, 1381], [1382, 1382], [1383, 1383], [1384, 1384], [1385, 1385], [1388, 1388], [1389, 1389], [1390, 1390], [1393, 1393], [1394, 1394], [1395, 1395], [1396, 1396], [1399, 1399], [1400, 1400], [1401, 1401], [1403, 1403], [1404, 1404], [1405, 1405], [1407, 1407], [1408, 1408]], "source_code_file": "lib/parse-datetime.c", "binary_file1": "touch.json", "binary_file2": "touch.json"}
{"fname": "yylex", "lineno_map": [[1412, 1412], [1417, 1417], [1420, 1420], [1424, 1424], [1425, 1425], [1427, 1427], [1428, 1428], [1429, 1429], [1430, 1430], [1432, 1432], [1435, 1435], [1436, 1436], [1440, 1440], [1441, 1441], [1442, 1442], [1443, 1443], [1444, 1444], [1446, 1446], [1448, 1448], [1454, 1454], [1456, 1456], [1459, 1459], [1460, 1460], [1463, 1463], [1465, 1465], [1469, 1469], [1470, 1470], [1471, 1471], [1473, 1473], [1476, 1476], [1477, 1477], [1484, 1484], [1486, 1486], [1490, 1490], [1491, 1491], [1492, 1492], [1493, 1493], [1497, 1497], [1498, 1498], [1499, 1499], [1500, 1500], [1501, 1501], [1505, 1505], [1508, 1508], [1513, 1513], [1514, 1514], [1515, 1515], [1517, 1517], [1519, 1519], [1520, 1520], [1521, 1521], [1523, 1523], [1524, 1524], [1525, 1525], [1527, 1527], [1528, 1528], [1531, 1531], [1532, 1532], [1534, 1534], [1537, 1537], [1539, 1539], [1540, 1540], [1541, 1541], [1543, 1543], [1545, 1545], [1546, 1546], [1547, 1547]], "source_code_file": "lib/parse-datetime.c", "binary_file1": "touch.json", "binary_file2": "touch.json"}
{"fname": "yyerror", "lineno_map": [[1553, 1553], [1554, 1554]], "source_code_file": "lib/parse-datetime.c", "binary_file1": "touch.json", "binary_file2": "touch.json"}
{"fname": "mktime_ok", "lineno_map": [[1564, 1564], [1566, 1566], [1573, 1573], [1576, 1576], [1577, 1577], [1578, 1578], [1579, 1579], [1580, 1580], [1581, 1581], [1582, 1582]], "source_code_file": "lib/parse-datetime.c", "binary_file1": "touch.json", "binary_file2": "touch.json"}
{"fname": "debug_strfdatetime", "lineno_map": [[1617, 1617], [1619, 1619], [1626, 1626], [1628, 1628], [1629, 1629]], "source_code_file": "lib/parse-datetime.c", "binary_file1": "touch.json", "binary_file2": "touch.json"}
{"fname": "debug_mktime_not_ok", "lineno_map": [[1663, 1663], [1667, 1667], [1668, 1668], [1669, 1669], [1670, 1670], [1671, 1671], [1672, 1672], [1674, 1674], [1675, 1675], [1677, 1677], [1678, 1678], [1680, 1680], [1681, 1681], [1683, 1683], [1687, 1687], [1696, 1696], [1698, 1698], [1699, 1699], [1700, 1700], [1701, 1701], [1702, 1702], [1704, 1704], [1706, 1706], [1707, 1707], [1708, 1708], [1709, 1709], [1710, 1710], [1711, 1711], [1712, 1712], [1714, 1714]], "source_code_file": "lib/parse-datetime.c", "binary_file1": "touch.json", "binary_file2": "touch.json"}
{"fname": "parse_datetime", "lineno_map": [[1720, 1720], [1721, 1721], [1723, 1723], [1724, 1724], [1725, 1725], [1726, 1726], [1727, 1727], [1728, 1728]], "source_code_file": "lib/parse-datetime.c", "binary_file1": "touch.json", "binary_file2": "touch.json"}
{"fname": "parse_datetime2", "lineno_map": [[1739, 1739], [1744, 1744], [1745, 1745], [1746, 1746], [1754, 1754], [1756, 1756], [1757, 1757], [1760, 1760], [1761, 1761], [1764, 1764], [1765, 1765], [1767, 1767], [1772, 1772], [1774, 1774], [1777, 1777], [1780, 1780], [1781, 1781], [1783, 1783], [1784, 1784], [1785, 1785], [1787, 1787], [1790, 1790], [1792, 1792], [1795, 1795], [1796, 1796], [1797, 1797], [1799, 1799], [1800, 1800], [1802, 1802], [1803, 1803], [1804, 1804], [1805, 1805], [1806, 1806], [1807, 1807], [1809, 1809], [1810, 1810], [1811, 1811], [1813, 1813], [1818, 1818], [1819, 1819], [1824, 1824], [1825, 1825], [1828, 1828], [1830, 1830], [1832, 1832], [1833, 1833], [1836, 1836], [1837, 1837], [1838, 1838], [1839, 1839], [1841, 1841], [1842, 1842], [1846, 1846], [1849, 1849], [1850, 1850], [1851, 1851], [1852, 1852], [1853, 1853], [1854, 1854], [1855, 1855], [1856, 1856], [1857, 1857], [1858, 1858], [1859, 1859], [1860, 1860], [1861, 1861], [1862, 1862], [1865, 1865], [1867, 1867], [1868, 1868], [1874, 1874], [1877, 1877], [1878, 1878], [1880, 1880], [1882, 1882], [1883, 1883], [1886, 1886], [1887, 1887], [1888, 1888], [1889, 1889], [1891, 1891], [1916, 1916], [1922, 1922], [1923, 1923], [1928, 1928], [1929, 1929], [1941, 1941], [1943, 1943], [1945, 1945], [1946, 1946], [1947, 1947], [1949, 1949], [1950, 1950], [1954, 1954], [1965, 1965], [1969, 1969], [1971, 1971], [1975, 1975], [1979, 1979], [1981, 1981], [1983, 1983], [1985, 1985], [1987, 1987], [1988, 1988], [1989, 1989], [1991, 1991], [1992, 1992], [1994, 1994], [1997, 1997], [1998, 1998], [2001, 2001], [2003, 2003], [2005, 2005], [2007, 2007], [2010, 2010], [2012, 2012], [2015, 2015], [2018, 2018], [2019, 2019], [2027, 2027], [2028, 2028], [2030, 2030], [2034, 2034], [2039, 2039], [2042, 2042], [2043, 2043], [2045, 2045], [2046, 2046], [2048, 2048], [2050, 2050], [2052, 2052], [2054, 2054], [2056, 2056], [2069, 2069], [2071, 2071], [2072, 2072], [2074, 2074], [2075, 2075], [2078, 2078], [2079, 2079], [2080, 2080], [2081, 2081], [2082, 2082], [2084, 2084], [2086, 2086], [2087, 2087], [2090, 2090], [2093, 2093], [2099, 2099], [2102, 2102], [2106, 2106], [2108, 2108], [2109, 2109], [2112, 2112], [2116, 2116], [2118, 2118], [2119, 2119], [2130, 2130], [2136, 2136], [2138, 2138], [2142, 2142], [2143, 2143], [2147, 2147], [2152, 2152], [2154, 2154], [2156, 2156], [2157, 2157], [2161, 2161], [2162, 2162], [2167, 2167], [2168, 2168], [2169, 2169], [2172, 2172], [2175, 2175], [2176, 2176], [2177, 2177], [2179, 2179], [2180, 2180], [2181, 2181], [2182, 2182], [2186, 2186], [2190, 2190], [2193, 2193], [2199, 2199], [2217, 2217], [2218, 2218], [2233, 2233], [2235, 2235], [2237, 2237], [2242, 2242], [2252, 2252], [2254, 2254], [2255, 2255], [2265, 2265], [2266, 2266], [2267, 2267], [2269, 2269], [2272, 2272], [2274, 2274], [2277, 2277], [2279, 2279], [2280, 2280], [2295, 2295], [2296, 2296], [2297, 2297], [2299, 2299], [2301, 2301], [2302, 2302], [2303, 2303], [2304, 2304], [2305, 2305], [2307, 2307], [2308, 2308], [2310, 2310], [2313, 2313], [2314, 2314], [2316, 2316], [2317, 2317], [2319, 2319], [2339, 2339], [2340, 2340], [2346, 2346], [2349, 2349], [2351, 2351], [2352, 2352], [2354, 2354], [2357, 2357], [2358, 2358], [2363, 2363], [2364, 2364], [2367, 2367], [2370, 2370], [2371, 2371], [2378, 2378], [2379, 2379], [2383, 2383], [2388, 2388], [2391, 2391], [2393, 2393], [2394, 2394], [2395, 2395]], "source_code_file": "lib/parse-datetime.c", "binary_file1": "touch.json", "binary_file2": "touch.json"}
{"fname": "errno_fail", "lineno_map": [[35, 35]], "source_code_file": "lib/renameat2.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "renameat2", "lineno_map": [[77, 77], [78, 78], [81, 81], [82, 82], [93, 93], [100, 100], [101, 101], [104, 104], [107, 107], [109, 109], [112, 112], [118, 118], [120, 120], [122, 122], [127, 127], [128, 128], [129, 129], [132, 132], [133, 133], [134, 134], [141, 141], [143, 143], [145, 145], [148, 148], [150, 150], [153, 153], [155, 155], [208, 208], [209, 209], [212, 212], [213, 213], [214, 214], [215, 215], [216, 216]], "source_code_file": "lib/renameat2.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "dir_name", "lineno_map": [[34, 34], [35, 35], [36, 36]], "source_code_file": "lib/dirname.c", "binary_file1": "stdbuf.json", "binary_file2": "stdbuf.json"}
{"fname": "__argmatch_die", "lineno_map": [[64, 64]], "source_code_file": "lib/argmatch.c", "binary_file1": "ptx.json", "binary_file2": "ptx.json"}
{"fname": "argmatch", "lineno_map": [[89, 89], [90, 90], [92, 92], [95, 95], [97, 97], [99, 99], [102, 102], [104, 104], [108, 108], [109, 109], [110, 110], [114, 114], [119, 119]], "source_code_file": "lib/argmatch.c", "binary_file1": "ptx.json", "binary_file2": "ptx.json"}
{"fname": "argmatch_invalid", "lineno_map": [[133, 133], [137, 137]], "source_code_file": "lib/argmatch.c", "binary_file1": "ptx.json", "binary_file2": "ptx.json"}
{"fname": "argmatch_valid", "lineno_map": [[150, 150], [154, 154], [155, 155], [156, 156], [157, 157], [159, 159], [160, 160], [164, 164], [166, 166]], "source_code_file": "lib/argmatch.c", "binary_file1": "ptx.json", "binary_file2": "ptx.json"}
{"fname": "__xargmatch_internal", "lineno_map": [[181, 181], [182, 182], [187, 187], [188, 188], [189, 189]], "source_code_file": "lib/argmatch.c", "binary_file1": "ptx.json", "binary_file2": "ptx.json"}
{"fname": "argmatch_to_argument", "lineno_map": [[203, 203], [204, 204]], "source_code_file": "lib/argmatch.c", "binary_file1": "ptx.json", "binary_file2": "ptx.json"}
{"fname": "memchr2", "lineno_map": [[54, 54], [55, 55], [57, 57], [62, 62], [63, 63], [64, 64], [66, 66], [67, 67], [69, 69], [72, 72], [81, 81], [82, 82], [83, 83], [84, 84], [85, 85], [140, 140], [142, 142], [143, 143], [145, 145], [146, 146], [147, 147], [149, 149], [150, 150], [153, 153], [162, 162], [164, 164]], "source_code_file": "lib/memchr2.c", "binary_file1": "cut.json", "binary_file2": "cut.json"}
{"fname": "protect_fd", "lineno_map": [[42, 42], [43, 43], [45, 45], [47, 47], [48, 48]], "source_code_file": "lib/freopen-safer.c", "binary_file1": "ptx.json", "binary_file2": "ptx.json"}
{"fname": "freopen_safer", "lineno_map": [[70, 70], [71, 71], [72, 72], [75, 75], [78, 78], [79, 79], [82, 82], [83, 83], [86, 86], [87, 87], [93, 93], [94, 94], [95, 95], [96, 96], [97, 97], [98, 98], [100, 100], [101, 101], [102, 102], [103, 103], [104, 104], [105, 105], [106, 106], [107, 107], [108, 108], [109, 109]], "source_code_file": "lib/freopen-safer.c", "binary_file1": "ptx.json", "binary_file2": "ptx.json"}
{"fname": "bkm_scale_2", "lineno_map": [[62, 62], [64, 64], [67, 67], [69, 69], [72, 72]], "source_code_file": "lib/xstrtol.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "bkm_scale_by_power_2", "lineno_map": [[79, 79], [80, 80], [81, 81]], "source_code_file": "lib/xstrtol.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "xstrtol", "lineno_map": [[94, 94], [96, 96], [98, 98], [100, 100], [112, 112], [114, 114], [118, 118], [119, 119], [123, 123], [125, 125], [127, 127], [133, 133], [135, 135], [139, 139], [141, 141], [142, 142], [145, 145], [147, 147], [151, 151], [163, 163], [164, 164], [167, 167], [168, 168], [173, 173], [174, 174], [179, 179], [182, 182], [189, 189], [193, 193], [197, 197], [202, 202], [207, 207], [212, 212], [216, 216], [221, 221], [225, 225], [229, 229], [233, 233], [237, 237], [241, 241], [242, 242], [243, 243], [244, 244], [247, 247]], "source_code_file": "lib/xstrtol.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "randread_error", "lineno_map": [[126, 126], [127, 127], [128, 128], [130, 130]], "source_code_file": "lib/randread.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "simple_new", "lineno_map": [[139, 139], [140, 140], [141, 141], [142, 142]], "source_code_file": "lib/randread.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "get_nonce", "lineno_map": [[153, 153], [154, 154], [157, 157], [158, 158], [160, 160], [161, 161], [162, 162], [163, 163], [177, 177], [178, 178], [179, 179], [180, 180], [181, 181]], "source_code_file": "lib/randread.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "randread_new", "lineno_map": [[206, 206], [210, 210], [213, 213], [214, 214], [217, 217], [219, 219], [220, 220], [223, 223], [224, 224], [226, 226]], "source_code_file": "lib/randread.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "randread_set_handler", "lineno_map": [[244, 244]], "source_code_file": "lib/randread.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "randread_set_handler_arg", "lineno_map": [[250, 250]], "source_code_file": "lib/randread.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "readsource", "lineno_map": [[262, 262], [263, 263], [264, 264], [265, 265], [266, 266], [268, 268], [269, 269]], "source_code_file": "lib/randread.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "readisaac", "lineno_map": [[280, 280], [284, 284], [286, 286], [288, 288], [289, 289], [293, 293], [294, 294], [295, 295], [299, 299], [301, 301], [302, 302], [304, 304], [305, 305], [306, 306], [307, 307], [309, 309], [313, 313], [316, 316], [317, 317]], "source_code_file": "lib/randread.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "randread", "lineno_map": [[328, 328], [329, 329], [331, 331]], "source_code_file": "lib/randread.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "randread_free", "lineno_map": [[343, 343], [344, 344], [345, 345]], "source_code_file": "lib/randread.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "file_name_concat", "lineno_map": [[37, 37], [38, 38], [39, 39]], "source_code_file": "lib/filenamecat.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "xfts_open", "lineno_map": [[36, 36], [37, 37], [41, 41], [42, 42]], "source_code_file": "lib/xfts.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "cycle_warning_required", "lineno_map": [[63, 63], [64, 64]], "source_code_file": "lib/xfts.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "mmalloca", "lineno_map": [[48, 48], [50, 50], [52, 52], [54, 54], [56, 56], [57, 57], [58, 58], [59, 59], [65, 65]], "source_code_file": "lib/malloca.c", "binary_file1": "factor.json", "binary_file2": "ptx.json"}
{"fname": "freea", "lineno_map": [[86, 86], [89, 89], [92, 92], [94, 94], [95, 95]], "source_code_file": "lib/malloca.c", "binary_file1": "factor.json", "binary_file2": "ptx.json"}
{"fname": "chmod_or_fchmod", "lineno_map": [[762, 762]], "source_code_file": "lib/set-permissions.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "set_permissions", "lineno_map": [[778, 778], [780, 780], [781, 781], [801, 801], [804, 804], [806, 806], [807, 807], [833, 833], [835, 835], [837, 837], [839, 839], [841, 841], [842, 842]], "source_code_file": "lib/set-permissions.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "readtokens0_init", "lineno_map": [[32, 32], [33, 33], [34, 34], [35, 35], [36, 36], [37, 37]], "source_code_file": "lib/readtokens0.c", "binary_file1": "wc.json", "binary_file2": "wc.json"}
{"fname": "readtokens0_free", "lineno_map": [[43, 43], [44, 44], [45, 45]], "source_code_file": "lib/readtokens0.c", "binary_file1": "wc.json", "binary_file2": "wc.json"}
{"fname": "save_token", "lineno_map": [[54, 54], [55, 55], [56, 56], [57, 57], [58, 58]], "source_code_file": "lib/readtokens0.c", "binary_file1": "wc.json", "binary_file2": "wc.json"}
{"fname": "readtokens0", "lineno_map": [[71, 71], [72, 72], [74, 74], [78, 78], [80, 80], [81, 81], [87, 87], [88, 88], [89, 89], [94, 94], [96, 96], [97, 97]], "source_code_file": "lib/readtokens0.c", "binary_file1": "wc.json", "binary_file2": "wc.json"}
{"fname": "unescape_tab", "lineno_map": [[406, 406], [407, 407], [408, 408], [410, 410], [411, 411], [412, 412], [413, 413], [415, 415], [416, 416], [417, 417], [418, 418], [421, 421]], "source_code_file": "lib/mountlist.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "read_file_system_list", "lineno_map": [[436, 436], [479, 479], [480, 480], [481, 481], [483, 483], [484, 484], [486, 486], [495, 495], [506, 506], [507, 507], [510, 510], [511, 511], [512, 512], [514, 514], [521, 521], [522, 522], [525, 525], [526, 526], [527, 527], [528, 528], [529, 529], [530, 530], [531, 531], [533, 533], [535, 535], [536, 536], [537, 537], [538, 538], [539, 539], [540, 540], [545, 545], [546, 546], [549, 549], [550, 550], [553, 553], [555, 555], [557, 557], [558, 558], [559, 559], [563, 563], [570, 570], [572, 572], [573, 573], [576, 576], [578, 578], [580, 580], [581, 581], [582, 582], [583, 583], [584, 584], [585, 585], [586, 586], [587, 587], [588, 588], [591, 591], [592, 592], [595, 595], [1108, 1108], [1114, 1114], [1115, 1115], [1117, 1117], [1119, 1119], [1120, 1120], [1121, 1121], [1124, 1124]], "source_code_file": "lib/mountlist.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "free_mount_entry", "lineno_map": [[1133, 1133], [1134, 1134], [1135, 1135], [1136, 1136], [1137, 1137], [1138, 1138]], "source_code_file": "lib/mountlist.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "extract_trimmed_name", "lineno_map": [[53, 53], [54, 54], [58, 58], [59, 59], [60, 60], [61, 61]], "source_code_file": "lib/readutmp.c", "binary_file1": "pinky.json", "binary_file2": "pinky.json"}
{"fname": "desirable_utmp_entry", "lineno_map": [[71, 71], [72, 72], [74, 74], [75, 75], [76, 76], [77, 77]], "source_code_file": "lib/readutmp.c", "binary_file1": "pinky.json", "binary_file2": "pinky.json"}
{"fname": "read_utmp", "lineno_map": [[95, 95], [96, 96], [97, 97], [104, 104], [106, 106], [108, 108], [109, 109], [111, 111], [112, 112], [114, 114], [117, 117], [119, 119], [120, 120]], "source_code_file": "lib/readutmp.c", "binary_file1": "pinky.json", "binary_file2": "pinky.json"}
{"fname": "base_name", "lineno_map": [[30, 30], [35, 35], [39, 39], [40, 40], [41, 41]], "source_code_file": "lib/basename.c", "binary_file1": "basename.json", "binary_file2": "basename.json"}
{"fname": "xalloc_die", "lineno_map": [[34, 34], [40, 40]], "source_code_file": "lib/xalloc-die.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "set_program_name", "lineno_map": [[51, 51], [54, 54], [56, 56], [59, 59], [60, 60], [61, 61], [63, 63], [64, 64], [66, 66], [70, 70], [84, 84], [90, 90]], "source_code_file": "lib/progname.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "same_nameat", "lineno_map": [[74, 74], [75, 75], [76, 76], [77, 77], [78, 78], [80, 80], [81, 81], [82, 82], [92, 92], [98, 98], [99, 99], [100, 100], [103, 103], [105, 105], [107, 107], [137, 137], [140, 140], [142, 142], [145, 145]], "source_code_file": "lib/same.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "areadlink_with_size", "lineno_map": [[57, 57], [58, 58], [59, 59], [61, 61], [64, 64], [70, 70], [72, 72], [74, 74], [75, 75], [79, 79], [81, 81], [82, 82], [83, 83], [87, 87], [89, 89], [93, 93], [94, 94], [95, 95], [96, 96], [97, 97], [100, 100]], "source_code_file": "lib/areadlink-with-size.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "savewd_init", "lineno_map": [[80, 80], [81, 81], [82, 82]], "source_code_file": "lib/savewd.c", "binary_file1": "mkdir.json", "binary_file2": "mkdir.json"}
{"fname": "savewd_errno", "lineno_map": [[126, 126], [127, 127]], "source_code_file": "lib/savewd.c", "binary_file1": "mkdir.json", "binary_file2": "mkdir.json"}
{"fname": "savewd_save", "lineno_map": [[53, 53], [58, 58], [59, 59], [61, 61], [62, 62], [65, 65], [67, 67], [68, 68], [72, 72], [73, 73], [76, 76], [81, 81], [82, 82], [84, 84], [86, 86], [87, 87], [99, 99]], "source_code_file": "lib/savewd.c", "binary_file1": "mkdir.json", "binary_file2": "mkdir.json"}
{"fname": "savewd_chdir", "lineno_map": [[109, 109], [110, 110], [114, 114], [117, 117], [119, 119], [121, 121], [123, 123], [124, 124], [127, 127], [128, 128], [131, 131], [133, 133], [135, 135], [136, 136], [140, 140], [142, 142], [143, 143], [146, 146], [155, 155], [159, 159], [164, 164], [166, 166], [167, 167], [168, 168]], "source_code_file": "lib/savewd.c", "binary_file1": "mkdir.json", "binary_file2": "mkdir.json"}
{"fname": "savewd_restore", "lineno_map": [[177, 177], [187, 187], [189, 189], [194, 194], [195, 195], [196, 196], [197, 197], [202, 202], [209, 209], [210, 210], [211, 211], [212, 212], [215, 215], [216, 216], [217, 217], [218, 218], [219, 219], [226, 226]], "source_code_file": "lib/savewd.c", "binary_file1": "mkdir.json", "binary_file2": "mkdir.json"}
{"fname": "savewd_finish", "lineno_map": [[235, 235], [243, 243], [247, 247], [251, 251], [254, 254]], "source_code_file": "lib/savewd.c", "binary_file1": "mkdir.json", "binary_file2": "mkdir.json"}
{"fname": "savewd_process_files", "lineno_map": [[278, 278], [280, 280], [282, 282], [284, 284], [285, 285], [288, 288], [290, 290], [292, 292], [293, 293], [294, 294], [297, 297], [299, 299], [300, 300], [301, 301], [305, 305], [307, 307], [309, 309], [310, 310], [311, 311]], "source_code_file": "lib/savewd.c", "binary_file1": "mkdir.json", "binary_file2": "mkdir.json"}
{"fname": "qcopy_acl", "lineno_map": [[45, 45], [46, 46], [48, 48], [49, 49]], "source_code_file": "lib/qcopy-acl.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "getndelim2", "lineno_map": [[76, 76], [77, 77], [78, 78], [81, 81], [83, 83], [84, 84], [85, 85], [89, 89], [92, 92], [93, 93], [95, 95], [99, 99], [100, 100], [101, 101], [102, 102], [106, 106], [116, 116], [117, 117], [119, 119], [121, 121], [122, 122], [124, 124], [125, 125], [131, 131], [132, 132], [135, 135], [140, 140], [141, 141], [142, 142], [149, 149], [153, 153], [158, 158], [159, 159], [161, 161], [162, 162], [164, 164], [166, 166], [167, 167], [169, 169], [172, 172], [173, 173], [174, 174], [176, 176], [177, 177], [178, 178], [184, 184], [186, 186], [187, 187], [188, 188], [189, 189], [190, 190], [192, 192], [193, 193], [194, 194], [199, 199], [202, 202], [206, 206], [208, 208], [214, 214], [215, 215]], "source_code_file": "lib/getndelim2.c", "binary_file1": "cut.json", "binary_file2": "cut.json"}
{"fname": "priv_set_remove_linkdir", "lineno_map": [[53, 53]], "source_code_file": "lib/priv-set.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "priv_set_restore_linkdir", "lineno_map": [[58, 58], [59, 59]], "source_code_file": "lib/priv-set.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "xstrcat", "lineno_map": [[42, 42], [43, 43], [44, 44], [46, 46], [47, 47], [54, 54], [56, 56], [61, 61], [62, 62], [63, 63], [65, 65], [66, 66], [67, 67], [68, 68], [70, 70]], "source_code_file": "lib/xvasprintf.c", "binary_file1": "dd.json", "binary_file2": "stat.json"}
{"fname": "xvasprintf", "lineno_map": [[84, 84], [87, 87], [89, 89], [92, 92], [94, 94], [95, 95], [97, 97], [98, 98], [102, 102], [104, 104], [105, 105]], "source_code_file": "lib/xvasprintf.c", "binary_file1": "dd.json", "binary_file2": "stat.json"}
{"fname": "strcoll_loop", "lineno_map": [[39, 39], [44, 44], [45, 45], [46, 46], [47, 47], [48, 48], [49, 49], [51, 51], [53, 53]], "source_code_file": "lib/memcoll.c", "binary_file1": "comm.json", "binary_file2": "comm.json"}
{"fname": "memcoll", "lineno_map": [[74, 74], [76, 76], [77, 77], [81, 81], [82, 82], [84, 84], [85, 85], [87, 87], [89, 89], [90, 90]], "source_code_file": "lib/memcoll.c", "binary_file1": "comm.json", "binary_file2": "comm.json"}
{"fname": "memcoll0", "lineno_map": [[104, 104], [106, 106]], "source_code_file": "lib/memcoll.c", "binary_file1": "comm.json", "binary_file2": "comm.json"}
{"fname": "cycle_check_init", "lineno_map": [[45, 45], [46, 46]], "source_code_file": "lib/cycle-check.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "cycle_check", "lineno_map": [[60, 60], [65, 65], [70, 70], [77, 77], [80, 80], [81, 81]], "source_code_file": "lib/cycle-check.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "clear_ungetc_buffer_preserving_position", "lineno_map": [[43, 43], [45, 45]], "source_code_file": "lib/fflush.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "rpl_fflush", "lineno_map": [[150, 150], [156, 156]], "source_code_file": "lib/fflush.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "rpl_fclose", "lineno_map": [[60, 60], [62, 62], [65, 65], [66, 66], [72, 72], [73, 73], [74, 74], [100, 100], [105, 105], [107, 107], [108, 108]], "source_code_file": "lib/fclose.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "randint_new", "lineno_map": [[73, 73], [74, 74], [75, 75]], "source_code_file": "lib/randint.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "randint_all_new", "lineno_map": [[86, 86]], "source_code_file": "lib/randint.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "randint_genmax", "lineno_map": [[116, 116], [117, 117], [118, 118], [119, 119], [123, 123], [128, 128], [129, 129], [134, 134], [135, 135], [137, 137], [139, 139], [148, 148], [152, 152], [153, 153], [154, 154], [156, 156], [159, 159], [161, 161], [176, 176], [177, 177], [178, 178], [179, 179], [181, 181], [183, 183], [184, 184], [190, 190], [191, 191]], "source_code_file": "lib/randint.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "randint_free", "lineno_map": [[201, 201], [202, 202]], "source_code_file": "lib/randint.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "randint_all_free", "lineno_map": [[211, 211], [212, 212], [213, 213], [214, 214]], "source_code_file": "lib/randint.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "base32_encode", "lineno_map": [[71, 71], [73, 73], [74, 74], [76, 76], [77, 77], [78, 78], [79, 79], [81, 81], [83, 83], [85, 85], [87, 87], [89, 89], [90, 90], [91, 91], [93, 93], [95, 95], [97, 97], [98, 98], [99, 99], [101, 101], [103, 103], [105, 105], [107, 107], [109, 109], [111, 111], [112, 112], [113, 113], [115, 115], [117, 117], [118, 118], [120, 120], [121, 121], [122, 122], [123, 123], [126, 126], [127, 127]], "source_code_file": "lib/base32.c", "binary_file1": "base32.json", "binary_file2": "base32.json"}
{"fname": "base32_encode_alloc", "lineno_map": [[142, 142], [150, 150], [152, 152], [156, 156], [157, 157], [160, 160]], "source_code_file": "lib/base32.c", "binary_file1": "base32.json", "binary_file2": "base32.json"}
{"fname": "base32_decode_ctx_init", "lineno_map": [[295, 295]], "source_code_file": "lib/base32.c", "binary_file1": "base32.json", "binary_file2": "base32.json"}
{"fname": "get_8", "lineno_map": [[310, 310], [311, 311], [313, 313], [315, 315], [316, 316], [319, 319], [320, 320], [327, 327], [328, 328], [330, 330], [331, 331], [333, 333], [334, 334], [339, 339], [340, 340]], "source_code_file": "lib/base32.c", "binary_file1": "base32.json", "binary_file2": "base32.json"}
{"fname": "decode_8", "lineno_map": [[363, 363], [364, 364], [367, 367], [370, 370], [372, 372], [373, 373], [374, 374], [377, 377], [379, 379], [380, 380], [385, 385], [388, 388], [390, 390], [391, 391], [392, 392], [393, 393], [396, 396], [398, 398], [403, 403], [406, 406], [408, 408], [409, 409], [410, 410], [413, 413], [415, 415], [420, 420], [423, 423], [425, 425], [426, 426], [427, 427], [428, 428], [431, 431], [433, 433], [436, 436], [438, 438], [439, 439], [440, 440], [447, 447]], "source_code_file": "lib/base32.c", "binary_file1": "base32.json", "binary_file2": "base32.json"}
{"fname": "base32_decode_ctx", "lineno_map": [[474, 474], [475, 475], [476, 476], [477, 477], [479, 479], [481, 481], [482, 482], [488, 488], [489, 489], [495, 495], [496, 496], [499, 499], [500, 500], [504, 504], [509, 509], [511, 511], [512, 512], [513, 513], [517, 517], [518, 518], [521, 521], [524, 524], [525, 525], [527, 527], [532, 532], [534, 534], [537, 537], [540, 540], [544, 544]], "source_code_file": "lib/base32.c", "binary_file1": "base32.json", "binary_file2": "base32.json"}
{"fname": "base32_decode_alloc_ctx", "lineno_map": [[570, 570], [572, 572], [573, 573], [576, 576], [578, 578], [579, 579], [583, 583], [584, 584]], "source_code_file": "lib/base32.c", "binary_file1": "base32.json", "binary_file2": "base32.json"}
{"fname": "knuth_morris_pratt", "lineno_map": [[38, 38], [39, 39], [43, 43], [44, 44], [65, 65], [67, 67], [73, 73], [80, 80], [83, 83], [84, 84], [92, 92], [93, 93], [107, 107], [118, 118], [119, 119], [120, 120], [121, 121], [123, 123], [124, 124], [126, 126], [127, 127], [132, 132], [135, 135], [138, 138], [139, 139], [144, 144], [145, 145], [149, 149], [151, 151]], "source_code_file": "lib/mbsstr.c", "binary_file1": "factor.json", "binary_file2": "ptx.json"}
{"fname": "knuth_morris_pratt_multibyte", "lineno_map": [[43, 43], [48, 48], [50, 50], [52, 52], [53, 53], [54, 54], [61, 61], [62, 62], [63, 63], [85, 85], [86, 86], [88, 88], [94, 94], [101, 101], [104, 104], [110, 110], [113, 113], [127, 127], [139, 139], [140, 140], [141, 141], [142, 142], [144, 144], [145, 145], [147, 147], [148, 148], [149, 149], [152, 152], [156, 156], [159, 159], [160, 160], [161, 161], [163, 163], [164, 164], [165, 165], [171, 171], [172, 172], [173, 173], [174, 174], [178, 178]], "source_code_file": "lib/mbsstr.c", "binary_file1": "factor.json", "binary_file2": "ptx.json"}
{"fname": "mbsstr", "lineno_map": [[192, 192], [196, 196], [197, 197], [213, 213], [214, 214], [215, 215], [216, 216], [221, 221], [222, 222], [223, 223], [225, 225], [231, 231], [232, 232], [233, 233], [237, 237], [238, 238], [239, 239], [240, 240], [241, 241], [242, 242], [243, 243], [247, 247], [250, 250], [252, 252], [256, 256], [257, 257], [258, 258], [264, 264], [265, 265], [267, 267], [268, 268], [269, 269], [270, 270], [272, 272], [274, 274], [277, 277], [280, 280], [281, 281], [293, 293], [309, 309], [310, 310], [311, 311], [312, 312], [313, 313], [317, 317], [319, 319], [321, 321], [327, 327], [328, 328], [329, 329], [333, 333], [335, 335], [338, 338], [339, 339], [340, 340], [342, 342], [346, 346], [347, 347], [351, 351], [353, 353], [357, 357], [358, 358], [359, 359], [362, 362], [363, 363], [365, 365], [367, 367], [370, 370], [373, 373], [374, 374]], "source_code_file": "lib/mbsstr.c", "binary_file1": "factor.json", "binary_file2": "ptx.json"}
{"fname": "clone_quoting_options", "lineno_map": [[124, 124], [125, 125], [127, 127]], "source_code_file": "lib/quotearg.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "set_quoting_style", "lineno_map": [[143, 143]], "source_code_file": "lib/quotearg.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "set_char_quoting", "lineno_map": [[154, 154], [155, 155], [156, 156], [157, 157], [158, 158], [159, 159]], "source_code_file": "lib/quotearg.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "set_quoting_flags", "lineno_map": [[171, 171], [172, 172], [173, 173], [174, 174]], "source_code_file": "lib/quotearg.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "set_custom_quoting", "lineno_map": [[182, 182], [183, 183], [184, 184], [185, 185], [186, 186], [187, 187], [188, 188]], "source_code_file": "lib/quotearg.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "quoting_options_from_style", "lineno_map": [[195, 195], [196, 196], [197, 197], [198, 198]], "source_code_file": "lib/quotearg.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "gettext_quote", "lineno_map": [[209, 209], [212, 212], [233, 233], [234, 234], [236, 236]], "source_code_file": "lib/quotearg.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "quotearg_buffer_restyled", "lineno_map": [[264, 264], [265, 265], [266, 266], [267, 267], [268, 268], [269, 269], [270, 270], [271, 271], [272, 272], [273, 273], [316, 316], [319, 319], [320, 320], [323, 323], [324, 324], [325, 325], [326, 326], [327, 327], [331, 331], [332, 332], [339, 339], [362, 362], [363, 363], [365, 365], [366, 366], [367, 367], [368, 368], [369, 369], [370, 370], [375, 375], [378, 378], [381, 381], [382, 382], [385, 385], [386, 386], [387, 387], [388, 388], [389, 389], [393, 393], [397, 397], [400, 400], [404, 404], [405, 405], [406, 406], [408, 408], [409, 409], [410, 410], [411, 411], [412, 412], [416, 416], [417, 417], [419, 419], [421, 421], [424, 424], [425, 425], [428, 428], [430, 430], [437, 437], [438, 438], [440, 440], [441, 441], [443, 443], [449, 449], [450, 450], [454, 454], [457, 457], [462, 462], [463, 463], [464, 464], [471, 471], [473, 473], [474, 474], [475, 475], [476, 476], [477, 477], [478, 478], [491, 491], [492, 492], [493, 493], [494, 494], [495, 495], [496, 496], [497, 497], [498, 498], [500, 500], [502, 502], [509, 509], [513, 513], [514, 514], [518, 518], [520, 520], [526, 526], [530, 530], [534, 534], [548, 548], [549, 549], [554, 554], [555, 555], [556, 556], [558, 558], [561, 561], [566, 566], [567, 567], [570, 570], [571, 571], [572, 572], [573, 573], [599, 599], [614, 614], [616, 616], [617, 617], [622, 622], [624, 624], [625, 625], [626, 626], [627, 627], [632, 632], [633, 633], [634, 634], [636, 636], [638, 638], [641, 641], [643, 643], [644, 644], [645, 645], [654, 654], [655, 655], [658, 658], [659, 659], [670, 670], [671, 671], [672, 672], [675, 675], [678, 678], [680, 680], [684, 684], [688, 688], [690, 690], [691, 691], [692, 692], [693, 693], [695, 695], [697, 697], [698, 698], [700, 700], [702, 702], [703, 703], [704, 704], [712, 712], [713, 713], [714, 714], [715, 715], [716, 716], [720, 720], [723, 723], [724, 724], [726, 726], [727, 727], [730, 730], [731, 731], [738, 738], [739, 739], [741, 741], [746, 746], [749, 749], [750, 750], [755, 755], [756, 756], [757, 757], [759, 759], [760, 760], [766, 766], [767, 767]], "source_code_file": "lib/quotearg.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "quotearg_buffer", "lineno_map": [[788, 788], [789, 789], [790, 790], [791, 791], [793, 793]], "source_code_file": "lib/quotearg.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "quotearg_alloc_mem", "lineno_map": [[815, 815], [816, 816], [818, 818], [819, 819], [820, 820], [823, 823], [824, 824], [825, 825], [827, 827], [828, 828], [829, 829]], "source_code_file": "lib/quotearg.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "quotearg_free", "lineno_map": [[850, 850], [852, 852], [853, 853], [854, 854], [856, 856], [857, 857], [858, 858], [860, 860], [862, 862], [863, 863], [865, 865]], "source_code_file": "lib/quotearg.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "quotearg_n_options", "lineno_map": [[880, 880], [882, 882], [884, 884], [885, 885], [887, 887], [889, 889], [890, 890], [892, 892], [893, 893], [895, 895], [896, 896], [897, 897], [898, 898], [899, 899], [903, 903], [904, 904], [906, 906], [907, 907], [909, 909], [913, 913], [915, 915], [916, 916], [917, 917], [918, 918], [919, 919], [920, 920], [925, 925]], "source_code_file": "lib/quotearg.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "quotearg_n_style", "lineno_map": [[957, 957]], "source_code_file": "lib/quotearg.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "quotearg_n_style_mem", "lineno_map": [[965, 965]], "source_code_file": "lib/quotearg.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "quotearg_char_mem", "lineno_map": [[985, 985], [986, 986]], "source_code_file": "lib/quotearg.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "quotearg_n_style_colon", "lineno_map": [[1012, 1012], [1013, 1013]], "source_code_file": "lib/quotearg.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "quotearg_n_custom_mem", "lineno_map": [[1030, 1030], [1031, 1031]], "source_code_file": "lib/quotearg.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "fd_reopen", "lineno_map": [[34, 34], [36, 36], [40, 40], [41, 41], [42, 42], [43, 43]], "source_code_file": "lib/fd-reopen.c", "binary_file1": "dd.json", "binary_file2": "split.json"}
{"fname": "xreadlink", "lineno_map": [[40, 40], [41, 41], [42, 42]], "source_code_file": "lib/xreadlink.c", "binary_file1": "stdbuf.json", "binary_file2": "stdbuf.json"}
{"fname": "freadptrinc", "lineno_map": [[41, 41]], "source_code_file": "lib/freadseek.c", "binary_file1": "cut.json", "binary_file2": "cut.json"}
{"fname": "freadseek", "lineno_map": [[79, 79], [84, 84], [87, 87], [91, 91], [93, 93], [95, 95], [96, 96], [97, 97], [99, 99], [100, 100], [105, 105], [107, 107], [108, 108], [110, 110], [114, 114], [115, 115], [128, 128], [129, 129], [131, 131], [133, 133], [140, 140]], "source_code_file": "lib/freadseek.c", "binary_file1": "cut.json", "binary_file2": "cut.json"}
{"fname": "dirchownmod", "lineno_map": [[66, 66], [68, 68], [70, 70], [76, 76], [78, 78], [79, 79], [87, 87], [94, 94], [95, 95], [97, 97], [99, 99], [101, 101], [108, 108], [109, 109], [115, 115], [117, 117], [118, 118], [119, 119], [121, 121], [123, 123], [128, 128], [130, 130], [131, 131], [134, 134], [135, 135], [136, 136]], "source_code_file": "lib/dirchownmod.c", "binary_file1": "mkdir.json", "binary_file2": "mkdir.json"}
{"fname": "__bswap_64", "lineno_map": [[77, 110]], "source_code_file": "lib/sha512.c", "binary_file1": "sha384sum.json", "binary_file2": "sha384sum.json"}
{"fname": "sha512_init_ctx", "lineno_map": [[65, 65], [66, 66], [67, 67], [68, 68], [69, 69], [70, 70], [71, 71], [72, 72], [74, 74], [75, 75]], "source_code_file": "lib/sha512.c", "binary_file1": "sha384sum.json", "binary_file2": "sha384sum.json"}
{"fname": "sha384_init_ctx", "lineno_map": [[81, 81], [82, 82], [83, 83], [84, 84], [85, 85], [86, 86], [87, 87], [88, 88], [90, 90], [91, 91]], "source_code_file": "lib/sha512.c", "binary_file1": "sha384sum.json", "binary_file2": "sha384sum.json"}
{"fname": "set_uint64", "lineno_map": [[100, 100]], "source_code_file": "lib/sha512.c", "binary_file1": "sha384sum.json", "binary_file2": "sha384sum.json"}
{"fname": "sha512_read_ctx", "lineno_map": [[109, 109], [111, 111], [112, 112]], "source_code_file": "lib/sha512.c", "binary_file1": "sha384sum.json", "binary_file2": "sha384sum.json"}
{"fname": "sha384_read_ctx", "lineno_map": [[121, 121], [123, 123], [124, 124]], "source_code_file": "lib/sha512.c", "binary_file1": "sha384sum.json", "binary_file2": "sha384sum.json"}
{"fname": "sha512_conclude_ctx", "lineno_map": [[135, 135], [136, 136], [139, 139], [140, 140], [141, 141], [146, 146], [147, 147], [149, 149], [150, 150], [152, 152], [155, 155]], "source_code_file": "lib/sha512.c", "binary_file1": "sha384sum.json", "binary_file2": "sha384sum.json"}
{"fname": "sha512_finish_ctx", "lineno_map": [[161, 161]], "source_code_file": "lib/sha512.c", "binary_file1": "sha384sum.json", "binary_file2": "sha384sum.json"}
{"fname": "sha384_finish_ctx", "lineno_map": [[168, 168]], "source_code_file": "lib/sha512.c", "binary_file1": "sha384sum.json", "binary_file2": "sha384sum.json"}
{"fname": "afalg_stream", "lineno_map": [[105, 105], [106, 106]], "source_code_file": "lib/sha512.c", "binary_file1": "sha384sum.json", "binary_file2": "sha384sum.json"}
{"fname": "shaxxx_stream", "lineno_map": [[186, 186], [188, 188], [189, 189], [192, 192], [193, 193], [197, 197], [207, 207], [217, 217], [220, 220], [222, 222], [224, 224], [227, 227], [232, 232], [234, 234], [244, 244], [250, 250], [251, 251], [254, 254], [255, 255]], "source_code_file": "lib/sha512.c", "binary_file1": "sha384sum.json", "binary_file2": "sha384sum.json"}
{"fname": "sha512_buffer", "lineno_map": [[285, 285], [288, 288]], "source_code_file": "lib/sha512.c", "binary_file1": "sha384sum.json", "binary_file2": "sha384sum.json"}
{"fname": "sha384_buffer", "lineno_map": [[300, 300], [303, 303]], "source_code_file": "lib/sha512.c", "binary_file1": "sha384sum.json", "binary_file2": "sha384sum.json"}
{"fname": "sha512_process_bytes", "lineno_map": [[314, 314], [316, 316], [317, 317], [319, 319], [320, 320], [322, 322], [324, 324], [326, 326], [329, 329], [330, 330], [334, 334], [335, 335], [339, 339], [343, 343], [344, 344], [346, 346], [347, 347], [348, 348], [353, 353], [354, 354], [355, 355], [360, 360], [362, 362], [364, 364], [365, 365], [366, 366], [368, 368], [369, 369], [372, 372], [374, 374]], "source_code_file": "lib/sha512.c", "binary_file1": "sha384sum.json", "binary_file2": "sha384sum.json"}
{"fname": "sha512_process_block", "lineno_map": [[436, 436], [437, 437], [439, 439], [440, 440], [441, 441], [442, 442], [443, 443], [444, 444], [445, 445], [446, 446], [447, 447], [452, 452], [453, 453], [480, 480]], "source_code_file": "lib/sha512.c", "binary_file1": "sha384sum.json", "binary_file2": "sha384sum.json"}
{"fname": "rpl_nl_langinfo", "lineno_map": [[95, 95], [120, 120]], "source_code_file": "lib/nl_langinfo.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "xgethostname", "lineno_map": [[42, 42], [43, 43], [52, 52], [53, 53], [54, 54], [55, 55], [57, 57], [59, 59], [62, 62], [64, 64], [66, 66], [67, 67], [68, 68]], "source_code_file": "lib/xgethostname.c", "binary_file1": "dir.json", "binary_file2": "vdir.json"}
{"fname": "rpl_fcntl", "lineno_map": [[279, 279], [280, 280], [281, 281], [326, 326], [340, 340], [342, 342], [343, 343], [345, 345], [353, 353], [354, 354], [356, 356], [360, 360], [361, 361], [363, 363], [364, 364], [366, 366], [367, 367], [368, 368], [369, 369], [408, 408], [409, 409]], "source_code_file": "lib/fcntl.c", "binary_file1": "mkdir.json", "binary_file2": "mkdir.json"}
{"fname": "rpl_pipe2", "lineno_map": [[46, 46], [47, 47], [56, 56], [58, 58], [59, 59], [61, 61], [64, 64], [70, 70], [72, 72], [107, 107], [116, 116], [120, 120], [121, 121], [122, 122], [123, 123], [127, 127], [131, 131], [132, 132], [133, 133], [134, 134], [158, 158], [159, 159], [160, 160], [161, 161], [162, 162], [163, 163]], "source_code_file": "lib/pipe2.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "rpl_mbrtowc", "lineno_map": [[404, 404], [405, 405], [439, 439], [447, 447], [449, 449], [450, 450]], "source_code_file": "lib/mbrtowc.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "xmem_cd_iconv", "lineno_map": [[35, 35], [37, 37], [38, 38]], "source_code_file": "lib/xstriconv.c", "binary_file1": "ptx.json", "binary_file2": "ptx.json"}
{"fname": "xstr_cd_iconv", "lineno_map": [[45, 45], [47, 47], [48, 48]], "source_code_file": "lib/xstriconv.c", "binary_file1": "ptx.json", "binary_file2": "ptx.json"}
{"fname": "xstr_iconv", "lineno_map": [[57, 57], [59, 59], [60, 60]], "source_code_file": "lib/xstriconv.c", "binary_file1": "ptx.json", "binary_file2": "ptx.json"}
{"fname": "c_strcasecmp", "lineno_map": [[29, 29], [30, 30], [33, 33], [38, 38], [39, 39], [41, 41], [44, 44], [45, 45], [47, 47]], "source_code_file": "lib/c-strcasecmp.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "mkancesdirs", "lineno_map": [[72, 72], [76, 76], [78, 78], [80, 80], [88, 88], [89, 89], [91, 91], [92, 92], [94, 94], [98, 98], [100, 100], [101, 101], [106, 106], [110, 110], [111, 111], [112, 112], [113, 113], [114, 114], [116, 116], [118, 118], [119, 119], [121, 121], [126, 126], [127, 127], [129, 129], [131, 131], [132, 132], [137, 137]], "source_code_file": "lib/mkancesdirs.c", "binary_file1": "mkdir.json", "binary_file2": "mkdir.json"}
{"fname": "lutimensat", "lineno_map": [[43, 43], [44, 44], [45, 45]], "source_code_file": "lib/utimens.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "validate_timespec", "lineno_map": [[89, 89], [90, 90], [91, 91], [92, 92], [93, 93], [94, 94], [95, 95], [96, 96], [97, 97], [98, 98], [100, 100], [107, 107], [108, 108], [110, 110], [111, 111], [112, 112], [113, 113], [115, 115], [116, 116], [118, 118], [119, 119], [120, 120], [121, 121]], "source_code_file": "lib/utimens.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "update_timespec", "lineno_map": [[135, 135], [136, 136], [137, 137], [139, 139], [140, 140], [142, 142], [146, 146], [147, 147], [148, 148], [149, 149], [151, 151], [152, 152], [153, 153], [154, 154]], "source_code_file": "lib/utimens.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "fdutimens", "lineno_map": [[173, 173], [174, 174], [177, 177], [179, 179], [180, 180], [181, 181], [183, 183], [189, 189], [191, 191], [218, 218], [234, 234], [236, 236], [238, 238], [239, 239], [240, 240], [241, 241], [243, 243], [247, 247], [249, 249], [258, 258], [259, 259], [261, 261], [263, 263], [269, 269], [271, 271], [274, 274], [275, 275], [277, 277], [279, 279], [285, 285], [286, 286], [377, 377], [379, 379], [380, 380], [382, 382], [390, 390], [392, 392], [393, 393], [394, 394], [395, 395], [396, 396], [399, 399], [401, 401], [425, 425], [433, 433], [435, 435], [436, 436], [437, 437], [441, 441], [442, 442], [444, 444], [446, 446], [447, 447], [448, 448], [450, 450], [451, 451], [453, 453], [455, 455], [456, 456], [458, 458], [459, 459], [470, 470]], "source_code_file": "lib/utimens.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "lutimens", "lineno_map": [[518, 518], [519, 519], [522, 522], [524, 524], [525, 525], [526, 526], [528, 528], [537, 537], [553, 553], [555, 555], [557, 557], [558, 558], [559, 559], [560, 560], [562, 562], [565, 565], [574, 574], [575, 575], [577, 577], [579, 579], [580, 580], [584, 584], [591, 591], [593, 593], [595, 595], [624, 624], [626, 626], [628, 628]], "source_code_file": "lib/utimens.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "version_etc_arn", "lineno_map": [[67, 67], [68, 68], [70, 70], [84, 84], [86, 86], [95, 95], [99, 99], [102, 102], [106, 106], [110, 110], [111, 111], [117, 117], [118, 118], [124, 124], [125, 125], [131, 131], [132, 132], [133, 133], [139, 139], [140, 140], [141, 141], [147, 147], [149, 149], [150, 150], [156, 156], [158, 158], [159, 159], [167, 167], [169, 169], [170, 170]], "source_code_file": "lib/version-etc.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "version_etc_ar", "lineno_map": [[186, 186], [188, 188]], "source_code_file": "lib/version-etc.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "version_etc_va", "lineno_map": [[203, 203], [205, 205], [206, 206], [208, 208]], "source_code_file": "lib/version-etc.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "version_etc", "lineno_map": [[233, 233], [234, 234]], "source_code_file": "lib/version-etc.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "emit_bug_reporting_address", "lineno_map": [[245, 245], [251, 251], [256, 256]], "source_code_file": "lib/version-etc.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "dir_len", "lineno_map": [[34, 34], [38, 38], [41, 41], [48, 48], [49, 49], [50, 50]], "source_code_file": "lib/dirname-lgpl.c", "binary_file1": "stdbuf.json", "binary_file2": "stdbuf.json"}
{"fname": "mdir_name", "lineno_map": [[73, 73], [74, 74], [78, 78], [79, 79], [81, 81], [82, 82], [83, 83], [84, 84]], "source_code_file": "lib/dirname-lgpl.c", "binary_file1": "stdbuf.json", "binary_file2": "stdbuf.json"}
{"fname": "rpl_mbrlen", "lineno_map": [[29, 29], [30, 30]], "source_code_file": "lib/mbrlen.c", "binary_file1": "pathchk.json", "binary_file2": "pathchk.json"}
{"fname": "triple_hash", "lineno_map": [[36, 36], [37, 37]], "source_code_file": "lib/hash-triple.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "triple_hash_no_name", "lineno_map": [[47, 47]], "source_code_file": "lib/hash-triple.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "triple_compare", "lineno_map": [[57, 57], [58, 58]], "source_code_file": "lib/hash-triple.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "triple_compare_ino_str", "lineno_map": [[65, 65], [66, 66]], "source_code_file": "lib/hash-triple.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "triple_free", "lineno_map": [[74, 74], [75, 75], [76, 76]], "source_code_file": "lib/hash-triple.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "mpsort_into_tmp", "lineno_map": [[41, 41], [42, 42], [43, 43], [44, 44], [45, 45], [46, 46], [50, 50], [51, 51], [53, 53], [54, 54], [57, 57], [59, 59], [60, 60], [61, 61], [63, 63], [64, 64], [67, 67], [71, 71], [72, 72], [73, 73], [75, 75], [78, 78]], "source_code_file": "lib/mpsort.c", "binary_file1": "ls.json", "binary_file2": "vdir.json"}
{"fname": "mpsort_with_tmp", "lineno_map": [[90, 90], [92, 92], [94, 94], [95, 95], [96, 96], [98, 98], [99, 99], [105, 105], [106, 106], [108, 108], [109, 109], [110, 110], [111, 111], [115, 115], [117, 117], [118, 118], [120, 120], [122, 122], [123, 123], [125, 125], [126, 126], [128, 128], [129, 129], [130, 130], [132, 132], [136, 136], [137, 137], [138, 138], [140, 140], [143, 143]], "source_code_file": "lib/mpsort.c", "binary_file1": "ls.json", "binary_file2": "vdir.json"}
{"fname": "mpsort", "lineno_map": [[155, 155]], "source_code_file": "lib/mpsort.c", "binary_file1": "ls.json", "binary_file2": "vdir.json"}
{"fname": "memcmp2", "lineno_map": [[27, 27], [28, 28], [30, 30], [31, 31], [32, 32], [33, 33]], "source_code_file": "lib/memcmp2.c", "binary_file1": "comm.json", "binary_file2": "comm.json"}
{"fname": "wc_ensure_printable", "lineno_map": [[42, 42], [43, 43], [44, 44], [46, 46], [48, 48], [49, 49], [51, 51]], "source_code_file": "lib/mbsalign.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "wc_truncate", "lineno_map": [[62, 62], [63, 63], [65, 65], [67, 67], [68, 68], [70, 70], [71, 71], [73, 73], [75, 75], [76, 76], [78, 78]], "source_code_file": "lib/mbsalign.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "mbs_align_pad", "lineno_map": [[92, 92], [93, 93], [94, 94]], "source_code_file": "lib/mbsalign.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "mbsalign", "lineno_map": [[115, 115], [116, 116], [117, 117], [118, 118], [119, 119], [120, 120], [121, 121], [122, 122], [123, 123], [124, 124], [129, 129], [131, 131], [132, 132], [134, 134], [139, 139], [140, 140], [141, 141], [143, 143], [148, 148], [150, 150], [151, 151], [152, 152], [153, 153], [159, 159], [161, 161], [165, 165], [167, 167], [168, 168], [170, 170], [175, 175], [176, 176], [177, 177], [182, 182], [184, 184], [185, 185], [188, 188], [189, 189], [192, 192], [197, 197], [200, 200], [201, 201], [204, 204], [205, 205], [209, 209], [210, 210], [214, 214], [215, 215], [216, 216], [217, 217], [220, 220], [223, 223], [225, 225], [226, 226], [227, 227], [228, 228], [232, 232], [237, 237], [238, 238]], "source_code_file": "lib/mbsalign.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "ambsalign", "lineno_map": [[250, 250], [251, 251], [252, 252], [253, 253], [255, 255], [258, 258], [259, 259], [260, 260], [262, 262], [263, 263], [266, 266], [267, 267], [268, 268], [269, 269], [271, 271], [272, 272]], "source_code_file": "lib/mbsalign.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "full_write", "lineno_map": [[60, 60], [61, 61], [63, 63], [65, 65], [66, 66], [68, 68], [70, 70], [73, 73], [74, 74], [75, 75]], "source_code_file": "lib/full-write.c", "binary_file1": "yes.json", "binary_file2": "yes.json"}
{"fname": "xnmalloc", "lineno_map": [[100, 100], [101, 101], [102, 102]], "source_code_file": "lib/xmalloc.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "xmalloc", "lineno_map": [[41, 41], [42, 42], [43, 43]], "source_code_file": "lib/xmalloc.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "xrealloc", "lineno_map": [[53, 53], [57, 57], [61, 61], [62, 62], [63, 63]], "source_code_file": "lib/xmalloc.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "xcalloc", "lineno_map": [[100, 100], [101, 101], [102, 102]], "source_code_file": "lib/xmalloc.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "mbsnwidth", "lineno_map": [[59, 59], [60, 60], [63, 63], [64, 64], [66, 66], [67, 67], [90, 90], [91, 91], [97, 97], [104, 104], [106, 106], [109, 109], [111, 111], [112, 112], [119, 119], [122, 122], [124, 124], [125, 125], [132, 132], [134, 134], [136, 136], [137, 137], [140, 140], [142, 142], [146, 146], [148, 148], [150, 150], [152, 152], [158, 158], [160, 160], [167, 167], [169, 169], [171, 171], [173, 173], [175, 175], [177, 177], [179, 179], [181, 181], [183, 183]], "source_code_file": "lib/mbswidth.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "mbslen", "lineno_map": [[31, 31], [36, 36], [37, 37], [38, 38]], "source_code_file": "lib/mbslen.c", "binary_file1": "expr.json", "binary_file2": "ptx.json"}
{"fname": "getugroups", "lineno_map": [[64, 64], [66, 66], [68, 68], [69, 69], [70, 70], [73, 73], [79, 79], [80, 80], [81, 81], [84, 84], [88, 88], [89, 89], [92, 92], [93, 93], [97, 97], [99, 99], [101, 101], [103, 103], [105, 105], [107, 107], [110, 110], [115, 115], [116, 116], [120, 120], [121, 121], [122, 122]], "source_code_file": "lib/getugroups.c", "binary_file1": "chroot.json", "binary_file2": "chroot.json"}
{"fname": "collate_error", "lineno_map": [[39, 39], [40, 40], [41, 41], [42, 42]], "source_code_file": "lib/xmemcoll.c", "binary_file1": "comm.json", "binary_file2": "comm.json"}
{"fname": "xmemcoll", "lineno_map": [[56, 56], [57, 57], [58, 58], [59, 59]], "source_code_file": "lib/xmemcoll.c", "binary_file1": "comm.json", "binary_file2": "comm.json"}
{"fname": "xmemcoll0", "lineno_map": [[71, 71], [72, 72], [73, 73], [74, 74]], "source_code_file": "lib/xmemcoll.c", "binary_file1": "comm.json", "binary_file2": "comm.json"}
{"fname": "make_node_op_equals", "lineno_map": [[114, 114], [115, 115], [116, 116], [117, 117], [118, 118], [119, 119], [120, 120]], "source_code_file": "lib/modechange.c", "binary_file1": "mkdir.json", "binary_file2": "mkdir.json"}
{"fname": "mode_compile", "lineno_map": [[138, 138], [141, 141], [143, 143], [147, 147], [150, 150], [151, 151], [154, 154], [156, 156], [159, 159], [160, 160], [161, 161], [162, 162], [168, 168], [169, 169], [170, 170], [171, 171], [176, 176], [179, 179], [182, 182], [183, 183], [188, 188], [191, 191], [194, 194], [197, 197], [202, 202], [206, 206], [208, 208], [209, 209], [212, 212], [217, 217], [221, 221], [222, 222], [225, 225], [227, 227], [229, 229], [230, 230], [231, 231], [238, 238], [239, 239], [244, 244], [245, 245], [250, 250], [251, 251], [255, 255], [256, 256], [258, 258], [259, 259], [262, 262], [265, 265], [268, 268], [271, 271], [275, 275], [279, 279], [284, 284], [287, 287], [288, 288], [289, 289], [290, 290], [291, 291], [292, 292], [293, 293], [295, 295], [297, 297], [301, 301], [303, 303], [308, 308]], "source_code_file": "lib/modechange.c", "binary_file1": "mkdir.json", "binary_file2": "mkdir.json"}
{"fname": "mode_create_from_ref", "lineno_map": [[320, 320]], "source_code_file": "lib/modechange.c", "binary_file1": "mkdir.json", "binary_file2": "mkdir.json"}
{"fname": "mode_adjust", "lineno_map": [[343, 343], [346, 346], [348, 348], [350, 350], [351, 351], [352, 352], [353, 353], [355, 355], [362, 362], [365, 365], [366, 366], [367, 367], [368, 368], [369, 369], [370, 370], [376, 376], [377, 377], [384, 384], [386, 386], [393, 393], [394, 394], [395, 395], [400, 400], [401, 401], [405, 405], [406, 406], [411, 411], [412, 412]], "source_code_file": "lib/modechange.c", "binary_file1": "mkdir.json", "binary_file2": "mkdir.json"}
{"fname": "gettime", "lineno_map": [[36, 36], [42, 42], [43, 43], [44, 44]], "source_code_file": "lib/gettime.c", "binary_file1": "dd.json", "binary_file2": "pr.json"}
{"fname": "posix2_version", "lineno_map": [[42, 42], [43, 43], [45, 45], [48, 48], [49, 49], [50, 50]], "source_code_file": "lib/posixver.c", "binary_file1": "tail.json", "binary_file2": "tail.json"}
{"fname": "rpl_nanosleep", "lineno_map": [[56, 56], [58, 58], [65, 65], [66, 66], [68, 68], [70, 70], [73, 73], [74, 74], [75, 75], [76, 76], [78, 78], [79, 79], [82, 82], [84, 84]], "source_code_file": "lib/nanosleep.c", "binary_file1": "tail.json", "binary_file2": "tail.json"}
{"fname": "buffer_lcm", "lineno_map": [[33, 33], [34, 34], [37, 37], [45, 45], [49, 49], [50, 50], [51, 51], [55, 55]], "source_code_file": "lib/buffer-lcm.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "xprintf", "lineno_map": [[36, 36], [37, 37]], "source_code_file": "lib/xprintf.c", "binary_file1": "od.json", "binary_file2": "od.json"}
{"fname": "xvprintf", "lineno_map": [[48, 48], [49, 49], [50, 50]], "source_code_file": "lib/xprintf.c", "binary_file1": "od.json", "binary_file2": "od.json"}
{"fname": "xfprintf", "lineno_map": [[62, 62], [63, 63]], "source_code_file": "lib/xprintf.c", "binary_file1": "od.json", "binary_file2": "od.json"}
{"fname": "xvfprintf", "lineno_map": [[74, 74], [75, 75], [76, 76]], "source_code_file": "lib/xprintf.c", "binary_file1": "od.json", "binary_file2": "od.json"}
{"fname": "cdb_init", "lineno_map": [[49, 49]], "source_code_file": "lib/chdir-long.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "cdb_free", "lineno_map": [[61, 61], [63, 63], [64, 64]], "source_code_file": "lib/chdir-long.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "cdb_advance_fd", "lineno_map": [[75, 75], [77, 77], [80, 80], [81, 81]], "source_code_file": "lib/chdir-long.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "find_non_slash", "lineno_map": [[90, 90]], "source_code_file": "lib/chdir-long.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "chdir_long", "lineno_map": [[112, 112], [113, 113], [117, 117], [118, 118], [122, 122], [126, 126], [127, 127], [130, 130], [137, 137], [142, 142], [143, 143], [145, 145], [148, 148], [149, 149], [150, 150], [151, 151], [153, 153], [155, 155], [157, 157], [159, 159], [162, 162], [163, 163], [165, 165], [171, 171], [172, 172], [174, 174], [178, 178], [179, 179], [180, 180], [181, 181], [182, 182], [185, 185], [188, 188], [190, 190], [194, 194], [197, 197], [202, 202], [203, 203], [204, 204]], "source_code_file": "lib/chdir-long.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "statvfs_works", "lineno_map": [[98, 98], [99, 99], [100, 100]], "source_code_file": "lib/fsusage.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "get_fs_usage", "lineno_map": [[119, 119], [123, 123], [127, 127], [129, 129], [131, 131], [132, 132], [133, 133], [134, 134], [135, 135], [136, 136], [193, 182], [249, 249], [250, 250], [251, 251], [252, 252], [253, 253], [254, 254]], "source_code_file": "lib/fsusage.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "file_type", "lineno_map": [[39, 39], [42, 42], [45, 45], [65, 65], [68, 68], [74, 74], [104, 104]], "source_code_file": "lib/file-type.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "hard_locale", "lineno_map": [[40, 40], [41, 41], [43, 43], [47, 47], [48, 48]], "source_code_file": "lib/hard-locale.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "try_tempname_len", "lineno_map": [[194, 194], [195, 195], [212, 212], [215, 215], [216, 216], [217, 217], [220, 220], [225, 225], [228, 228], [229, 229], [232, 232], [236, 236], [237, 237], [239, 239], [240, 240], [242, 242], [245, 245], [247, 247], [252, 252], [255, 255], [260, 260], [261, 261], [262, 262]], "source_code_file": "lib/tempname.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "try_file", "lineno_map": [[270, 270], [272, 272], [273, 273]], "source_code_file": "lib/tempname.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "try_nocreate", "lineno_map": [[287, 287], [288, 288]], "source_code_file": "lib/tempname.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "gen_tempname_len", "lineno_map": [[312, 312], [315, 315], [319, 319], [323, 323], [327, 327]], "source_code_file": "lib/tempname.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "num_processors_via_affinity_mask", "lineno_map": [[131, 131], [137, 137], [146, 146]], "source_code_file": "lib/nproc.c", "binary_file1": "nproc.json", "binary_file2": "nproc.json"}
{"fname": "num_processors_ignoring_omp", "lineno_map": [[222, 222], [226, 226], [228, 228], [235, 235], [236, 236], [246, 246], [254, 254], [256, 256], [258, 258], [259, 259], [263, 263]], "source_code_file": "lib/nproc.c", "binary_file1": "nproc.json", "binary_file2": "nproc.json"}
{"fname": "parse_omp_threads", "lineno_map": [[338, 338], [340, 340], [345, 345], [346, 346], [349, 349], [351, 351], [352, 352], [354, 354], [356, 356], [357, 357], [358, 358], [362, 362]], "source_code_file": "lib/nproc.c", "binary_file1": "nproc.json", "binary_file2": "nproc.json"}
{"fname": "num_processors", "lineno_map": [[373, 373], [375, 375], [380, 380], [381, 381], [382, 382], [383, 383], [385, 385], [388, 388], [392, 392]], "source_code_file": "lib/nproc.c", "binary_file1": "nproc.json", "binary_file2": "nproc.json"}
{"fname": "__bswap_32", "lineno_map": [[46, 46], [47, 47]], "source_code_file": "lib/sha256.c", "binary_file1": "sha256sum.json", "binary_file2": "sha256sum.json"}
{"fname": "sha256_init_ctx", "lineno_map": [[65, 65], [66, 66], [67, 67], [68, 68], [69, 69], [70, 70], [71, 71], [72, 72], [74, 74], [75, 75]], "source_code_file": "lib/sha256.c", "binary_file1": "sha256sum.json", "binary_file2": "sha256sum.json"}
{"fname": "sha224_init_ctx", "lineno_map": [[81, 81], [82, 82], [83, 83], [84, 84], [85, 85], [86, 86], [87, 87], [88, 88], [90, 90], [91, 91]], "source_code_file": "lib/sha256.c", "binary_file1": "sha256sum.json", "binary_file2": "sha256sum.json"}
{"fname": "set_uint32", "lineno_map": [[100, 100]], "source_code_file": "lib/sha256.c", "binary_file1": "sha256sum.json", "binary_file2": "sha256sum.json"}
{"fname": "sha256_read_ctx", "lineno_map": [[109, 109], [111, 111], [112, 112]], "source_code_file": "lib/sha256.c", "binary_file1": "sha256sum.json", "binary_file2": "sha256sum.json"}
{"fname": "sha224_read_ctx", "lineno_map": [[121, 121], [123, 123], [124, 124]], "source_code_file": "lib/sha256.c", "binary_file1": "sha256sum.json", "binary_file2": "sha256sum.json"}
{"fname": "sha256_conclude_ctx", "lineno_map": [[135, 135], [136, 136], [139, 139], [140, 140], [141, 141], [146, 146], [147, 147], [148, 148], [149, 149], [151, 151], [154, 154]], "source_code_file": "lib/sha256.c", "binary_file1": "sha256sum.json", "binary_file2": "sha256sum.json"}
{"fname": "sha256_finish_ctx", "lineno_map": [[160, 160]], "source_code_file": "lib/sha256.c", "binary_file1": "sha256sum.json", "binary_file2": "sha256sum.json"}
{"fname": "sha224_finish_ctx", "lineno_map": [[167, 167]], "source_code_file": "lib/sha256.c", "binary_file1": "sha256sum.json", "binary_file2": "sha256sum.json"}
{"fname": "afalg_stream", "lineno_map": [[105, 105], [106, 106]], "source_code_file": "lib/sha256.c", "binary_file1": "sha256sum.json", "binary_file2": "sha256sum.json"}
{"fname": "shaxxx_stream", "lineno_map": [[185, 185], [187, 187], [188, 188], [191, 191], [192, 192], [196, 196], [206, 206], [216, 216], [219, 219], [221, 221], [223, 223], [226, 226], [231, 231], [233, 233], [243, 243], [249, 249], [250, 250], [253, 253], [254, 254]], "source_code_file": "lib/sha256.c", "binary_file1": "sha256sum.json", "binary_file2": "sha256sum.json"}
{"fname": "sha256_buffer", "lineno_map": [[284, 284], [287, 287]], "source_code_file": "lib/sha256.c", "binary_file1": "sha256sum.json", "binary_file2": "sha256sum.json"}
{"fname": "sha224_buffer", "lineno_map": [[299, 299], [302, 302]], "source_code_file": "lib/sha256.c", "binary_file1": "sha256sum.json", "binary_file2": "sha256sum.json"}
{"fname": "sha256_process_bytes", "lineno_map": [[313, 313], [315, 315], [316, 316], [318, 318], [319, 319], [321, 321], [323, 323], [325, 325], [328, 328], [329, 329], [333, 333], [334, 334], [338, 338], [342, 342], [343, 343], [345, 345], [346, 346], [347, 347], [352, 352], [353, 353], [354, 354], [359, 359], [361, 361], [363, 363], [364, 364], [365, 365], [367, 367], [368, 368], [371, 371], [373, 373]], "source_code_file": "lib/sha256.c", "binary_file1": "sha256sum.json", "binary_file2": "sha256sum.json"}
{"fname": "sha256_process_block", "lineno_map": [[411, 411], [412, 412], [413, 413], [415, 415], [416, 416], [417, 417], [418, 418], [419, 419], [420, 420], [421, 421], [422, 422], [423, 423], [428, 428], [429, 429], [449, 449], [455, 455], [457, 457], [458, 458], [461, 461], [462, 462], [463, 463], [464, 464], [465, 465], [466, 466], [467, 467], [468, 468], [469, 469], [470, 470], [471, 471], [472, 472], [473, 473], [474, 474], [475, 475], [476, 476], [477, 477], [478, 478], [479, 479], [480, 480], [481, 481], [482, 482], [483, 483], [484, 484], [485, 485], [486, 486], [487, 487], [488, 488], [489, 489], [490, 490], [491, 491], [492, 492], [493, 493], [494, 494], [495, 495], [496, 496], [497, 497], [498, 498], [499, 499], [500, 500], [501, 501], [502, 502], [503, 503], [504, 504], [505, 505], [506, 506], [507, 507], [508, 508], [509, 509], [510, 510], [511, 511], [512, 512], [513, 513], [514, 514], [515, 515], [516, 516], [517, 517], [518, 518], [519, 519], [520, 520], [521, 521], [522, 522], [523, 523], [524, 524], [526, 526], [527, 527], [528, 528], [529, 529], [530, 530], [531, 531], [532, 532], [533, 533]], "source_code_file": "lib/sha256.c", "binary_file1": "sha256sum.json", "binary_file2": "sha256sum.json"}
{"fname": "verror", "lineno_map": [[45, 45]], "source_code_file": "lib/verror.c", "binary_file1": "dd.json", "binary_file2": "test.json"}
{"fname": "verror_at_line", "lineno_map": [[58, 58], [59, 59], [64, 64], [65, 65], [67, 67], [73, 73], [74, 74], [76, 76]], "source_code_file": "lib/verror.c", "binary_file1": "dd.json", "binary_file2": "test.json"}
{"fname": "parse_long_options", "lineno_map": [[55, 55], [58, 58], [60, 60], [61, 61], [63, 63], [66, 66], [72, 72], [73, 73], [74, 74], [84, 84], [88, 88]], "source_code_file": "lib/long-options.c", "binary_file1": "logname.json", "binary_file2": "logname.json"}
{"fname": "i_ring_init", "lineno_map": [[28, 28], [29, 29], [30, 30], [31, 31], [32, 32], [33, 33]], "source_code_file": "lib/i-ring.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "i_ring_push", "lineno_map": [[45, 45], [46, 46], [47, 47], [48, 48], [49, 49], [50, 50], [51, 51]], "source_code_file": "lib/i-ring.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "i_ring_pop", "lineno_map": [[59, 59], [60, 60], [61, 61], [62, 62], [63, 63], [64, 64], [66, 66]], "source_code_file": "lib/i-ring.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "physmem_total", "lineno_map": [[89, 89], [90, 90], [91, 91], [99, 99]], "source_code_file": "lib/physmem.c", "binary_file1": "wc.json", "binary_file2": "wc.json"}
{"fname": "physmem_available", "lineno_map": [[201, 201], [202, 202], [203, 203], [211, 211]], "source_code_file": "lib/physmem.c", "binary_file1": "wc.json", "binary_file2": "wc.json"}
{"fname": "c_locale", "lineno_map": [[58, 58], [59, 59]], "source_code_file": "lib/c-strtod.c", "binary_file1": "tail.json", "binary_file2": "tail.json"}
{"fname": "c_strtod", "lineno_map": [[72, 72], [73, 73], [75, 75], [76, 76], [80, 80]], "source_code_file": "lib/c-strtod.c", "binary_file1": "tail.json", "binary_file2": "tail.json"}
{"fname": "initbuffer", "lineno_map": [[39, 39]], "source_code_file": "lib/linebuffer.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "readlinebuffer_delim", "lineno_map": [[63, 63], [64, 64], [65, 65], [67, 67], [72, 72], [73, 73], [75, 75], [77, 77], [79, 79], [81, 81], [83, 83], [84, 84], [85, 85], [86, 86], [87, 87], [89, 89], [91, 91], [93, 93]], "source_code_file": "lib/linebuffer.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "freebuffer", "lineno_map": [[102, 102]], "source_code_file": "lib/linebuffer.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "save_cwd", "lineno_map": [[64, 64], [66, 66], [69, 69], [71, 71]], "source_code_file": "lib/save-cwd.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "restore_cwd", "lineno_map": [[85, 85]], "source_code_file": "lib/save-cwd.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "free_cwd", "lineno_map": [[94, 94], [95, 95], [96, 96]], "source_code_file": "lib/save-cwd.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "xgetgroups", "lineno_map": [[33, 33], [34, 34], [35, 35]], "source_code_file": "lib/xgetgroups.c", "binary_file1": "chroot.json", "binary_file2": "chroot.json"}
{"fname": "equal_tm", "lineno_map": [[72, 72], [73, 73], [74, 74], [75, 75], [76, 76], [77, 77]], "source_code_file": "lib/time_rz.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "extend_abbrs", "lineno_map": [[88, 88], [89, 89]], "source_code_file": "lib/time_rz.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "tzalloc", "lineno_map": [[97, 97], [98, 98], [99, 99], [100, 100], [102, 102], [106, 106], [107, 107], [108, 108], [109, 109]], "source_code_file": "lib/time_rz.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "save_abbr", "lineno_map": [[122, 122], [123, 123], [130, 130], [142, 142], [145, 145], [147, 147], [149, 149], [151, 151], [153, 153], [154, 154], [155, 155], [157, 157], [160, 160], [161, 161], [164, 164], [165, 165], [167, 167], [168, 168], [173, 173], [174, 174], [176, 176], [177, 177], [184, 184]], "source_code_file": "lib/time_rz.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "tzfree", "lineno_map": [[198, 198], [199, 199], [201, 201], [202, 202], [203, 203]], "source_code_file": "lib/time_rz.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "change_env", "lineno_map": [[231, 231], [233, 233]], "source_code_file": "lib/time_rz.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "set_tz", "lineno_map": [[244, 244], [245, 245], [246, 246], [247, 247], [251, 251], [252, 252], [254, 254], [256, 256], [257, 257], [258, 258]], "source_code_file": "lib/time_rz.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "revert_tz", "lineno_map": [[271, 271], [275, 275], [276, 276], [277, 277], [278, 278], [279, 279], [280, 280]], "source_code_file": "lib/time_rz.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "localtime_rz", "lineno_map": [[304, 304], [308, 308], [309, 309], [311, 311], [312, 312]], "source_code_file": "lib/time_rz.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "mktime_z", "lineno_map": [[323, 323], [327, 327], [328, 328], [330, 330], [332, 332], [334, 334], [335, 335], [336, 336], [337, 337], [339, 339]], "source_code_file": "lib/time_rz.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "get_root_dev_ino", "lineno_map": [[32, 32], [34, 34], [35, 35]], "source_code_file": "lib/root-dev-ino.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "ino_hash", "lineno_map": [[56, 56], [57, 57], [62, 62], [64, 64], [65, 65], [66, 66]], "source_code_file": "lib/ino-map.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "ino_compare", "lineno_map": [[75, 75], [76, 76]], "source_code_file": "lib/ino-map.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "ino_map_alloc", "lineno_map": [[85, 85], [87, 87], [90, 90], [92, 92], [94, 94], [97, 97], [98, 98]], "source_code_file": "lib/ino-map.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "ino_map_free", "lineno_map": [[108, 108], [109, 109], [110, 110]], "source_code_file": "lib/ino-map.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "ino_map_insert", "lineno_map": [[124, 124], [125, 125], [128, 128], [133, 133], [134, 134], [138, 138], [139, 139], [140, 140], [143, 143], [146, 146], [157, 157], [160, 160]], "source_code_file": "lib/ino-map.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "fdutimensat", "lineno_map": [[46, 46], [47, 47], [48, 48], [49, 49], [50, 50], [51, 51], [53, 53], [54, 54]], "source_code_file": "lib/fdutimensat.c", "binary_file1": "touch.json", "binary_file2": "touch.json"}
{"fname": "yesno", "lineno_map": [[37, 37], [38, 38], [39, 39], [41, 41], [42, 42], [47, 47], [48, 48], [49, 49], [52, 52]], "source_code_file": "lib/yesno.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "xstrndup", "lineno_map": [[32, 32], [33, 33], [34, 34]], "source_code_file": "lib/xstrndup.c", "binary_file1": "dircolors.json", "binary_file2": "dircolors.json"}
{"fname": "close_stream", "lineno_map": [[58, 58], [59, 59], [60, 60], [70, 70], [72, 72], [73, 73]], "source_code_file": "lib/close-stream.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "copy_acl", "lineno_map": [[46, 46], [47, 47], [50, 50], [54, 54]], "source_code_file": "lib/copy-acl.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "trim2", "lineno_map": [[45, 45], [47, 47], [48, 48], [50, 50], [55, 55], [57, 57], [59, 59], [62, 62], [66, 66], [68, 68], [71, 71], [73, 73], [75, 75], [76, 76], [78, 78], [80, 80], [81, 81], [84, 84], [85, 85], [87, 87], [89, 89], [90, 90], [92, 92], [98, 98], [102, 102], [103, 103], [111, 111], [113, 113], [116, 116], [120, 120], [122, 122], [123, 123], [124, 124]], "source_code_file": "lib/trim.c", "binary_file1": "ptx.json", "binary_file2": "ptx.json"}
{"fname": "make_dir_parents", "lineno_map": [[96, 96], [98, 98], [100, 100], [101, 101], [103, 103], [105, 105], [106, 106], [108, 108], [110, 110], [114, 114], [121, 121], [122, 122], [123, 123], [124, 124], [125, 125], [126, 126], [127, 127], [128, 128], [130, 130], [134, 134], [136, 136], [137, 137], [138, 138], [139, 139], [143, 143], [144, 144], [147, 147], [150, 150], [151, 151], [152, 152], [153, 153], [159, 159], [160, 160], [162, 162], [166, 166], [167, 167], [168, 168], [173, 173], [174, 174], [175, 175], [177, 177], [178, 178], [189, 189]], "source_code_file": "lib/mkdir-p.c", "binary_file1": "mkdir.json", "binary_file2": "mkdir.json"}
{"fname": "heap_alloc", "lineno_map": [[46, 46], [48, 48], [49, 49], [51, 51], [53, 53], [54, 54], [55, 55], [56, 56]], "source_code_file": "lib/heap.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "heap_free", "lineno_map": [[72, 72], [73, 73]], "source_code_file": "lib/heap.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "heap_insert", "lineno_map": [[81, 81], [82, 82], [85, 85], [86, 86]], "source_code_file": "lib/heap.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "heap_remove_top", "lineno_map": [[98, 98], [101, 101], [102, 102], [103, 103]], "source_code_file": "lib/heap.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "heapify_down", "lineno_map": [[114, 114], [116, 116], [117, 117], [119, 119], [121, 121], [122, 122], [124, 124], [127, 127], [128, 128], [131, 131]], "source_code_file": "lib/heap.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "heapify_up", "lineno_map": [[141, 141], [142, 142], [144, 144], [146, 146], [147, 147], [150, 150]], "source_code_file": "lib/heap.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "set_acl", "lineno_map": [[44, 44], [45, 45], [46, 46]], "source_code_file": "lib/set-acl.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "str2signum", "lineno_map": [[263, 263], [266, 266], [267, 267], [273, 273], [274, 274], [279, 279], [280, 280], [282, 282], [284, 284], [285, 285], [288, 288], [290, 290], [291, 291]], "source_code_file": "lib/sig2str.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "str2sig", "lineno_map": [[306, 306]], "source_code_file": "lib/sig2str.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "sig2str", "lineno_map": [[318, 318], [319, 319], [321, 321], [326, 326], [327, 327], [330, 330], [333, 333], [335, 335], [336, 336], [340, 340], [341, 341], [344, 344], [345, 345], [346, 346]], "source_code_file": "lib/sig2str.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "fd_safer", "lineno_map": [[39, 39], [41, 41], [42, 42], [43, 43], [44, 44], [45, 45]], "source_code_file": "lib/fd-safer.c", "binary_file1": "mkdir.json", "binary_file2": "mkdir.json"}
{"fname": "di_ent_hash", "lineno_map": [[78, 78], [79, 79], [84, 84], [86, 86], [87, 87], [88, 88]], "source_code_file": "lib/di-set.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "di_ent_compare", "lineno_map": [[97, 97], [98, 98]], "source_code_file": "lib/di-set.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "di_ent_free", "lineno_map": [[106, 106], [107, 107], [108, 108]], "source_code_file": "lib/di-set.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "di_set_alloc", "lineno_map": [[115, 115], [116, 116], [119, 119], [122, 122], [124, 124], [127, 127], [128, 128]], "source_code_file": "lib/di-set.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "di_set_free", "lineno_map": [[138, 138], [139, 139], [140, 140], [141, 141]], "source_code_file": "lib/di-set.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "map_device", "lineno_map": [[158, 158], [159, 159], [162, 162], [167, 167], [168, 168], [173, 173], [174, 174], [175, 175], [178, 178], [181, 181], [188, 188], [191, 191]], "source_code_file": "lib/di-set.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "map_inode_number", "lineno_map": [[203, 203], [206, 206], [208, 208], [209, 209]], "source_code_file": "lib/di-set.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "di_set_insert", "lineno_map": [[226, 226], [227, 227], [231, 231], [232, 232]], "source_code_file": "lib/di-set.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "di_set_lookup", "lineno_map": [[248, 248], [249, 249], [253, 253], [254, 254]], "source_code_file": "lib/di-set.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "fread_file", "lineno_map": [[45, 45], [46, 46], [53, 53], [55, 55], [57, 57], [59, 59], [62, 62], [64, 64], [68, 68], [73, 73], [77, 77], [84, 84], [85, 85], [86, 86], [88, 88], [90, 90], [91, 91], [95, 95], [97, 97], [98, 98], [99, 99], [102, 102], [103, 103], [110, 110], [112, 112], [116, 116], [117, 117], [119, 119], [121, 121], [123, 123], [127, 127], [131, 131], [132, 132]], "source_code_file": "lib/read-file.c", "binary_file1": "ptx.json", "binary_file2": "ptx.json"}
{"fname": "internal_read_file", "lineno_map": [[140, 140], [144, 144], [147, 147], [149, 149], [151, 151], [153, 153], [155, 155], [156, 156], [158, 158]], "source_code_file": "lib/read-file.c", "binary_file1": "ptx.json", "binary_file2": "ptx.json"}
{"fname": "randint_choose_1", "lineno_map": [[45, 45], [46, 46], [47, 47]], "source_code_file": "lib/randperm.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "ceil_lg", "lineno_map": [[36, 36], [37, 37], [38, 38]], "source_code_file": "lib/randperm.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "randperm_bound", "lineno_map": [[51, 51], [54, 54], [57, 57]], "source_code_file": "lib/randperm.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "swap", "lineno_map": [[67, 67], [68, 68], [69, 69]], "source_code_file": "lib/randperm.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "sparse_hash_", "lineno_map": [[86, 86]], "source_code_file": "lib/randperm.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "sparse_cmp_", "lineno_map": [[93, 93], [94, 94]], "source_code_file": "lib/randperm.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "sparse_swap", "lineno_map": [[117, 117], [118, 118], [121, 121], [123, 123], [124, 124], [126, 126], [128, 128], [129, 129], [132, 132], [133, 133], [134, 134], [135, 135], [136, 136], [137, 137], [138, 138], [140, 140]], "source_code_file": "lib/randperm.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "sparse_free", "lineno_map": [[146, 146]], "source_code_file": "lib/randperm.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "randperm_new", "lineno_map": [[159, 159], [162, 162], [166, 166], [167, 167], [199, 199], [204, 204], [206, 206], [207, 207], [208, 208], [209, 209], [213, 213], [214, 214], [215, 215], [216, 216], [219, 219], [221, 221], [222, 222], [223, 223], [225, 225], [228, 228], [229, 229], [231, 231]], "source_code_file": "lib/randperm.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "dtotimespec", "lineno_map": [[32, 32], [34, 34], [38, 38], [39, 39], [40, 40], [41, 41], [42, 42], [43, 43], [45, 45], [47, 47], [48, 48]], "source_code_file": "lib/dtotimespec.c", "binary_file1": "tail.json", "binary_file2": "tail.json"}
{"fname": "rpl_freopen", "lineno_map": [[55, 55], [62, 62], [64, 64], [73, 73], [75, 75], [76, 76], [78, 78], [79, 79], [80, 80], [82, 82], [83, 83], [84, 84], [86, 86], [87, 87]], "source_code_file": "lib/freopen.c", "binary_file1": "ptx.json", "binary_file2": "ptx.json"}
{"fname": "freadahead", "lineno_map": [[38, 38], [41, 41]], "source_code_file": "lib/freadahead.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "direntry_cmp_name", "lineno_map": [[53, 53], [54, 54]], "source_code_file": "lib/savedir.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "direntry_cmp_inode", "lineno_map": [[65, 65], [66, 66]], "source_code_file": "lib/savedir.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "streamsavedir", "lineno_map": [[93, 93], [94, 94], [95, 95], [96, 96], [97, 97], [98, 98], [100, 100], [102, 102], [110, 110], [111, 111], [112, 112], [117, 117], [118, 118], [120, 120], [121, 121], [123, 123], [125, 125], [126, 126], [127, 127], [129, 129], [131, 131], [133, 133], [137, 137], [139, 139], [140, 140], [141, 141], [142, 142], [143, 143], [145, 145], [147, 147], [151, 151], [152, 152], [154, 154], [155, 155], [156, 156], [160, 160], [164, 164], [165, 165], [166, 166], [167, 167], [168, 168], [170, 170], [171, 171], [172, 172], [174, 174], [176, 176], [177, 177], [179, 179]], "source_code_file": "lib/savedir.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "savedir", "lineno_map": [[191, 191], [192, 192], [196, 196], [197, 197], [199, 199], [200, 200], [201, 201]], "source_code_file": "lib/savedir.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "hash_get_max_bucket_length", "lineno_map": [[177, 177], [179, 179], [181, 181], [183, 183], [184, 184], [186, 186], [187, 187], [189, 189], [190, 190]], "source_code_file": "lib/hash.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "hash_table_ok", "lineno_map": [[204, 204], [205, 205], [207, 207], [209, 209], [211, 211], [214, 214], [215, 215], [218, 218], [219, 219], [223, 223]], "source_code_file": "lib/hash.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "hash_print_statistics", "lineno_map": [[232, 232], [233, 233], [234, 234], [235, 235], [237, 237], [238, 238], [239, 239], [241, 241], [242, 242]], "source_code_file": "lib/hash.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "safe_hasher", "lineno_map": [[251, 251], [252, 252], [253, 253]], "source_code_file": "lib/hash.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "hash_lookup", "lineno_map": [[263, 263], [266, 266], [269, 269], [270, 270]], "source_code_file": "lib/hash.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "hash_get_first", "lineno_map": [[292, 292], [295, 295], [296, 296], [297, 297], [298, 298]], "source_code_file": "lib/hash.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "hash_get_next", "lineno_map": [[309, 309], [313, 313], [316, 316], [318, 318], [320, 320], [323, 323], [324, 324]], "source_code_file": "lib/hash.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "hash_get_entries", "lineno_map": [[339, 339], [343, 343], [345, 345], [347, 347], [349, 349], [351, 351]], "source_code_file": "lib/hash.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "hash_do_for_each", "lineno_map": [[371, 371], [375, 375], [377, 377], [379, 379], [381, 381], [383, 383]], "source_code_file": "lib/hash.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "hash_string", "lineno_map": [[430, 430], [433, 433], [434, 434]], "source_code_file": "lib/hash.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "is_prime", "lineno_map": [[446, 446], [447, 447], [449, 449], [451, 451], [452, 452], [453, 453]], "source_code_file": "lib/hash.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "next_prime", "lineno_map": [[466, 466], [467, 467], [470, 470], [472, 472], [473, 473]], "source_code_file": "lib/hash.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "hash_reset_tuning", "lineno_map": [[481, 481]], "source_code_file": "lib/hash.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "raw_hasher", "lineno_map": [[493, 493]], "source_code_file": "lib/hash.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "check_tuning", "lineno_map": [[514, 514], [516, 516], [524, 524], [526, 526], [527, 527], [528, 528], [529, 529], [530, 530], [531, 531], [532, 532], [535, 535]], "source_code_file": "lib/hash.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "compute_bucket_size", "lineno_map": [[546, 546], [548, 548], [549, 549], [551, 551], [553, 553], [554, 554]], "source_code_file": "lib/hash.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "hash_initialize", "lineno_map": [[600, 600], [601, 601], [602, 602], [603, 603], [605, 605], [606, 606], [609, 609], [610, 610], [611, 611], [612, 612], [622, 622], [623, 623], [626, 626], [627, 627], [629, 629], [630, 630], [631, 631], [633, 633], [634, 634], [635, 635], [637, 637], [644, 644]], "source_code_file": "lib/hash.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "hash_clear", "lineno_map": [[657, 657], [659, 659], [665, 665], [667, 667], [668, 668], [669, 669], [671, 671], [674, 674], [675, 675], [679, 679], [680, 680], [681, 681], [682, 682], [686, 686], [687, 687]], "source_code_file": "lib/hash.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "hash_free", "lineno_map": [[703, 703], [705, 705], [707, 707], [709, 709], [710, 710], [722, 722], [724, 724], [726, 726], [727, 727], [732, 732], [734, 734], [735, 735], [741, 741], [742, 742]], "source_code_file": "lib/hash.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "allocate_entry", "lineno_map": [[755, 755], [757, 757], [758, 758], [765, 765]], "source_code_file": "lib/hash.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "free_entry", "lineno_map": [[778, 778], [779, 779], [780, 780]], "source_code_file": "lib/hash.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "hash_find_entry", "lineno_map": [[793, 793], [796, 796], [799, 799], [803, 803], [805, 805], [807, 807], [809, 809], [811, 811], [815, 815], [816, 816], [820, 820], [828, 828], [830, 830], [831, 831], [833, 833], [835, 835], [837, 837], [841, 841], [842, 842]], "source_code_file": "lib/hash.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "transfer_entries", "lineno_map": [[865, 865], [866, 866], [877, 877], [879, 879], [880, 880], [882, 882], [884, 884], [888, 888], [889, 889], [895, 895], [896, 896], [897, 897], [903, 903], [904, 904], [905, 905], [906, 906], [907, 907], [909, 909], [913, 913], [915, 915], [918, 918], [919, 919], [920, 920], [925, 925], [926, 926], [928, 928], [929, 929]], "source_code_file": "lib/hash.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "hash_rehash", "lineno_map": [[947, 947], [949, 949], [951, 951], [953, 953], [954, 954], [955, 955], [957, 957], [958, 958], [959, 959], [960, 960], [961, 961], [962, 962], [963, 963], [964, 964], [984, 984], [986, 986], [989, 989], [990, 990], [991, 991], [992, 992], [993, 993], [994, 994], [1012, 1012], [1013, 1013], [1014, 1014], [1015, 1015], [1017, 1017]], "source_code_file": "lib/hash.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "hash_insert_if_absent", "lineno_map": [[1047, 1047], [1048, 1048], [1051, 1051], [1053, 1053], [1054, 1054], [1063, 1063], [1064, 1064], [1068, 1068], [1069, 1069], [1070, 1070], [1072, 1072], [1073, 1073], [1074, 1074], [1075, 1075], [1076, 1076], [1077, 1077], [1079, 1079], [1083, 1083], [1087, 1087], [1088, 1088], [1094, 1094], [1096, 1096], [1098, 1098], [1103, 1103], [1104, 1104], [1105, 1105], [1106, 1106], [1112, 1112], [1113, 1113], [1114, 1114]], "source_code_file": "lib/hash.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "hash_insert", "lineno_map": [[1129, 1129], [1132, 1132]], "source_code_file": "lib/hash.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "hash_delete", "lineno_map": [[1145, 1145], [1146, 1146], [1149, 1149], [1150, 1150], [1152, 1152], [1157, 1157], [1158, 1158], [1162, 1162], [1163, 1163], [1164, 1164], [1166, 1166], [1167, 1167], [1168, 1168], [1169, 1169], [1170, 1170], [1171, 1171], [1173, 1173], [1181, 1181], [1183, 1183], [1185, 1185], [1186, 1186], [1187, 1187], [1189, 1189]], "source_code_file": "lib/hash.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "parse_with_separator", "lineno_map": [[115, 115], [116, 116], [117, 117], [119, 119], [120, 120], [121, 121], [122, 122], [123, 123], [129, 129], [130, 130], [132, 132], [133, 133], [137, 137], [138, 138], [140, 140], [141, 141], [145, 145], [147, 147], [158, 158], [161, 161], [162, 162], [164, 164], [165, 165], [169, 169], [174, 174], [175, 175], [176, 176], [178, 178], [183, 183], [184, 184], [189, 189], [190, 190], [191, 191], [192, 192], [195, 195], [198, 198], [202, 202], [203, 203], [206, 206], [207, 207], [208, 208], [210, 210], [213, 213], [214, 214], [215, 215], [218, 218], [220, 220], [221, 221], [222, 222], [223, 223], [225, 225], [226, 226], [228, 228], [230, 230], [231, 231], [235, 235], [236, 236]], "source_code_file": "lib/userspec.c", "binary_file1": "chroot.json", "binary_file2": "chroot.json"}
{"fname": "parse_user_spec", "lineno_map": [[262, 262], [263, 263], [266, 266], [274, 274], [275, 275], [276, 276], [277, 277]], "source_code_file": "lib/userspec.c", "binary_file1": "chroot.json", "binary_file2": "chroot.json"}
{"fname": "memcpy_lowcase", "lineno_map": [[322, 322], [323, 323]], "source_code_file": "lib/nstrftime.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "memcpy_uppcase", "lineno_map": [[333, 333], [334, 334]], "source_code_file": "lib/nstrftime.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "iso_week_days", "lineno_map": [[384, 384], [386, 386]], "source_code_file": "lib/nstrftime.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "nstrftime", "lineno_map": [[435, 435]], "source_code_file": "lib/nstrftime.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "__strftime_internal", "lineno_map": [[459, 459], [498, 498], [499, 499], [514, 514], [522, 522], [552, 552], [553, 553], [555, 555], [556, 556], [558, 558], [559, 559], [561, 561], [563, 563], [565, 565], [579, 579], [580, 580], [581, 581], [583, 583], [666, 666], [668, 668], [677, 677], [683, 683], [684, 684], [688, 688], [689, 689], [691, 691], [692, 692], [701, 701], [703, 703], [706, 706], [707, 707], [709, 709], [712, 712], [713, 713], [715, 715], [717, 717], [721, 721], [725, 725], [729, 729], [734, 734], [735, 735], [777, 777], [779, 779], [783, 783], [785, 785], [787, 787], [788, 788], [798, 798], [800, 800], [802, 802], [803, 803], [814, 814], [816, 816], [817, 817], [819, 819], [832, 832], [834, 834], [836, 836], [837, 837], [850, 850], [865, 865], [869, 869], [883, 883], [896, 896], [897, 897], [898, 898], [899, 899], [900, 900], [901, 901], [902, 902], [903, 903], [904, 904], [910, 910], [931, 931], [932, 932], [933, 933], [937, 937], [950, 950], [952, 952], [956, 956], [959, 959], [962, 962], [965, 965], [971, 971], [976, 976], [977, 977], [981, 981], [982, 982], [985, 985], [986, 986], [994, 994], [1016, 1016], [1018, 1018], [1019, 1019], [1023, 1023], [1024, 1024], [1025, 1025], [1026, 1026], [1027, 1027], [1029, 1029], [1032, 1032], [1033, 1033], [1035, 1035], [1039, 1039], [1041, 1041], [1042, 1042], [1046, 1046], [1047, 1047], [1049, 1049], [1051, 1051], [1053, 1053], [1056, 1056], [1057, 1057], [1058, 1058], [1059, 1059], [1060, 1060], [1061, 1061], [1065, 1065], [1068, 1068], [1069, 1069], [1071, 1071], [1072, 1072], [1073, 1073], [1074, 1074], [1079, 1079], [1080, 1080], [1084, 1084], [1088, 1088], [1090, 1090], [1094, 1094], [1097, 1097], [1100, 1100], [1103, 1103], [1106, 1106], [1109, 1109], [1112, 1112], [1115, 1115], [1118, 1118], [1121, 1121], [1124, 1124], [1127, 1127], [1130, 1130], [1133, 1133], [1137, 1137], [1140, 1140], [1141, 1141], [1142, 1142], [1147, 1147], [1148, 1148], [1151, 1151], [1155, 1155], [1159, 1159], [1161, 1161], [1165, 1165], [1167, 1167], [1168, 1168], [1178, 1178], [1182, 1182], [1197, 1197], [1200, 1200], [1207, 1207], [1208, 1208], [1213, 1213], [1214, 1214], [1218, 1218], [1219, 1219], [1220, 1220], [1222, 1222], [1224, 1224], [1225, 1225], [1230, 1230], [1243, 1243], [1247, 1247], [1251, 1251], [1254, 1254], [1257, 1257], [1262, 1262], [1269, 1269], [1270, 1270], [1272, 1272], [1273, 1273], [1274, 1274], [1276, 1276], [1279, 1279], [1280, 1280], [1285, 1285], [1287, 1287], [1290, 1290], [1291, 1291], [1295, 1295], [1299, 1299], [1300, 1300], [1308, 1308], [1313, 1313], [1318, 1318], [1321, 1321], [1324, 1324], [1327, 1327], [1330, 1330], [1347, 1347], [1350, 1350], [1354, 1354], [1370, 1370], [1371, 1371], [1372, 1372], [1373, 1373], [1377, 1377], [1379, 1379], [1380, 1380], [1393, 1393], [1400, 1400], [1402, 1402], [1404, 1404], [1408, 1408], [1411, 1411], [1420, 1420], [1467, 1467], [1468, 1468], [1469, 1469], [1470, 1470], [1472, 1472], [1475, 1475], [1478, 1478], [1481, 1481], [1485, 1485], [1487, 1487], [1489, 1489], [1497, 1497], [1506, 1506], [1508, 1508], [1515, 1515], [1516, 1516]], "source_code_file": "lib/nstrftime.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "memcasecmp", "lineno_map": [[35, 35], [36, 36], [37, 37], [39, 39], [40, 40], [41, 41], [42, 42], [43, 43], [45, 45]], "source_code_file": "lib/memcasecmp.c", "binary_file1": "uniq.json", "binary_file2": "uniq.json"}
{"fname": "init_tokenbuffer", "lineno_map": [[46, 46], [47, 47]], "source_code_file": "lib/readtokens.c", "binary_file1": "factor.json", "binary_file2": "factor.json"}
{"fname": "set_nth_bit", "lineno_map": [[62, 62], [63, 63]], "source_code_file": "lib/readtokens.c", "binary_file1": "factor.json", "binary_file2": "factor.json"}
{"fname": "readtoken", "lineno_map": [[90, 90], [91, 91], [93, 93], [94, 94], [98, 98], [103, 103], [104, 104], [105, 105], [108, 108], [111, 111], [112, 112], [114, 114], [116, 116], [119, 119], [121, 121], [124, 124], [125, 125], [128, 128], [129, 129]], "source_code_file": "lib/readtokens.c", "binary_file1": "factor.json", "binary_file2": "factor.json"}
{"fname": "readtokens", "lineno_map": [[148, 148], [154, 154], [155, 155], [157, 157], [159, 159], [160, 160], [161, 161], [163, 163], [164, 164], [168, 168], [169, 169], [171, 171], [172, 172], [175, 175], [178, 178], [179, 179], [182, 182], [183, 183], [184, 184], [185, 185], [188, 188], [189, 189], [190, 190], [191, 191], [193, 193]], "source_code_file": "lib/readtokens.c", "binary_file1": "factor.json", "binary_file2": "factor.json"}
{"fname": "openat_safer", "lineno_map": [[31, 31], [33, 33], [36, 36], [40, 40]], "source_code_file": "lib/openat-safer.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "careadlinkatcwd", "lineno_map": [[41, 41], [42, 42]], "source_code_file": "lib/areadlink.c", "binary_file1": "stdbuf.json", "binary_file2": "stdbuf.json"}
{"fname": "ftypelet", "lineno_map": [[57, 57], [59, 59], [63, 63], [65, 65], [67, 67], [69, 69], [73, 73]], "source_code_file": "lib/filemode.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "strmode", "lineno_map": [[98, 98], [99, 99], [100, 100], [101, 101], [102, 102], [103, 103], [104, 104], [105, 105], [106, 106], [107, 107], [108, 108], [109, 109], [110, 110], [111, 111], [112, 112], [113, 113], [114, 114], [115, 115]], "source_code_file": "lib/filemode.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "filemodestring", "lineno_map": [[168, 168]], "source_code_file": "lib/filemode.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "xgetcwd", "lineno_map": [[37, 37], [38, 38], [39, 39]], "source_code_file": "lib/xgetcwd.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "mbschr", "lineno_map": [[30, 30], [34, 34], [38, 38], [40, 40], [42, 42], [43, 43]], "source_code_file": "lib/mbschr.c", "binary_file1": "expr.json", "binary_file2": "expr.json"}
{"fname": "AD_compare", "lineno_map": [[33, 33], [34, 34], [35, 35], [36, 36], [37, 37], [38, 38]], "source_code_file": "lib/fts.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "AD_hash", "lineno_map": [[42, 42], [43, 43], [44, 44], [45, 45]], "source_code_file": "lib/fts.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "setup_dir", "lineno_map": [[51, 51], [52, 52], [55, 55], [57, 57], [58, 58], [62, 62], [63, 63], [64, 64], [65, 65], [68, 68], [69, 69]], "source_code_file": "lib/fts.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "enter_dir", "lineno_map": [[75, 75], [76, 76], [78, 78], [79, 79], [82, 82], [83, 83], [85, 85], [86, 86], [87, 87], [92, 92], [94, 94], [96, 96], [97, 97], [98, 98], [102, 102], [103, 103], [108, 108], [114, 114], [115, 115], [119, 119], [120, 120]], "source_code_file": "lib/fts.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "leave_dir", "lineno_map": [[126, 126], [127, 127], [128, 128], [132, 132], [133, 133], [134, 134], [135, 135], [136, 136], [137, 137], [141, 141], [142, 142], [143, 143], [146, 146]], "source_code_file": "lib/fts.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "fd_ring_clear", "lineno_map": [[277, 277], [279, 279], [280, 280], [281, 281]], "source_code_file": "lib/fts.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "fts_set_stat_required", "lineno_map": [[291, 291], [292, 292]], "source_code_file": "lib/fts.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "opendirat", "lineno_map": [[303, 303], [305, 305], [308, 308], [310, 310], [311, 311], [312, 312], [315, 315], [316, 316], [317, 317]], "source_code_file": "lib/fts.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "cwd_advance_fd", "lineno_map": [[331, 331], [332, 332], [334, 334], [338, 338], [340, 340], [341, 341], [343, 343], [345, 345], [346, 346], [349, 349]], "source_code_file": "lib/fts.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "restore_initial_cwd", "lineno_map": [[359, 359], [360, 360]], "source_code_file": "lib/fts.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "diropen", "lineno_map": [[372, 372], [373, 373], [374, 374], [376, 376], [377, 377], [378, 378]], "source_code_file": "lib/fts.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "fts_open", "lineno_map": [[390, 390], [391, 391], [395, 395], [396, 396], [399, 399], [400, 400], [403, 403], [404, 404], [409, 409], [411, 411], [412, 412], [413, 413], [416, 416], [417, 417], [418, 418], [422, 422], [464, 464], [465, 465], [470, 470], [471, 471], [473, 473], [474, 474], [488, 488], [491, 491], [493, 493], [495, 495], [499, 499], [500, 500], [501, 501], [502, 502], [505, 505], [507, 507], [508, 508], [509, 509], [513, 513], [514, 514], [515, 515], [517, 517], [524, 524], [525, 525], [526, 526], [528, 528], [529, 529], [530, 530], [532, 532], [533, 533], [537, 537], [538, 538], [545, 545], [547, 547], [548, 548], [549, 549], [550, 550], [560, 560], [561, 561], [562, 562], [564, 564], [567, 567], [568, 568], [569, 569], [570, 570]], "source_code_file": "lib/fts.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "fts_load", "lineno_map": [[588, 588], [589, 589], [590, 590], [591, 591], [592, 592], [593, 593], [595, 595]], "source_code_file": "lib/fts.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "fts_close", "lineno_map": [[602, 602], [609, 609], [610, 610], [611, 611], [612, 612], [613, 613], [615, 615], [619, 619], [620, 620], [621, 621], [622, 622], [624, 624], [626, 626], [627, 627], [628, 628], [630, 630], [633, 633], [634, 634], [638, 638], [639, 639], [640, 640], [643, 643], [645, 645], [646, 646], [648, 648], [651, 651], [654, 654], [655, 655]], "source_code_file": "lib/fts.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "dev_type_hash", "lineno_map": [[717, 717], [718, 718]], "source_code_file": "lib/fts.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "dev_type_compare", "lineno_map": [[725, 725], [726, 726]], "source_code_file": "lib/fts.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "filesystem_type", "lineno_map": [[737, 737], [738, 738], [744, 744], [747, 747], [748, 748], [749, 749], [751, 751], [754, 754], [755, 755], [756, 756], [761, 761], [764, 764], [766, 766], [767, 767], [769, 769], [770, 770], [772, 772], [773, 773], [774, 774], [776, 776]], "source_code_file": "lib/fts.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "dirent_inode_sort_may_be_useful", "lineno_map": [[796, 796]], "source_code_file": "lib/fts.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "leaf_optimization_0", "lineno_map": [[820, 820]], "source_code_file": "lib/fts.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "fts_read", "lineno_map": [[885, 885], [889, 889], [892, 892], [893, 893], [896, 896], [897, 897], [909, 909], [910, 910], [911, 911], [912, 912], [913, 913], [914, 914], [915, 915], [917, 917], [923, 923], [925, 925], [926, 926], [927, 927], [928, 928], [929, 929], [930, 930], [931, 931], [933, 933], [934, 934], [939, 939], [940, 940], [941, 941], [942, 942], [957, 957], [958, 958], [959, 959], [960, 960], [961, 961], [962, 962], [963, 963], [964, 964], [966, 966], [967, 967], [972, 972], [973, 973], [974, 974], [977, 977], [978, 978], [983, 983], [988, 988], [990, 990], [991, 991], [992, 992], [994, 994], [996, 996], [1001, 1001], [1005, 1005], [1006, 1006], [1007, 1007], [1014, 1014], [1015, 1015], [1016, 1016], [1019, 1019], [1020, 1020], [1021, 1021], [1030, 1030], [1032, 1032], [1033, 1033], [1034, 1034], [1035, 1035], [1036, 1036], [1037, 1037], [1039, 1039], [1041, 1041], [1044, 1044], [1045, 1045], [1046, 1046], [1048, 1048], [1049, 1049], [1051, 1051], [1053, 1053], [1054, 1054], [1055, 1055], [1056, 1056], [1057, 1057], [1064, 1064], [1065, 1065], [1066, 1066], [1067, 1067], [1068, 1068], [1069, 1069], [1073, 1073], [1076, 1076], [1081, 1081], [1082, 1082], [1084, 1084], [1086, 1086], [1095, 1095], [1096, 1096], [1097, 1097], [1099, 1099], [1104, 1104], [1105, 1105], [1109, 1109], [1112, 1112], [1120, 1120], [1121, 1121], [1122, 1122], [1123, 1123], [1125, 1125], [1126, 1126], [1127, 1127], [1128, 1128], [1130, 1130], [1131, 1131], [1132, 1132], [1133, 1133], [1134, 1134], [1140, 1140], [1141, 1141], [1142, 1142], [1143, 1143]], "source_code_file": "lib/fts.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "fts_set", "lineno_map": [[1158, 1158], [1159, 1159], [1160, 1160], [1163, 1163]], "source_code_file": "lib/fts.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "fts_children", "lineno_map": [[1173, 1173], [1174, 1174], [1179, 1179], [1185, 1185], [1188, 1188], [1192, 1192], [1200, 1200], [1204, 1204], [1205, 1205], [1207, 1207], [1208, 1208], [1209, 1209], [1211, 1211], [1220, 1220], [1221, 1221], [1224, 1224], [1226, 1226], [1227, 1227], [1229, 1229], [1233, 1233], [1235, 1235], [1236, 1236], [1237, 1237], [1240, 1240]], "source_code_file": "lib/fts.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "fts_compare_ino", "lineno_map": [[1254, 1254]], "source_code_file": "lib/fts.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "set_stat_type", "lineno_map": [[1263, 1263], [1266, 1266], [1269, 1269], [1272, 1272], [1275, 1275], [1278, 1278], [1281, 1281], [1284, 1284], [1287, 1287], [1289, 1289]], "source_code_file": "lib/fts.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "fts_build", "lineno_map": [[1340, 1340], [1341, 1341], [1342, 1342], [1348, 1348], [1350, 1350], [1351, 1351], [1352, 1352], [1354, 1354], [1355, 1355], [1357, 1357], [1358, 1358], [1367, 1367], [1369, 1369], [1371, 1371], [1372, 1372], [1379, 1379], [1380, 1380], [1381, 1381], [1388, 1388], [1389, 1389], [1390, 1390], [1392, 1392], [1405, 1405], [1422, 1422], [1426, 1426], [1432, 1432], [1433, 1433], [1434, 1434], [1435, 1435], [1436, 1436], [1437, 1437], [1438, 1438], [1440, 1440], [1441, 1441], [1442, 1442], [1443, 1443], [1444, 1444], [1445, 1445], [1446, 1446], [1447, 1447], [1448, 1448], [1449, 1449], [1450, 1450], [1452, 1452], [1466, 1466], [1467, 1467], [1468, 1468], [1469, 1469], [1472, 1472], [1474, 1474], [1475, 1475], [1477, 1477], [1480, 1480], [1481, 1481], [1482, 1482], [1483, 1483], [1484, 1484], [1486, 1486], [1487, 1487], [1488, 1488], [1489, 1489], [1490, 1490], [1493, 1493], [1498, 1498], [1499, 1499], [1501, 1501], [1502, 1502], [1503, 1503], [1505, 1505], [1507, 1507], [1508, 1508], [1514, 1514], [1515, 1515], [1516, 1516], [1517, 1517], [1518, 1518], [1519, 1519], [1520, 1520], [1524, 1524], [1525, 1525], [1526, 1526], [1527, 1527], [1529, 1529], [1532, 1532], [1533, 1533], [1540, 1540], [1541, 1541], [1542, 1542], [1543, 1543], [1544, 1544], [1545, 1545], [1548, 1548], [1549, 1549], [1550, 1550], [1554, 1554], [1557, 1557], [1558, 1558], [1559, 1559], [1561, 1561], [1563, 1563], [1576, 1576], [1577, 1577], [1578, 1578], [1579, 1579], [1580, 1580], [1583, 1583], [1584, 1584], [1586, 1586], [1590, 1590], [1591, 1591], [1592, 1592], [1594, 1594], [1595, 1595], [1606, 1606], [1607, 1607], [1608, 1608], [1610, 1610], [1611, 1611], [1619, 1619], [1620, 1620], [1628, 1628], [1629, 1629], [1635, 1635], [1636, 1636], [1637, 1637], [1638, 1638], [1648, 1648], [1649, 1649], [1650, 1650], [1651, 1651], [1652, 1652], [1653, 1653], [1654, 1654], [1659, 1659], [1660, 1660], [1661, 1661], [1662, 1662], [1663, 1663], [1667, 1667], [1668, 1668], [1669, 1669], [1670, 1670], [1674, 1674], [1675, 1675]], "source_code_file": "lib/fts.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "fts_stat", "lineno_map": [[1828, 1828], [1830, 1830], [1831, 1831], [1838, 1838], [1839, 1839], [1840, 1840], [1841, 1841], [1842, 1842], [1845, 1845], [1848, 1848], [1850, 1850], [1851, 1851], [1855, 1855], [1857, 1857], [1858, 1858], [1860, 1860], [1861, 1861], [1868, 1868], [1870, 1870]], "source_code_file": "lib/fts.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "fts_compar", "lineno_map": [[1883, 1883], [1884, 1884]], "source_code_file": "lib/fts.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "fts_sort", "lineno_map": [[1902, 1902], [1915, 1915], [1918, 1918], [1919, 1919], [1920, 1920], [1921, 1921], [1922, 1922], [1923, 1923], [1924, 1924], [1927, 1927], [1929, 1929], [1930, 1930], [1931, 1931], [1932, 1932], [1933, 1933], [1934, 1934]], "source_code_file": "lib/fts.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "fts_alloc", "lineno_map": [[1949, 1949], [1950, 1950], [1954, 1954], [1955, 1955], [1957, 1957], [1958, 1958], [1959, 1959], [1960, 1960], [1961, 1961], [1962, 1962], [1963, 1963], [1964, 1964], [1965, 1965]], "source_code_file": "lib/fts.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "fts_lfree", "lineno_map": [[1976, 1976], [1977, 1977], [1978, 1978], [1979, 1979], [1980, 1980]], "source_code_file": "lib/fts.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "fts_palloc", "lineno_map": [[1996, 1996], [2001, 2001], [2002, 2002], [2003, 2003], [2004, 2004], [2007, 2007], [2008, 2008], [2009, 2009], [2010, 2010], [2011, 2011], [2014, 2014]], "source_code_file": "lib/fts.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "fts_padjust", "lineno_map": [[2027, 2027], [2037, 2037], [2038, 2038], [2041, 2041], [2042, 2042], [2043, 2043]], "source_code_file": "lib/fts.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "fts_maxarglen", "lineno_map": [[2053, 2053], [2054, 2054], [2055, 2055]], "source_code_file": "lib/fts.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "fts_safe_changedir", "lineno_map": [[2073, 2073], [2080, 2080], [2082, 2082], [2083, 2083], [2087, 2087], [2094, 2094], [2098, 2098], [2099, 2099], [2100, 2100], [2102, 2102], [2103, 2103], [2108, 2108], [2109, 2109], [2123, 2123], [2125, 2125], [2128, 2128], [2129, 2129], [2131, 2131], [2132, 2132], [2137, 2137], [2139, 2139], [2143, 2143], [2145, 2145], [2147, 2147], [2148, 2148], [2149, 2149]], "source_code_file": "lib/fts.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "xasprintf", "lineno_map": [[29, 29], [30, 30]], "source_code_file": "lib/xasprintf.c", "binary_file1": "stat.json", "binary_file2": "stat.json"}
{"fname": "dev_info_hash", "lineno_map": [[87, 87]], "source_code_file": "lib/utimecmp.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "dev_info_compare", "lineno_map": [[103, 103], [104, 104]], "source_code_file": "lib/utimecmp.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "utimecmpat", "lineno_map": [[153, 153], [154, 154], [155, 155], [156, 156], [158, 158], [167, 167], [176, 176], [178, 178], [180, 180], [185, 185], [186, 186], [187, 187], [189, 189], [191, 191], [192, 192], [194, 194], [195, 195], [197, 197], [198, 198], [199, 199], [202, 202], [206, 206], [212, 212], [214, 214], [215, 215], [217, 217], [219, 219], [220, 220], [221, 221], [225, 225], [257, 257], [262, 262], [263, 263], [264, 264], [265, 265], [266, 266], [267, 267], [276, 276], [285, 285], [286, 286], [287, 287], [291, 291], [293, 293], [294, 294], [296, 296], [297, 297], [298, 298], [299, 299], [300, 300], [302, 302], [303, 303], [308, 308], [311, 311], [324, 324], [325, 325], [327, 327], [328, 328], [338, 338], [339, 339], [340, 340], [341, 341], [343, 343], [348, 348], [351, 351], [352, 352], [353, 353], [357, 357], [358, 358], [359, 359], [362, 362], [369, 369], [370, 370], [371, 371], [373, 373], [375, 375], [377, 377], [379, 379], [382, 382], [383, 383], [389, 389], [390, 390], [394, 394], [395, 395], [400, 400], [401, 401], [402, 402]], "source_code_file": "lib/utimecmp.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "year", "lineno_map": [[63, 63], [66, 66], [70, 70], [72, 72], [74, 74], [79, 79], [81, 81], [90, 90], [91, 91], [92, 92], [94, 94], [99, 99]], "source_code_file": "lib/posixtm.c", "binary_file1": "touch.json", "binary_file2": "touch.json"}
{"fname": "posix_time_parse", "lineno_map": [[108, 108], [113, 113], [114, 114], [116, 116], [118, 118], [119, 119], [121, 121], [122, 122], [127, 127], [130, 130], [131, 131], [134, 134], [135, 135], [136, 136], [138, 138], [139, 139], [141, 141], [143, 143], [144, 144], [148, 148], [149, 149], [150, 150], [151, 151], [152, 152], [155, 155], [157, 157], [162, 162], [163, 163], [164, 164], [165, 165]], "source_code_file": "lib/posixtm.c", "binary_file1": "touch.json", "binary_file2": "touch.json"}
{"fname": "posixtime", "lineno_map": [[182, 182], [185, 185], [186, 186], [187, 187], [188, 188], [189, 189], [190, 190], [191, 191], [192, 192], [194, 194], [195, 195], [200, 200], [201, 201], [209, 209], [210, 210], [211, 211], [212, 212], [213, 213], [214, 214], [217, 217], [224, 224], [225, 225], [226, 226], [231, 231]], "source_code_file": "lib/posixtm.c", "binary_file1": "touch.json", "binary_file2": "touch.json"}
{"fname": "can_write_any_file", "lineno_map": [[37, 37], [39, 39], [44, 44], [46, 46], [47, 47]], "source_code_file": "lib/write-any-file.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "exclude_add_pattern_buffer", "lineno_map": [[134, 134], [135, 135], [136, 136], [137, 137]], "source_code_file": "lib/exclude.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "fnmatch_pattern_has_wildcards", "lineno_map": [[147, 147], [154, 154], [159, 159], [160, 160], [162, 162], [166, 166]], "source_code_file": "lib/exclude.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "unescape_pattern", "lineno_map": [[182, 182], [184, 184], [185, 185]], "source_code_file": "lib/exclude.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "string_hasher", "lineno_map": [[200, 200]], "source_code_file": "lib/exclude.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "string_hasher_ci", "lineno_map": [[208, 208], [210, 210], [212, 212], [214, 214], [217, 217], [218, 218], [220, 220], [222, 222]], "source_code_file": "lib/exclude.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "string_compare", "lineno_map": [[232, 232], [233, 233]], "source_code_file": "lib/exclude.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "string_compare_ci", "lineno_map": [[241, 241], [242, 242]], "source_code_file": "lib/exclude.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "string_free", "lineno_map": [[249, 249]], "source_code_file": "lib/exclude.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "new_exclude_segment", "lineno_map": [[257, 257], [258, 258], [259, 259], [260, 260], [266, 266], [267, 267], [270, 270], [276, 276], [277, 277]], "source_code_file": "lib/exclude.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "free_exclude_segment", "lineno_map": [[286, 286], [289, 289], [291, 291], [292, 292], [294, 294], [298, 298], [301, 301]], "source_code_file": "lib/exclude.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "free_exclude", "lineno_map": [[311, 311], [313, 313], [314, 314], [315, 315], [318, 318], [320, 320], [321, 321], [322, 322], [323, 323], [326, 326]], "source_code_file": "lib/exclude.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "fnmatch_no_wildcards", "lineno_map": [[335, 335], [338, 338], [339, 339], [341, 341], [342, 342], [343, 343], [345, 345], [346, 346], [347, 347], [360, 360], [363, 363], [365, 365], [366, 366], [367, 367], [368, 368], [369, 369], [372, 372]], "source_code_file": "lib/exclude.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "exclude_fnmatch", "lineno_map": [[380, 380], [381, 381], [383, 383], [384, 384], [387, 387], [388, 388], [389, 389], [390, 390]], "source_code_file": "lib/exclude.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "exclude_patopts", "lineno_map": [[398, 398], [401, 401], [402, 402]], "source_code_file": "lib/exclude.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "file_pattern_matches", "lineno_map": [[410, 410], [411, 411], [414, 414], [416, 416]], "source_code_file": "lib/exclude.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "file_name_matches", "lineno_map": [[429, 429], [430, 430], [435, 435], [439, 439], [441, 441], [443, 443], [444, 444], [446, 446], [453, 453], [455, 455], [456, 456], [457, 457], [462, 462]], "source_code_file": "lib/exclude.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "excluded_file_name", "lineno_map": [[473, 473], [474, 474], [477, 477], [483, 483], [485, 485], [487, 487], [488, 488], [489, 489], [494, 494], [498, 498], [506, 506], [511, 511]], "source_code_file": "lib/exclude.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "add_exclude", "lineno_map": [[524, 524], [525, 525], [527, 527], [528, 528], [529, 529], [530, 530], [532, 532], [534, 534], [535, 535], [536, 536], [538, 538], [540, 540], [541, 541], [544, 544], [545, 545], [547, 547], [550, 550], [552, 552], [553, 553], [555, 555], [556, 556], [559, 559], [560, 560], [561, 561], [562, 562], [563, 563], [567, 567], [569, 569], [571, 571], [577, 577], [579, 579], [580, 580], [582, 582], [588, 588], [590, 590], [591, 591], [592, 592], [593, 593], [594, 594], [596, 596], [597, 597], [598, 598], [599, 599], [600, 600], [601, 601]], "source_code_file": "lib/exclude.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "add_exclude_fp", "lineno_map": [[616, 616], [620, 620], [621, 621], [623, 623], [625, 625], [627, 627], [628, 628], [629, 629], [632, 632], [633, 633], [635, 635], [636, 636], [637, 637], [639, 639], [641, 641], [643, 643], [644, 644], [646, 646], [648, 648], [650, 650], [651, 651], [653, 653], [657, 657], [658, 658], [661, 661], [664, 664]], "source_code_file": "lib/exclude.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "call_addfn", "lineno_map": [[671, 671], [672, 672]], "source_code_file": "lib/exclude.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "add_exclude_file", "lineno_map": [[680, 680], [682, 682], [684, 684], [685, 685], [686, 686], [689, 689], [691, 691], [692, 692]], "source_code_file": "lib/exclude.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "explicit_bzero", "lineno_map": [[42, 42]], "source_code_file": "lib/explicit_bzero.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "xstrtol_error", "lineno_map": [[52, 52], [57, 57], [60, 60], [63, 63], [68, 68], [72, 72], [76, 76], [78, 78], [79, 79], [80, 80], [81, 81], [84, 84], [86, 86]], "source_code_file": "lib/xstrtol-error.c", "binary_file1": "od.json", "binary_file2": "od.json"}
{"fname": "xstrtol_fatal", "lineno_map": [[96, 96], [97, 97]], "source_code_file": "lib/xstrtol-error.c", "binary_file1": "od.json", "binary_file2": "od.json"}
{"fname": "openat_save_fail", "lineno_map": [[37, 37], [38, 38], [44, 44]], "source_code_file": "lib/openat-die.c", "binary_file1": "chcon.json", "binary_file2": "chcon.json"}
{"fname": "openat_restore_fail", "lineno_map": [[56, 56], [57, 57], [61, 61]], "source_code_file": "lib/openat-die.c", "binary_file1": "chcon.json", "binary_file2": "chcon.json"}
{"fname": "fopen_safer", "lineno_map": [[33, 33], [35, 35], [37, 37], [39, 39], [41, 41], [43, 43], [45, 45], [46, 46], [47, 47], [51, 51], [52, 52], [54, 54], [55, 55], [56, 56]], "source_code_file": "lib/fopen-safer.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "xnanosleep", "lineno_map": [[40, 40], [50, 50], [51, 51], [53, 53]], "source_code_file": "lib/xnanosleep.c", "binary_file1": "tail.json", "binary_file2": "tail.json"}
{"fname": "xstrtod", "lineno_map": [[49, 49], [51, 51], [52, 52], [55, 55], [56, 56], [62, 62], [63, 63], [66, 66], [67, 67], [69, 69]], "source_code_file": "lib/xstrtod.c", "binary_file1": "tail.json", "binary_file2": "tail.json"}
{"fname": "unicode_to_mb", "lineno_map": [[80, 80], [82, 82], [84, 84], [86, 86], [88, 88], [89, 89], [91, 91], [94, 94], [98, 98], [101, 101], [109, 109], [110, 110], [114, 114], [123, 123], [124, 124], [125, 125], [126, 126], [129, 129], [132, 132], [147, 147], [148, 148]], "source_code_file": "lib/unicodeio.c", "binary_file1": "printf.json", "binary_file2": "printf.json"}
{"fname": "fwrite_success_callback", "lineno_map": [[165, 165], [171, 171]], "source_code_file": "lib/unicodeio.c", "binary_file1": "printf.json", "binary_file2": "printf.json"}
{"fname": "exit_failure_callback", "lineno_map": [[180, 180], [181, 181], [183, 183]], "source_code_file": "lib/unicodeio.c", "binary_file1": "printf.json", "binary_file2": "printf.json"}
{"fname": "fallback_failure_callback", "lineno_map": [[195, 195], [197, 197], [198, 198], [200, 200]], "source_code_file": "lib/unicodeio.c", "binary_file1": "printf.json", "binary_file2": "printf.json"}
{"fname": "print_unicode_char", "lineno_map": [[210, 210]], "source_code_file": "lib/unicodeio.c", "binary_file1": "printf.json", "binary_file2": "printf.json"}
{"fname": "hash_pjw", "lineno_map": [[34, 34], [36, 36], [37, 37]], "source_code_file": "lib/hash-pjw.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "close_stdin_set_file_name", "lineno_map": [[45, 45]], "source_code_file": "lib/closein.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "close_stdin", "lineno_map": [[81, 81], [87, 87], [91, 91], [92, 92], [94, 94], [95, 95], [96, 96], [100, 100], [101, 101], [102, 102], [105, 105], [108, 108], [110, 110], [111, 111]], "source_code_file": "lib/closein.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "find_backup_file_name", "lineno_map": [[34, 34], [35, 35], [36, 36]], "source_code_file": "lib/backup-find.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "get_version", "lineno_map": [[71, 71]], "source_code_file": "lib/backup-find.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "xget_version", "lineno_map": [[87, 87]], "source_code_file": "lib/backup-find.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "md5_init_ctx", "lineno_map": [[78, 78], [79, 79], [80, 80], [81, 81], [83, 83], [84, 84]], "source_code_file": "lib/md5.c", "binary_file1": "md5sum.json", "binary_file2": "md5sum.json"}
{"fname": "set_uint32", "lineno_map": [[93, 93]], "source_code_file": "lib/md5.c", "binary_file1": "md5sum.json", "binary_file2": "md5sum.json"}
{"fname": "md5_read_ctx", "lineno_map": [[101, 101], [102, 102], [103, 103], [104, 104], [105, 105]], "source_code_file": "lib/md5.c", "binary_file1": "md5sum.json", "binary_file2": "md5sum.json"}
{"fname": "md5_finish_ctx", "lineno_map": [[116, 116], [117, 117], [120, 120], [121, 121], [122, 122], [125, 125], [126, 126], [128, 128], [131, 131]], "source_code_file": "lib/md5.c", "binary_file1": "md5sum.json", "binary_file2": "md5sum.json"}
{"fname": "md5_stream", "lineno_map": [[147, 147], [149, 149], [150, 150], [153, 153], [154, 154], [158, 158], [168, 168], [178, 178], [181, 181], [183, 183], [185, 185], [188, 188], [193, 193], [195, 195], [205, 205], [211, 211], [212, 212], [215, 215], [216, 216]], "source_code_file": "lib/md5.c", "binary_file1": "md5sum.json", "binary_file2": "md5sum.json"}
{"fname": "md5_buffer", "lineno_map": [[232, 232], [235, 235]], "source_code_file": "lib/md5.c", "binary_file1": "md5sum.json", "binary_file2": "md5sum.json"}
{"fname": "md5_process_bytes", "lineno_map": [[247, 247], [249, 249], [250, 250], [252, 252], [253, 253], [255, 255], [257, 257], [259, 259], [262, 262], [263, 263], [267, 267], [268, 268], [272, 272], [276, 276], [277, 277], [279, 279], [280, 280], [281, 281], [286, 286], [287, 287], [288, 288], [293, 293], [295, 295], [297, 297], [298, 298], [299, 299], [301, 301], [302, 302], [305, 305], [307, 307]], "source_code_file": "lib/md5.c", "binary_file1": "md5sum.json", "binary_file2": "md5sum.json"}
{"fname": "md5_process_block", "lineno_map": [[328, 328], [329, 329], [330, 330], [331, 331], [332, 332], [333, 333], [334, 334], [335, 335], [340, 340], [341, 341], [345, 345], [347, 347], [348, 348], [349, 349], [350, 350], [351, 351], [385, 385], [386, 386], [387, 387], [388, 388], [389, 389], [390, 390], [391, 391], [392, 392], [393, 393], [394, 394], [395, 395], [396, 396], [397, 397], [398, 398], [399, 399], [400, 400], [416, 416], [417, 417], [418, 418], [419, 419], [420, 420], [421, 421], [422, 422], [423, 423], [424, 424], [425, 425], [426, 426], [427, 427], [428, 428], [429, 429], [430, 430], [431, 431], [434, 434], [435, 435], [436, 436], [437, 437], [438, 438], [439, 439], [440, 440], [441, 441], [442, 442], [443, 443], [444, 444], [445, 445], [446, 446], [447, 447], [448, 448], [449, 449], [452, 452], [453, 453], [454, 454], [455, 455], [456, 456], [457, 457], [458, 458], [459, 459], [460, 460], [461, 461], [462, 462], [463, 463], [464, 464], [465, 465], [466, 466], [467, 467], [470, 470], [471, 471], [472, 472], [473, 473], [477, 477], [478, 478], [479, 479], [480, 480]], "source_code_file": "lib/md5.c", "binary_file1": "md5sum.json", "binary_file2": "md5sum.json"}
{"fname": "argv_iter_init_argv", "lineno_map": [[42, 42], [43, 43], [45, 45], [46, 46], [47, 47]], "source_code_file": "lib/argv-iter.c", "binary_file1": "wc.json", "binary_file2": "wc.json"}
{"fname": "argv_iter_init_stream", "lineno_map": [[56, 56], [57, 57], [59, 59], [60, 60], [61, 61], [63, 63], [64, 64]], "source_code_file": "lib/argv-iter.c", "binary_file1": "wc.json", "binary_file2": "wc.json"}
{"fname": "argv_iter", "lineno_map": [[71, 71], [73, 73], [74, 74], [76, 76], [80, 80], [81, 81], [86, 86], [88, 88], [93, 93]], "source_code_file": "lib/argv-iter.c", "binary_file1": "wc.json", "binary_file2": "wc.json"}
{"fname": "argv_iter_free", "lineno_map": [[108, 108], [109, 109], [110, 110]], "source_code_file": "lib/argv-iter.c", "binary_file1": "wc.json", "binary_file2": "wc.json"}
{"fname": "opendir_safer", "lineno_map": [[33, 33], [35, 35], [37, 37], [39, 39], [52, 52], [53, 53], [55, 55], [56, 56], [60, 60], [61, 61], [62, 62], [63, 63], [69, 69], [70, 70], [71, 71]], "source_code_file": "lib/opendir-safer.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "__bswap_32", "lineno_map": [[46, 46], [47, 47]], "source_code_file": "lib/sha1.c", "binary_file1": "sha1sum.json", "binary_file2": "sha1sum.json"}
{"fname": "sha1_init_ctx", "lineno_map": [[64, 64], [65, 65], [66, 66], [67, 67], [68, 68], [70, 70], [71, 71]], "source_code_file": "lib/sha1.c", "binary_file1": "sha1sum.json", "binary_file2": "sha1sum.json"}
{"fname": "set_uint32", "lineno_map": [[80, 80]], "source_code_file": "lib/sha1.c", "binary_file1": "sha1sum.json", "binary_file2": "sha1sum.json"}
{"fname": "sha1_read_ctx", "lineno_map": [[88, 88], [89, 89], [90, 90], [91, 91], [92, 92], [93, 93]], "source_code_file": "lib/sha1.c", "binary_file1": "sha1sum.json", "binary_file2": "sha1sum.json"}
{"fname": "sha1_finish_ctx", "lineno_map": [[104, 104], [105, 105], [108, 108], [109, 109], [110, 110], [113, 113], [114, 114], [116, 116], [119, 119]], "source_code_file": "lib/sha1.c", "binary_file1": "sha1sum.json", "binary_file2": "sha1sum.json"}
{"fname": "afalg_stream", "lineno_map": [[105, 105], [106, 106], [107, 107]], "source_code_file": "lib/sha1.c", "binary_file1": "sha1sum.json", "binary_file2": "sha1sum.json"}
{"fname": "sha1_stream", "lineno_map": [[135, 135], [137, 137], [138, 138], [141, 141], [142, 142], [146, 146], [156, 156], [166, 166], [169, 169], [171, 171], [173, 173], [176, 176], [181, 181], [183, 183], [193, 193], [199, 199], [200, 200], [203, 203], [204, 204]], "source_code_file": "lib/sha1.c", "binary_file1": "sha1sum.json", "binary_file2": "sha1sum.json"}
{"fname": "sha1_buffer", "lineno_map": [[220, 220], [223, 223]], "source_code_file": "lib/sha1.c", "binary_file1": "sha1sum.json", "binary_file2": "sha1sum.json"}
{"fname": "sha1_process_bytes", "lineno_map": [[234, 234], [236, 236], [237, 237], [239, 239], [240, 240], [242, 242], [244, 244], [246, 246], [249, 249], [250, 250], [254, 254], [255, 255], [259, 259], [263, 263], [264, 264], [266, 266], [267, 267], [268, 268], [273, 273], [274, 274], [275, 275], [280, 280], [282, 282], [284, 284], [285, 285], [286, 286], [288, 288], [289, 289], [292, 292], [294, 294]], "source_code_file": "lib/sha1.c", "binary_file1": "sha1sum.json", "binary_file2": "sha1sum.json"}
{"fname": "sha1_process_block", "lineno_map": [[319, 319], [320, 320], [321, 321], [323, 323], [324, 324], [325, 325], [326, 326], [327, 327], [328, 328], [333, 333], [334, 334], [349, 349], [353, 353], [355, 355], [356, 356], [359, 359], [360, 360], [361, 361], [362, 362], [363, 363], [364, 364], [365, 365], [366, 366], [367, 367], [368, 368], [369, 369], [370, 370], [371, 371], [372, 372], [373, 373], [374, 374], [375, 375], [376, 376], [377, 377], [378, 378], [379, 379], [380, 380], [381, 381], [382, 382], [383, 383], [384, 384], [385, 385], [386, 386], [387, 387], [388, 388], [389, 389], [390, 390], [391, 391], [392, 392], [393, 393], [394, 394], [395, 395], [396, 396], [397, 397], [398, 398], [399, 399], [400, 400], [401, 401], [402, 402], [403, 403], [404, 404], [405, 405], [406, 406], [407, 407], [408, 408], [409, 409], [410, 410], [411, 411], [412, 412], [413, 413], [414, 414], [415, 415], [416, 416], [417, 417], [418, 418], [419, 419], [420, 420], [421, 421], [422, 422], [423, 423], [424, 424], [425, 425], [426, 426], [427, 427], [428, 428], [429, 429], [430, 430], [431, 431], [432, 432], [433, 433], [434, 434], [435, 435], [436, 436], [437, 437], [438, 438], [440, 440], [441, 441], [442, 442], [443, 443], [444, 444]], "source_code_file": "lib/sha1.c", "binary_file1": "sha1sum.json", "binary_file2": "sha1sum.json"}
{"fname": "canon_host_r", "lineno_map": [[62, 62], [64, 64], [67, 67], [68, 68], [69, 69], [74, 74], [75, 75], [76, 76], [77, 77], [79, 79], [80, 80]], "source_code_file": "lib/canon-host.c", "binary_file1": "pinky.json", "binary_file2": "pinky.json"}
{"fname": "c_strncasecmp", "lineno_map": [[29, 29], [30, 30], [33, 33], [38, 38], [39, 39], [41, 41], [44, 44], [45, 45], [47, 47]], "source_code_file": "lib/c-strncasecmp.c", "binary_file1": "ls.json", "binary_file2": "vdir.json"}
{"fname": "rpl_fseeko", "lineno_map": [[52, 52], [53, 53], [54, 54], [117, 117], [118, 118], [129, 129], [130, 130]], "source_code_file": "lib/fseeko.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "fd_safer_flag", "lineno_map": [[42, 42], [44, 44], [45, 45], [46, 46], [47, 47], [48, 48]], "source_code_file": "lib/fd-safer-flag.c", "binary_file1": "tac.json", "binary_file2": "tac.json"}
{"fname": "base64_encode_fast", "lineno_map": [[71, 71], [73, 73], [74, 74], [75, 75], [76, 76], [78, 78], [79, 79]], "source_code_file": "lib/base64.c", "binary_file1": "base64.json", "binary_file2": "base64.json"}
{"fname": "base64_encode", "lineno_map": [[98, 98], [100, 100], [104, 104], [106, 106], [107, 107], [109, 109], [110, 110], [111, 111], [112, 112], [114, 114], [116, 116], [117, 117], [118, 118], [120, 120], [122, 122], [123, 123], [125, 125], [126, 126], [127, 127], [128, 128], [131, 131], [132, 132]], "source_code_file": "lib/base64.c", "binary_file1": "base64.json", "binary_file2": "base64.json"}
{"fname": "base64_encode_alloc", "lineno_map": [[147, 147], [161, 161], [163, 163], [167, 167], [168, 168], [171, 171]], "source_code_file": "lib/base64.c", "binary_file1": "base64.json", "binary_file2": "base64.json"}
{"fname": "base64_decode_ctx_init", "lineno_map": [[338, 338]], "source_code_file": "lib/base64.c", "binary_file1": "base64.json", "binary_file2": "base64.json"}
{"fname": "get_4", "lineno_map": [[353, 353], [354, 354], [356, 356], [358, 358], [359, 359], [362, 362], [363, 363], [370, 370], [371, 371], [373, 373], [374, 374], [376, 376], [377, 377], [382, 382], [383, 383]], "source_code_file": "lib/base64.c", "binary_file1": "base64.json", "binary_file2": "base64.json"}
{"fname": "decode_4", "lineno_map": [[406, 406], [407, 407], [410, 410], [413, 413], [415, 415], [416, 416], [417, 417], [420, 420], [423, 423], [425, 425], [428, 428], [433, 433], [436, 436], [438, 438], [439, 439], [440, 440], [443, 443], [446, 446], [448, 448], [453, 453], [456, 456], [458, 458], [459, 459], [460, 460], [465, 465]], "source_code_file": "lib/base64.c", "binary_file1": "base64.json", "binary_file2": "base64.json"}
{"fname": "base64_decode_ctx", "lineno_map": [[492, 492], [493, 493], [494, 494], [495, 495], [497, 497], [499, 499], [500, 500], [506, 506], [507, 507], [513, 513], [514, 514], [517, 517], [518, 518], [522, 522], [527, 527], [529, 529], [530, 530], [531, 531], [535, 535], [536, 536], [539, 539], [542, 542], [543, 543], [545, 545], [550, 550], [552, 552], [555, 555], [558, 558], [562, 562]], "source_code_file": "lib/base64.c", "binary_file1": "base64.json", "binary_file2": "base64.json"}
{"fname": "base64_decode_alloc_ctx", "lineno_map": [[588, 588], [590, 590], [591, 591], [594, 594], [596, 596], [597, 597], [601, 601], [602, 602]], "source_code_file": "lib/base64.c", "binary_file1": "base64.json", "binary_file2": "base64.json"}
{"fname": "u8_uctomb", "lineno_map": [[33, 33], [35, 35], [37, 37], [46, 46], [47, 47], [48, 48], [50, 50], [51, 51], [55, 55], [56, 56], [60, 60], [62, 62], [64, 64], [65, 65], [66, 66], [67, 67]], "source_code_file": "lib/unistr/u8-uctomb.c", "binary_file1": "printf.json", "binary_file2": "printf.json"}
{"fname": "usage", "lineno_map": [[76, 76], [77, 77], [80, 80], [85, 85], [90, 90], [95, 95], [100, 100], [104, 104], [111, 111], [115, 115], [119, 119], [122, 122], [135, 135], [136, 136], [137, 137], [143, 143], [151, 151], [153, 153]], "source_code_file": "src/chown.c", "binary_file1": "chown.json", "binary_file2": "chown.json"}
{"fname": "main", "lineno_map": [[159, 159], [161, 161], [162, 162], [166, 166], [167, 167], [170, 170], [174, 174], [181, 181], [182, 182], [183, 183], [184, 184], [186, 186], [188, 188], [190, 190], [193, 193], [196, 196], [200, 200], [204, 204], [208, 208], [213, 213], [217, 217], [221, 221], [225, 225], [230, 230], [233, 233], [234, 234], [239, 239], [243, 243], [247, 247], [251, 251], [254, 254], [255, 255], [257, 257], [261, 261], [263, 263], [265, 265], [266, 266], [268, 268], [273, 273], [275, 275], [277, 277], [279, 279], [280, 280], [282, 282], [283, 283], [286, 286], [289, 289], [290, 290], [293, 293], [294, 294], [295, 295], [296, 296], [300, 300], [302, 302], [303, 303], [308, 308], [309, 309], [311, 311], [314, 314], [317, 317], [318, 318], [319, 319], [323, 323], [324, 324]], "source_code_file": "src/chown.c", "binary_file1": "chown.json", "binary_file2": "chown.json"}
{"fname": "emit_stdin_note", "lineno_map": [[579, 579], [580, 580], [583, 583]], "source_code_file": "src/ptx.c", "binary_file1": "ptx.json", "binary_file2": "ptx.json"}
{"fname": "emit_mandatory_arg_note", "lineno_map": [[586, 586], [587, 587], [590, 590]], "source_code_file": "src/ptx.c", "binary_file1": "ptx.json", "binary_file2": "ptx.json"}
{"fname": "emit_ancillary_info", "lineno_map": [[631, 631], [632, 632], [642, 642], [643, 643], [645, 645], [646, 646], [648, 648], [649, 649], [651, 651], [655, 655], [656, 656], [662, 662], [665, 665], [667, 667], [669, 669]], "source_code_file": "src/ptx.c", "binary_file1": "ptx.json", "binary_file2": "ptx.json"}
{"fname": "copy_unescaped_string", "lineno_map": [[306, 306], [307, 307], [309, 309], [311, 311], [313, 313], [314, 314], [317, 317], [318, 318], [319, 319], [320, 320], [321, 321], [322, 322], [324, 324], [325, 325], [328, 328], [332, 332], [333, 333], [334, 334], [335, 335], [336, 336], [337, 337], [342, 342], [346, 346], [350, 350], [351, 351], [355, 355], [356, 356], [360, 360], [361, 361], [365, 365], [366, 366], [370, 370], [371, 371], [375, 375], [376, 376], [381, 381], [385, 385], [393, 393], [394, 394], [399, 399], [402, 402]], "source_code_file": "src/ptx.c", "binary_file1": "ptx.json", "binary_file2": "ptx.json"}
{"fname": "compile_regex", "lineno_map": [[413, 413], [414, 414], [417, 417], [418, 418], [419, 419], [420, 420], [422, 422], [423, 423], [424, 424], [430, 430]], "source_code_file": "src/ptx.c", "binary_file1": "ptx.json", "binary_file2": "ptx.json"}
{"fname": "initialize_regex", "lineno_map": [[445, 445], [446, 446], [447, 447], [456, 456], [458, 458], [459, 459], [461, 461], [462, 462], [464, 464], [466, 466], [467, 467], [477, 477], [478, 478], [479, 479], [481, 481], [486, 486], [487, 487], [494, 494], [495, 495], [496, 496], [497, 497]], "source_code_file": "src/ptx.c", "binary_file1": "ptx.json", "binary_file2": "ptx.json"}
{"fname": "swallow_file_in_memory", "lineno_map": [[521, 521], [522, 522], [523, 523], [525, 525], [527, 527], [528, 528], [530, 530]], "source_code_file": "src/ptx.c", "binary_file1": "ptx.json", "binary_file2": "ptx.json"}
{"fname": "compare_words", "lineno_map": [[552, 552], [554, 554], [556, 556], [558, 558], [559, 559], [560, 560], [566, 566], [568, 568], [569, 569], [570, 570]], "source_code_file": "src/ptx.c", "binary_file1": "ptx.json", "binary_file2": "ptx.json"}
{"fname": "compare_occurs", "lineno_map": [[593, 593], [595, 595], [596, 596]], "source_code_file": "src/ptx.c", "binary_file1": "ptx.json", "binary_file2": "ptx.json"}
{"fname": "search_table", "lineno_map": [[611, 611], [612, 612], [613, 613], [615, 615], [616, 616], [617, 617], [618, 618], [619, 619], [620, 620]], "source_code_file": "src/ptx.c", "binary_file1": "ptx.json", "binary_file2": "ptx.json"}
{"fname": "sort_found_occurs", "lineno_map": [[638, 638], [639, 639]], "source_code_file": "src/ptx.c", "binary_file1": "ptx.json", "binary_file2": "ptx.json"}
{"fname": "digest_break_file", "lineno_map": [[657, 657], [661, 661], [662, 662], [663, 663], [665, 665], [674, 674], [675, 675], [676, 676], [681, 681]], "source_code_file": "src/ptx.c", "binary_file1": "ptx.json", "binary_file2": "ptx.json"}
{"fname": "digest_word_file", "lineno_map": [[698, 698], [700, 700], [701, 701], [702, 702], [706, 706], [707, 707], [712, 712], [713, 713], [714, 714], [718, 718], [720, 720], [721, 721], [723, 723], [724, 724], [725, 725], [730, 730], [731, 731], [736, 736]], "source_code_file": "src/ptx.c", "binary_file1": "ptx.json", "binary_file2": "ptx.json"}
{"fname": "find_occurs_in_text", "lineno_map": [[762, 762], [768, 768], [779, 779], [780, 780], [781, 781], [783, 783], [784, 784], [785, 785], [790, 790], [791, 791], [792, 792], [799, 799], [809, 809], [810, 810], [811, 811], [812, 812], [813, 813], [816, 816], [822, 822], [827, 827], [835, 835], [836, 836], [843, 843], [850, 850], [853, 853], [854, 854], [855, 855], [857, 857], [858, 858], [867, 867], [868, 868], [869, 869], [870, 870], [872, 872], [875, 875], [877, 877], [878, 878], [879, 879], [881, 881], [886, 886], [891, 891], [893, 893], [894, 894], [904, 904], [905, 905], [906, 906], [908, 908], [909, 909], [916, 916], [918, 918], [919, 919], [921, 921], [922, 922], [923, 923], [924, 924], [925, 925], [928, 928], [929, 929], [930, 930], [943, 943], [944, 944], [945, 945], [946, 946], [952, 952], [953, 953], [956, 956], [960, 960], [969, 969], [970, 970], [972, 972], [973, 973], [974, 974], [975, 975], [978, 978], [980, 980], [982, 982], [990, 990], [991, 991], [992, 992], [997, 997], [999, 999], [1000, 1000], [1005, 1005], [1006, 1006], [1007, 1007], [1008, 1008], [1010, 1010]], "source_code_file": "src/ptx.c", "binary_file1": "ptx.json", "binary_file2": "ptx.json"}
{"fname": "print_spaces", "lineno_map": [[1024, 1024], [1025, 1025]], "source_code_file": "src/ptx.c", "binary_file1": "ptx.json", "binary_file2": "ptx.json"}
{"fname": "print_field", "lineno_map": [[1042, 1042], [1044, 1044], [1045, 1045], [1053, 1053], [1054, 1054], [1056, 1056], [1057, 1057], [1061, 1061], [1064, 1064], [1068, 1068], [1072, 1072], [1076, 1076], [1080, 1080], [1085, 1085], [1089, 1089], [1093, 1093], [1097, 1097], [1101, 1101], [1105, 1105], [1109, 1109], [1112, 1112], [1116, 1116], [1120, 1120], [1125, 1125], [1128, 1128], [1132, 1132], [1136, 1136], [1147, 1147], [1151, 1151], [1152, 1152], [1161, 1161], [1162, 1162], [1169, 1169], [1174, 1174], [1179, 1179], [1183, 1183]], "source_code_file": "src/ptx.c", "binary_file1": "ptx.json", "binary_file2": "ptx.json"}
{"fname": "fix_output_parameters", "lineno_map": [[1207, 1207], [1209, 1209], [1210, 1210], [1212, 1212], [1213, 1213], [1214, 1214], [1216, 1216], [1217, 1217], [1218, 1218], [1219, 1219], [1220, 1220], [1222, 1222], [1223, 1223], [1229, 1229], [1230, 1230], [1231, 1231], [1232, 1232], [1246, 1246], [1247, 1247], [1248, 1248], [1254, 1254], [1255, 1255], [1257, 1257], [1259, 1259], [1284, 1284], [1285, 1285], [1286, 1286], [1287, 1287], [1298, 1298], [1305, 1305], [1306, 1306], [1307, 1307], [1312, 1312], [1324, 1324], [1331, 1331], [1332, 1332], [1337, 1337], [1338, 1338]], "source_code_file": "src/ptx.c", "binary_file1": "ptx.json", "binary_file2": "ptx.json"}
{"fname": "define_all_fields", "lineno_map": [[1368, 1368], [1369, 1369], [1370, 1370], [1371, 1371], [1373, 1373], [1374, 1374], [1376, 1376], [1377, 1377], [1378, 1378], [1380, 1380], [1381, 1381], [1383, 1383], [1384, 1384], [1386, 1386], [1388, 1388], [1402, 1402], [1405, 1405], [1406, 1406], [1409, 1409], [1417, 1417], [1418, 1418], [1419, 1419], [1421, 1421], [1422, 1422], [1424, 1424], [1426, 1426], [1427, 1427], [1428, 1428], [1431, 1431], [1433, 1433], [1443, 1443], [1445, 1445], [1447, 1447], [1448, 1448], [1450, 1450], [1451, 1451], [1452, 1452], [1453, 1453], [1455, 1455], [1456, 1456], [1459, 1459], [1460, 1460], [1462, 1462], [1464, 1464], [1465, 1465], [1468, 1468], [1470, 1470], [1477, 1477], [1478, 1478], [1479, 1479], [1489, 1489], [1491, 1491], [1493, 1493], [1494, 1494], [1496, 1496], [1497, 1497], [1498, 1498], [1500, 1500], [1502, 1502], [1503, 1503], [1504, 1504], [1507, 1507], [1509, 1509], [1516, 1516], [1517, 1517], [1518, 1518], [1521, 1521], [1528, 1528], [1529, 1529], [1530, 1530], [1532, 1532], [1533, 1533], [1534, 1534], [1536, 1536], [1537, 1537], [1539, 1539], [1545, 1545], [1546, 1546], [1547, 1547]], "source_code_file": "src/ptx.c", "binary_file1": "ptx.json", "binary_file2": "ptx.json"}
{"fname": "output_one_roff_line", "lineno_map": [[1562, 1562], [1563, 1563], [1564, 1564], [1565, 1565], [1566, 1566], [1570, 1570], [1571, 1571], [1572, 1572], [1573, 1573], [1574, 1574], [1578, 1578], [1579, 1579], [1580, 1580], [1581, 1581], [1582, 1582], [1586, 1586], [1587, 1587], [1588, 1588], [1589, 1589], [1590, 1590], [1594, 1594], [1596, 1596], [1597, 1597], [1598, 1598], [1601, 1601]], "source_code_file": "src/ptx.c", "binary_file1": "ptx.json", "binary_file2": "ptx.json"}
{"fname": "output_one_tex_line", "lineno_map": [[1615, 1615], [1616, 1616], [1617, 1617], [1618, 1618], [1619, 1619], [1620, 1620], [1621, 1621], [1622, 1622], [1623, 1623], [1624, 1624], [1625, 1625], [1626, 1626], [1627, 1627], [1628, 1628], [1629, 1629], [1630, 1630], [1631, 1631], [1632, 1632], [1633, 1633], [1635, 1635], [1636, 1636], [1637, 1637], [1639, 1639]], "source_code_file": "src/ptx.c", "binary_file1": "ptx.json", "binary_file2": "ptx.json"}
{"fname": "output_one_dumb_line", "lineno_map": [[1649, 1649], [1651, 1651], [1658, 1658], [1659, 1659], [1660, 1660], [1661, 1661], [1662, 1662], [1670, 1670], [1671, 1671], [1672, 1672], [1673, 1673], [1677, 1677], [1681, 1681], [1682, 1682], [1683, 1683], [1685, 1685], [1686, 1686], [1687, 1687], [1688, 1688], [1689, 1689], [1692, 1692], [1693, 1693], [1694, 1694], [1698, 1698], [1699, 1699], [1700, 1700], [1702, 1702], [1706, 1706], [1707, 1707], [1708, 1708], [1710, 1710], [1714, 1714], [1715, 1715], [1716, 1716], [1717, 1717], [1718, 1718], [1719, 1719], [1720, 1720], [1721, 1721], [1725, 1725], [1726, 1726], [1727, 1727], [1728, 1728], [1730, 1730], [1734, 1734], [1735, 1735], [1738, 1738]], "source_code_file": "src/ptx.c", "binary_file1": "ptx.json", "binary_file2": "ptx.json"}
{"fname": "generate_all_output", "lineno_map": [[1756, 1756], [1757, 1757], [1758, 1758], [1760, 1760], [1761, 1761], [1762, 1762], [1766, 1766], [1768, 1768], [1773, 1773], [1777, 1777], [1783, 1783], [1787, 1787], [1791, 1791], [1797, 1797]], "source_code_file": "src/ptx.c", "binary_file1": "ptx.json", "binary_file2": "ptx.json"}
{"fname": "usage", "lineno_map": [[1810, 1810], [1811, 1811], [1814, 1814], [1818, 1818], [1822, 1822], [1823, 1823], [1825, 1825], [1829, 1829], [1833, 1833], [1840, 1840], [1848, 1848], [1853, 1853], [1854, 1854], [1855, 1855], [1857, 1857]], "source_code_file": "src/ptx.c", "binary_file1": "ptx.json", "binary_file2": "ptx.json"}
{"fname": "main", "lineno_map": [[1908, 1908], [1909, 1909], [1910, 1910], [1911, 1911], [1913, 1913], [1919, 1919], [1923, 1923], [1926, 1926], [1929, 1929], [1933, 1933], [1937, 1937], [1943, 1943], [1944, 1944], [1945, 1945], [1947, 1947], [1952, 1952], [1956, 1956], [1960, 1960], [1970, 1970], [1971, 1971], [1972, 1972], [1974, 1974], [1979, 1979], [1983, 1983], [1987, 1987], [1991, 1991], [1995, 1995], [1999, 1999], [2003, 2003], [2007, 2007], [2008, 2008], [2009, 2009], [2013, 2013], [2017, 2017], [2019, 2019], [2027, 2027], [2032, 2032], [2033, 2033], [2034, 2034], [2035, 2035], [2036, 2036], [2038, 2038], [2040, 2040], [2041, 2041], [2042, 2042], [2043, 2043], [2045, 2045], [2047, 2047], [2048, 2048], [2050, 2050], [2051, 2051], [2059, 2059], [2060, 2060], [2061, 2061], [2062, 2062], [2063, 2063], [2064, 2064], [2066, 2066], [2067, 2067], [2071, 2071], [2073, 2073], [2074, 2074], [2075, 2075], [2080, 2080], [2082, 2082], [2083, 2083], [2090, 2090], [2091, 2091], [2095, 2095], [2099, 2099], [2100, 2100], [2106, 2106], [2108, 2108], [2109, 2109], [2110, 2110], [2113, 2113], [2115, 2115], [2116, 2116], [2117, 2117], [2122, 2122], [2123, 2123], [2124, 2124], [2125, 2125], [2127, 2127], [2129, 2129], [2133, 2133], [2134, 2134], [2140, 2140], [2141, 2141], [2146, 2146], [2147, 2147], [2148, 2148]], "source_code_file": "src/ptx.c", "binary_file1": "ptx.json", "binary_file2": "ptx.json"}
{"fname": "initialize_exit_failure", "lineno_map": [[100, 100], [101, 101], [102, 102], [103, 103]], "source_code_file": "src/nohup.c", "binary_file1": "nohup.json", "binary_file2": "nohup.json"}
{"fname": "usage", "lineno_map": [[52, 52], [53, 53], [56, 56], [62, 62], [66, 66], [67, 67], [68, 68], [75, 75], [76, 76], [78, 78]], "source_code_file": "src/nohup.c", "binary_file1": "nohup.json", "binary_file2": "nohup.json"}
{"fname": "main", "lineno_map": [[84, 84], [85, 85], [93, 93], [94, 94], [95, 95], [96, 96], [102, 102], [103, 103], [104, 104], [105, 105], [107, 107], [109, 109], [110, 110], [112, 112], [114, 114], [115, 115], [118, 118], [119, 119], [120, 120], [121, 121], [126, 126], [128, 128], [129, 129], [130, 130], [131, 131], [132, 132], [139, 139], [141, 141], [142, 142], [143, 143], [144, 144], [145, 145], [146, 146], [148, 148], [150, 150], [152, 152], [153, 153], [154, 154], [156, 156], [157, 157], [159, 159], [161, 161], [163, 163], [164, 164], [165, 165], [166, 166], [170, 170], [173, 173], [174, 174], [175, 175], [179, 179], [183, 183], [189, 189], [192, 192], [193, 193], [194, 194], [198, 198], [199, 199], [200, 200], [202, 202], [203, 203], [212, 212], [215, 215], [217, 217], [218, 218], [219, 219], [220, 220], [228, 228], [229, 229]], "source_code_file": "src/nohup.c", "binary_file1": "nohup.json", "binary_file2": "nohup.json"}
{"fname": "emit_mandatory_arg_note", "lineno_map": [[590, 590]], "source_code_file": "src/cp.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "emit_backup_suffix_note", "lineno_map": [[613, 613], [621, 621]], "source_code_file": "src/cp.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "emit_ancillary_info", "lineno_map": [[631, 631], [632, 632], [642, 642], [643, 643], [645, 645], [646, 646], [648, 648], [651, 651], [656, 656], [662, 662], [665, 665], [667, 667], [669, 669]], "source_code_file": "src/cp.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "usage", "lineno_map": [[144, 144], [145, 145], [148, 148], [154, 154], [158, 158], [160, 160], [169, 169], [178, 178], [182, 182], [187, 187], [195, 195], [199, 199], [205, 205], [210, 210], [216, 216], [223, 223], [229, 229], [230, 230], [231, 231], [239, 239], [246, 246], [247, 247], [253, 253], [255, 255]], "source_code_file": "src/cp.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "re_protect", "lineno_map": [[286, 286], [287, 287], [289, 289], [291, 291], [297, 297], [301, 301], [302, 302], [304, 304], [306, 306], [312, 312], [314, 314], [316, 316], [318, 318], [324, 324], [328, 328], [330, 330], [333, 333], [335, 335], [337, 337], [343, 343]], "source_code_file": "src/cp.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "make_dir_parents_private", "lineno_map": [[379, 379], [381, 381], [383, 383], [384, 384], [385, 385], [386, 386], [388, 388], [392, 392], [398, 398], [399, 399], [400, 400], [401, 401], [406, 406], [407, 407], [409, 409], [410, 410], [415, 415], [416, 416], [417, 417], [419, 419], [420, 420], [422, 422], [427, 427], [428, 428], [429, 429], [430, 430], [431, 431], [432, 432], [436, 436], [441, 441], [452, 452], [453, 453], [458, 458], [459, 459], [460, 460], [461, 461], [469, 469], [470, 470], [471, 471], [473, 473], [479, 479], [480, 480], [487, 487], [489, 489], [495, 495], [497, 497], [498, 498], [499, 499], [500, 500], [502, 502], [503, 503], [507, 507], [512, 512], [514, 514], [520, 520], [522, 522], [527, 527], [531, 531], [532, 532], [534, 534], [536, 536], [540, 540], [544, 544], [545, 545], [551, 551], [553, 553], [558, 558]], "source_code_file": "src/cp.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "target_directory_operand", "lineno_map": [[576, 576], [577, 577], [578, 578], [580, 580], [581, 581], [582, 582], [583, 583], [585, 585]], "source_code_file": "src/cp.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "do_copy", "lineno_map": [[598, 598], [599, 599], [600, 600], [601, 601], [603, 603], [605, 605], [606, 606], [608, 608], [610, 610], [613, 613], [615, 615], [616, 616], [619, 619], [621, 621], [622, 622], [625, 625], [628, 628], [630, 630], [631, 631], [633, 633], [634, 634], [635, 635], [639, 639], [648, 648], [650, 650], [651, 651], [654, 654], [657, 657], [659, 659], [660, 660], [664, 664], [665, 665], [667, 667], [676, 676], [677, 677], [680, 680], [687, 687], [688, 688], [689, 689], [690, 690], [697, 697], [698, 698], [700, 700], [702, 702], [706, 706], [710, 710], [715, 715], [717, 717], [718, 718], [722, 722], [724, 724], [726, 726], [727, 727], [728, 728], [732, 732], [738, 738], [739, 739], [742, 742], [744, 744], [745, 745], [746, 746], [755, 755], [756, 756], [757, 757], [758, 758], [762, 762], [768, 768], [769, 769], [770, 770], [774, 774], [777, 777]], "source_code_file": "src/cp.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "cp_option_init", "lineno_map": [[786, 786], [787, 787], [788, 788], [789, 789], [790, 790], [791, 791], [792, 792], [793, 793], [794, 794], [795, 795], [796, 796], [798, 798], [799, 799], [800, 800], [801, 801], [802, 802], [803, 803], [804, 804], [805, 805], [806, 806], [807, 807], [808, 808], [810, 810], [811, 811], [812, 812], [813, 813], [814, 814], [815, 815], [816, 816], [819, 819], [821, 821], [822, 822], [828, 828], [830, 830], [831, 831]], "source_code_file": "src/cp.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "decode_preserve_arg", "lineno_map": [[863, 863], [864, 864], [868, 868], [872, 872], [873, 873], [876, 876], [878, 878], [881, 881], [882, 882], [886, 886], [890, 890], [894, 894], [898, 898], [899, 899], [903, 903], [904, 904], [908, 908], [909, 909], [910, 910], [911, 911], [912, 912], [913, 913], [914, 914], [915, 915], [919, 919], [921, 921], [923, 923], [925, 925]], "source_code_file": "src/cp.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "main", "lineno_map": [[933, 933], [934, 934], [935, 935], [937, 937], [938, 938], [939, 939], [940, 940], [943, 943], [944, 944], [945, 945], [946, 946], [948, 948], [950, 950], [951, 951], [953, 953], [957, 957], [960, 960], [965, 965], [966, 966], [968, 968], [974, 974], [975, 975], [976, 976], [977, 977], [978, 978], [979, 979], [980, 980], [981, 981], [982, 982], [983, 983], [984, 984], [988, 988], [989, 989], [990, 990], [994, 994], [998, 998], [1002, 1002], [1003, 1003], [1007, 1007], [1011, 1011], [1015, 1015], [1019, 1019], [1023, 1023], [1027, 1027], [1031, 1031], [1035, 1035], [1039, 1039], [1045, 1045], [1046, 1046], [1052, 1052], [1053, 1053], [1054, 1054], [1055, 1055], [1059, 1059], [1064, 1064], [1068, 1068], [1072, 1072], [1076, 1076], [1080, 1080], [1081, 1081], [1086, 1086], [1087, 1087], [1089, 1089], [1090, 1090], [1093, 1093], [1097, 1097], [1101, 1101], [1105, 1105], [1109, 1109], [1114, 1114], [1116, 1116], [1117, 1117], [1119, 1119], [1121, 1121], [1123, 1123], [1124, 1124], [1130, 1130], [1131, 1131], [1134, 1134], [1136, 1136], [1139, 1139], [1143, 1143], [1145, 1145], [1146, 1146], [1149, 1149], [1150, 1150], [1152, 1152], [1154, 1154], [1155, 1155], [1156, 1156], [1159, 1159], [1161, 1161], [1162, 1162], [1165, 1165], [1166, 1166], [1169, 1169], [1171, 1171], [1173, 1173], [1175, 1175], [1177, 1177], [1180, 1180], [1181, 1181], [1184, 1184], [1185, 1185], [1186, 1186], [1188, 1188], [1189, 1189], [1192, 1192], [1193, 1193], [1203, 1203], [1204, 1204], [1209, 1209], [1210, 1210], [1216, 1216], [1218, 1218]], "source_code_file": "src/cp.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "defaultcon", "lineno_map": [[45, 45]], "source_code_file": "src/mknod.c", "binary_file1": "mknod.json", "binary_file2": "mknod.json"}
{"fname": "smack_set_label_for_self", "lineno_map": [[33, 33], [34, 34], [35, 35]], "source_code_file": "src/mknod.c", "binary_file1": "mknod.json", "binary_file2": "mknod.json"}
{"fname": "is_smack_enabled", "lineno_map": [[44, 44], [46, 46]], "source_code_file": "src/mknod.c", "binary_file1": "mknod.json", "binary_file2": "mknod.json"}
{"fname": "usage", "lineno_map": [[51, 51], [52, 52], [55, 55], [57, 57], [61, 61], [63, 63], [66, 66], [71, 71], [72, 72], [73, 73], [80, 80], [86, 86], [87, 87], [89, 89]], "source_code_file": "src/mknod.c", "binary_file1": "mknod.json", "binary_file2": "mknod.json"}
{"fname": "main", "lineno_map": [[96, 96], [100, 100], [101, 101], [104, 104], [105, 105], [106, 106], [107, 107], [109, 109], [111, 111], [113, 113], [116, 116], [119, 119], [122, 122], [131, 131], [133, 133], [134, 134], [138, 138], [139, 139], [141, 141], [145, 145], [146, 146], [149, 149], [150, 150], [151, 151], [152, 152], [153, 153], [154, 154], [155, 155], [156, 156], [157, 157], [164, 164], [165, 165], [168, 168], [170, 170], [171, 171], [173, 173], [174, 174], [175, 175], [177, 177], [180, 180], [182, 182], [183, 183], [184, 184], [185, 185], [187, 187], [190, 190], [192, 192], [193, 193], [194, 194], [196, 196], [198, 198], [199, 199], [207, 207], [213, 213], [222, 222], [228, 228], [229, 229], [233, 233], [234, 234], [235, 235], [238, 238], [239, 239], [240, 240], [243, 243], [245, 245], [246, 246], [250, 250], [251, 251], [253, 253], [254, 254], [259, 259], [260, 260], [261, 261], [262, 262], [266, 266], [267, 267], [270, 270], [271, 271]], "source_code_file": "src/mknod.c", "binary_file1": "mknod.json", "binary_file2": "mknod.json"}
{"fname": "dot_or_dotdot", "lineno_map": [[266, 266], [267, 267], [269, 269], [270, 270], [273, 273], [274, 274]], "source_code_file": "src/remove.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "readdir_ignoring_dot_and_dotdot", "lineno_map": [[283, 283], [284, 284], [286, 286]], "source_code_file": "src/remove.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "is_empty_dir", "lineno_map": [[291, 291], [295, 295], [302, 302], [303, 303], [305, 305], [306, 306], [309, 309], [310, 310], [311, 311], [312, 312], [313, 313], [314, 314], [315, 315], [316, 316]], "source_code_file": "src/remove.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "cache_fstatat", "lineno_map": [[72, 72], [74, 74], [75, 75], [77, 77], [79, 79]], "source_code_file": "src/remove.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "cache_stat_init", "lineno_map": [[87, 87]], "source_code_file": "src/remove.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "write_protected_non_symlink", "lineno_map": [[100, 100], [102, 102], [104, 104], [155, 155]], "source_code_file": "src/remove.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "prompt", "lineno_map": [[180, 180], [181, 181], [182, 182], [183, 183], [184, 184], [187, 187], [188, 188], [190, 190], [191, 191], [193, 193], [194, 194], [196, 196], [197, 197], [203, 203], [206, 206], [209, 209], [210, 210], [211, 211], [212, 212], [214, 214], [215, 215], [218, 218], [220, 220], [222, 222], [224, 224], [225, 225], [226, 226], [227, 227], [233, 233], [234, 234], [238, 238], [239, 239], [243, 243], [251, 251], [253, 253], [254, 254], [259, 259], [261, 261], [263, 263], [268, 268], [269, 269], [270, 270], [271, 271], [278, 278], [280, 280], [284, 284], [296, 296]], "source_code_file": "src/remove.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "nonexistent_file_errno", "lineno_map": [[320, 320]], "source_code_file": "src/remove.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "fts_skip_tree", "lineno_map": [[343, 343], [345, 345]], "source_code_file": "src/remove.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "mark_ancestor_dirs", "lineno_map": [[355, 355], [357, 357], [359, 359]], "source_code_file": "src/remove.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "excise", "lineno_map": [[369, 369], [370, 370], [372, 372], [374, 374], [376, 376], [385, 385], [388, 388], [389, 389], [390, 390], [393, 393], [401, 401], [402, 402], [403, 403], [404, 404], [405, 405], [406, 406], [407, 407]], "source_code_file": "src/remove.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "rm_fts", "lineno_map": [[420, 420], [423, 423], [424, 424], [425, 425], [431, 431], [432, 432], [433, 433], [434, 434], [439, 439], [444, 444], [446, 446], [447, 447], [449, 449], [450, 450], [457, 457], [459, 459], [460, 460], [467, 467], [469, 469], [470, 470], [473, 473], [475, 475], [476, 476], [478, 478], [479, 479], [482, 482], [484, 484], [486, 486], [488, 488], [489, 489], [490, 490], [491, 491], [493, 493], [501, 501], [504, 504], [508, 508], [509, 509], [512, 512], [514, 514], [515, 515], [533, 533], [534, 534], [535, 535], [536, 536], [538, 538], [539, 539], [540, 540], [544, 544], [545, 545], [546, 546], [552, 552], [553, 553], [559, 559], [560, 560], [561, 561], [565, 565], [567, 567], [568, 568], [570, 570]], "source_code_file": "src/remove.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "rm", "lineno_map": [[579, 579], [581, 581], [583, 583], [587, 587], [588, 588], [590, 590], [596, 596], [597, 597], [599, 599], [601, 601], [602, 602], [607, 607], [609, 609], [610, 610], [613, 613], [615, 615], [616, 616]], "source_code_file": "src/remove.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "emit_mandatory_arg_note", "lineno_map": [[586, 586], [587, 587], [590, 590]], "source_code_file": "src/ln.c", "binary_file1": "ln.json", "binary_file2": "ln.json"}
{"fname": "target_directory_operand", "lineno_map": [[125, 125], [126, 126], [127, 127], [129, 129], [130, 130], [131, 131], [132, 132], [133, 133], [134, 134], [135, 135], [136, 136]], "source_code_file": "src/ln.c", "binary_file1": "ln.json", "binary_file2": "ln.json"}
{"fname": "convert_abs_rel", "lineno_map": [[149, 149], [151, 151], [152, 152], [154, 154], [155, 155], [158, 158], [160, 160], [162, 162], [163, 163], [167, 167], [168, 168], [169, 169]], "source_code_file": "src/ln.c", "binary_file1": "ln.json", "binary_file2": "ln.json"}
{"fname": "do_link", "lineno_map": [[183, 183], [184, 184], [185, 185], [186, 186], [188, 188], [194, 194], [195, 195], [196, 196], [198, 198], [202, 202], [204, 204], [205, 205], [207, 207], [214, 214], [216, 216], [217, 217], [219, 219], [226, 226], [227, 227], [228, 228], [230, 230], [231, 231], [241, 241], [247, 247], [248, 248], [254, 254], [255, 255], [256, 256], [261, 261], [263, 263], [268, 268], [270, 270], [272, 272], [275, 275], [277, 277], [278, 278], [280, 280], [283, 283], [285, 285], [286, 286], [288, 288], [289, 289], [290, 290], [291, 291], [293, 293], [301, 301], [302, 302], [322, 322], [323, 323], [324, 324], [325, 325], [329, 329], [333, 333], [334, 334], [336, 336], [338, 338], [339, 339], [340, 340], [346, 346], [348, 348], [351, 351], [353, 353], [354, 354], [359, 359], [361, 361], [362, 362], [366, 366], [367, 367]], "source_code_file": "src/ln.c", "binary_file1": "ln.json", "binary_file2": "ln.json"}
{"fname": "usage", "lineno_map": [[374, 374], [375, 375], [378, 378], [385, 385], [396, 396], [398, 398], [406, 406], [415, 415], [422, 422], [423, 423], [424, 424], [425, 425], [430, 430], [432, 432]], "source_code_file": "src/ln.c", "binary_file1": "ln.json", "binary_file2": "ln.json"}
{"fname": "main", "lineno_map": [[440, 440], [441, 441], [442, 442], [443, 443], [444, 444], [449, 449], [450, 450], [451, 451], [452, 452], [454, 454], [456, 456], [457, 457], [459, 459], [462, 462], [465, 465], [466, 466], [467, 467], [471, 471], [474, 474], [475, 475], [478, 478], [479, 479], [482, 482], [485, 485], [488, 488], [491, 491], [494, 494], [497, 497], [498, 498], [502, 502], [503, 503], [505, 505], [506, 506], [509, 509], [512, 512], [515, 515], [518, 518], [519, 519], [521, 521], [522, 522], [524, 524], [529, 529], [530, 530], [532, 532], [534, 534], [535, 535], [538, 538], [540, 540], [541, 541], [544, 544], [546, 546], [547, 547], [548, 548], [551, 551], [552, 552], [555, 555], [557, 557], [558, 558], [559, 559], [560, 560], [561, 561], [562, 562], [566, 566], [567, 567], [569, 569], [571, 571], [573, 573], [578, 578], [583, 583], [584, 584], [587, 587], [590, 590], [593, 593], [598, 598], [599, 599], [602, 602], [603, 603], [606, 606], [607, 607], [609, 609], [610, 610], [611, 611], [615, 615]], "source_code_file": "src/ln.c", "binary_file1": "ln.json", "binary_file2": "ln.json"}
{"fname": "emit_stdin_note", "lineno_map": [[580, 580], [583, 583]], "source_code_file": "src/shuf.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "emit_mandatory_arg_note", "lineno_map": [[586, 586], [590, 590]], "source_code_file": "src/shuf.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "randint_choose", "lineno_map": [[45, 45], [46, 46], [47, 47]], "source_code_file": "src/shuf.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "usage", "lineno_map": [[58, 58], [59, 59], [62, 62], [68, 68], [72, 72], [73, 73], [75, 75], [83, 83], [86, 86], [87, 87], [88, 88], [91, 91]], "source_code_file": "src/shuf.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "input_from_argv", "lineno_map": [[119, 119], [122, 122], [123, 123], [124, 124], [126, 126], [128, 128], [129, 129], [130, 130], [131, 131], [134, 134]], "source_code_file": "src/shuf.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "next_line", "lineno_map": [[143, 143]], "source_code_file": "src/shuf.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "input_size", "lineno_map": [[155, 155], [157, 157], [158, 158], [162, 162], [163, 163], [166, 166]], "source_code_file": "src/shuf.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "read_input_reservoir_sampling", "lineno_map": [[179, 179], [180, 180], [181, 181], [184, 184], [187, 187], [188, 188], [189, 189], [191, 191], [194, 194], [196, 196], [197, 197], [198, 198], [204, 204], [207, 207], [220, 220], [221, 221], [223, 223], [225, 225], [226, 226], [228, 228], [232, 232], [233, 233], [235, 235]], "source_code_file": "src/shuf.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "write_permuted_output_reservoir", "lineno_map": [[243, 243], [245, 245], [246, 246]], "source_code_file": "src/shuf.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "read_input", "lineno_map": [[263, 263], [278, 278], [279, 279], [281, 281], [282, 282], [284, 284], [286, 286], [287, 287], [288, 288], [290, 290], [292, 292], [293, 293], [294, 294]], "source_code_file": "src/shuf.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "write_permuted_lines", "lineno_map": [[307, 307], [309, 309], [310, 310], [311, 311]], "source_code_file": "src/shuf.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "write_permuted_numbers", "lineno_map": [[324, 324], [326, 326], [327, 327]], "source_code_file": "src/shuf.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "write_random_numbers", "lineno_map": [[340, 340], [342, 342], [344, 344], [345, 345]], "source_code_file": "src/shuf.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "write_random_lines", "lineno_map": [[359, 359], [361, 361], [362, 362], [363, 363], [364, 364]], "source_code_file": "src/shuf.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "main", "lineno_map": [[374, 374], [375, 375], [376, 376], [377, 377], [378, 378], [379, 379], [380, 380], [381, 381], [382, 382], [383, 383], [384, 384], [390, 390], [391, 391], [393, 393], [397, 397], [398, 398], [399, 399], [400, 400], [402, 402], [404, 404], [405, 405], [408, 408], [413, 413], [414, 414], [415, 415], [417, 417], [418, 418], [419, 419], [421, 421], [423, 423], [424, 424], [425, 425], [426, 426], [427, 427], [430, 430], [431, 431], [433, 433], [434, 434], [435, 435], [436, 436], [444, 444], [446, 446], [447, 447], [448, 448], [449, 449], [455, 455], [456, 456], [457, 457], [461, 461], [462, 462], [463, 463], [467, 467], [471, 471], [474, 474], [475, 475], [477, 477], [480, 480], [481, 481], [484, 484], [486, 486], [487, 487], [489, 489], [491, 491], [492, 492], [496, 496], [498, 498], [499, 499], [500, 500], [502, 502], [504, 504], [505, 505], [510, 510], [511, 511], [512, 512], [513, 513], [515, 515], [517, 517], [518, 518], [520, 520], [521, 521], [525, 525], [526, 526], [530, 530], [531, 531], [533, 533], [534, 534], [537, 537], [538, 538], [540, 540], [544, 544], [546, 546], [552, 552], [553, 553], [554, 554], [556, 556], [557, 557], [559, 559], [560, 560], [563, 563], [565, 565], [566, 566], [569, 569], [570, 570], [571, 571], [572, 572], [575, 575], [580, 580], [581, 581], [582, 582], [583, 583], [586, 586], [589, 589], [590, 590]], "source_code_file": "src/shuf.c", "binary_file1": "shuf.json", "binary_file2": "shuf.json"}
{"fname": "usage", "lineno_map": [[58, 58], [59, 59], [62, 62], [63, 63], [65, 65], [75, 75], [86, 86], [87, 87], [88, 88], [90, 90]], "source_code_file": "src/readlink.c", "binary_file1": "readlink.json", "binary_file2": "readlink.json"}
{"fname": "main", "lineno_map": [[97, 97], [98, 98], [100, 100], [103, 103], [104, 104], [105, 105], [106, 106], [108, 108], [110, 110], [112, 112], [115, 115], [118, 118], [121, 121], [124, 124], [128, 128], [131, 131], [134, 134], [136, 136], [137, 137], [139, 139], [143, 143], [145, 145], [146, 146], [149, 149], [151, 151], [152, 152], [153, 153], [156, 156], [158, 158], [159, 159], [160, 160], [161, 161], [162, 162], [164, 164], [165, 165], [166, 166], [167, 167], [171, 171], [172, 172], [173, 173]], "source_code_file": "src/readlink.c", "binary_file1": "readlink.json", "binary_file2": "readlink.json"}
{"fname": "usage", "lineno_map": [[46, 46], [47, 47], [50, 50], [61, 61], [62, 62], [63, 63], [65, 65]], "source_code_file": "src/sleep.c", "binary_file1": "sleep.json", "binary_file2": "sleep.json"}
{"fname": "apply_suffix", "lineno_map": [[79, 79], [83, 83], [86, 86], [89, 89], [92, 92], [98, 98]], "source_code_file": "src/sleep.c", "binary_file1": "sleep.json", "binary_file2": "sleep.json"}
{"fname": "main", "lineno_map": [[106, 106], [107, 107], [110, 110], [111, 111], [112, 112], [113, 113], [115, 115], [117, 117], [119, 119], [120, 120], [122, 122], [124, 124], [125, 125], [128, 128], [132, 132], [134, 134], [136, 136], [138, 138], [140, 140], [141, 141], [144, 144], [147, 147], [148, 148], [150, 150], [151, 151]], "source_code_file": "src/sleep.c", "binary_file1": "sleep.json", "binary_file2": "sleep.json"}
{"fname": "usage", "lineno_map": [[50, 50], [51, 51], [54, 54], [55, 55], [60, 60], [61, 61], [62, 62], [64, 64]], "source_code_file": "src/groups.c", "binary_file1": "groups.json", "binary_file2": "groups.json"}
{"fname": "main", "lineno_map": [[71, 71], [76, 76], [77, 77], [78, 78], [79, 79], [81, 81], [86, 86], [88, 88], [90, 90], [91, 91], [93, 93], [97, 97], [100, 100], [101, 101], [103, 103], [104, 104], [105, 105], [106, 106], [108, 108], [109, 109], [110, 110], [111, 111], [113, 113], [114, 114], [115, 115], [116, 116], [118, 118], [119, 119], [120, 120], [125, 125], [127, 127], [128, 128], [130, 130], [131, 131], [132, 132], [134, 134], [135, 135], [137, 137], [138, 138], [139, 139], [140, 140]], "source_code_file": "src/groups.c", "binary_file1": "groups.json", "binary_file2": "groups.json"}
{"fname": "emit_ancillary_info", "lineno_map": [[631, 631], [632, 632], [642, 642], [645, 645], [646, 646], [648, 648], [649, 649], [651, 651], [655, 655], [656, 656], [662, 662], [665, 665], [667, 667], [669, 669]], "source_code_file": "src/who.c", "binary_file1": "who.json", "binary_file2": "who.json"}
{"fname": "timetostr", "lineno_map": [[687, 687], [688, 688], [691, 691]], "source_code_file": "src/who.c", "binary_file1": "who.json", "binary_file2": "who.json"}
{"fname": "stzncpy", "lineno_map": [[738, 738], [739, 739], [741, 741], [742, 742], [743, 743]], "source_code_file": "src/who.c", "binary_file1": "who.json", "binary_file2": "who.json"}
{"fname": "idle_string", "lineno_map": [[192, 192], [193, 193], [195, 195], [197, 197], [198, 198], [205, 205], [206, 206], [208, 208]], "source_code_file": "src/who.c", "binary_file1": "who.json", "binary_file2": "who.json"}
{"fname": "time_string", "lineno_map": [[228, 228], [229, 229], [231, 231], [233, 233]], "source_code_file": "src/who.c", "binary_file1": "who.json", "binary_file2": "who.json"}
{"fname": "print_line", "lineno_map": [[256, 256], [258, 258], [259, 259], [261, 261], [263, 263], [264, 264], [266, 266], [268, 268], [269, 269], [270, 270], [272, 272], [274, 274], [298, 298], [299, 299], [303, 303], [304, 304], [306, 306], [309, 309], [310, 310], [311, 311]], "source_code_file": "src/who.c", "binary_file1": "who.json", "binary_file2": "who.json"}
{"fname": "print_user", "lineno_map": [[348, 348], [349, 349], [354, 354], [355, 355], [356, 356], [358, 358], [360, 360], [361, 361], [365, 365], [366, 366], [369, 369], [370, 370], [372, 372], [375, 375], [378, 378], [379, 379], [382, 382], [385, 385], [386, 386], [387, 387], [389, 389], [392, 392], [395, 395], [396, 396], [398, 398], [400, 400], [402, 402], [403, 403], [404, 404], [406, 406], [410, 410], [412, 412], [413, 413], [414, 414], [416, 416], [419, 419], [420, 420], [424, 424], [426, 426], [427, 427], [428, 428], [430, 430], [434, 434], [435, 435], [437, 437]], "source_code_file": "src/who.c", "binary_file1": "who.json", "binary_file2": "who.json"}
{"fname": "print_boottime", "lineno_map": [[443, 443]], "source_code_file": "src/who.c", "binary_file1": "who.json", "binary_file2": "who.json"}
{"fname": "make_id_equals_comment", "lineno_map": [[450, 450], [451, 451], [453, 453], [454, 454]], "source_code_file": "src/who.c", "binary_file1": "who.json", "binary_file2": "who.json"}
{"fname": "print_deadprocs", "lineno_map": [[462, 462], [463, 463], [465, 465], [466, 466], [468, 468], [471, 471], [472, 472], [476, 476], [478, 478]], "source_code_file": "src/who.c", "binary_file1": "who.json", "binary_file2": "who.json"}
{"fname": "print_login", "lineno_map": [[484, 484], [485, 485], [489, 489], [491, 491]], "source_code_file": "src/who.c", "binary_file1": "who.json", "binary_file2": "who.json"}
{"fname": "print_initspawn", "lineno_map": [[497, 497], [498, 498], [500, 500], [502, 502]], "source_code_file": "src/who.c", "binary_file1": "who.json", "binary_file2": "who.json"}
{"fname": "print_clockchange", "lineno_map": [[509, 509]], "source_code_file": "src/who.c", "binary_file1": "who.json", "binary_file2": "who.json"}
{"fname": "print_runlevel", "lineno_map": [[517, 517], [518, 518], [520, 520], [521, 521], [522, 522], [524, 524], [525, 525], [526, 526], [528, 528], [529, 529]], "source_code_file": "src/who.c", "binary_file1": "who.json", "binary_file2": "who.json"}
{"fname": "list_entries_who", "lineno_map": [[539, 539], [540, 540], [542, 542], [544, 544], [548, 548], [550, 550], [551, 551], [552, 552], [553, 553], [555, 555], [557, 557]], "source_code_file": "src/who.c", "binary_file1": "who.json", "binary_file2": "who.json"}
{"fname": "print_heading", "lineno_map": [[563, 563], [564, 564]], "source_code_file": "src/who.c", "binary_file1": "who.json", "binary_file2": "who.json"}
{"fname": "scan_entries", "lineno_map": [[572, 572], [574, 574], [575, 575], [577, 577], [579, 579], [580, 580], [582, 582], [583, 583], [586, 586], [588, 588], [589, 589], [592, 592], [593, 593], [594, 594], [595, 595], [596, 596], [597, 597], [601, 601], [602, 602], [603, 603], [604, 604], [605, 605], [606, 606], [607, 607], [608, 608], [611, 611], [612, 612], [614, 614]], "source_code_file": "src/who.c", "binary_file1": "who.json", "binary_file2": "who.json"}
{"fname": "who", "lineno_map": [[626, 626], [627, 627], [629, 629], [630, 630], [632, 632], [634, 634]], "source_code_file": "src/who.c", "binary_file1": "who.json", "binary_file2": "who.json"}
{"fname": "usage", "lineno_map": [[640, 640], [641, 641], [644, 644], [645, 645], [648, 648], [655, 655], [658, 658], [663, 663], [669, 669], [675, 675], [676, 676], [677, 677], [682, 682], [684, 684]], "source_code_file": "src/who.c", "binary_file1": "who.json", "binary_file2": "who.json"}
{"fname": "main", "lineno_map": [[691, 691], [694, 694], [695, 695], [696, 696], [697, 697], [699, 699], [701, 701], [704, 704], [707, 707], [708, 708], [709, 709], [710, 710], [711, 711], [712, 712], [713, 713], [714, 714], [715, 715], [716, 716], [717, 717], [721, 721], [722, 722], [726, 726], [727, 727], [728, 728], [729, 729], [733, 733], [737, 737], [738, 738], [739, 739], [743, 743], [747, 747], [748, 748], [752, 752], [756, 756], [757, 757], [758, 758], [762, 762], [766, 766], [767, 767], [772, 772], [776, 776], [777, 777], [778, 778], [782, 782], [785, 785], [787, 787], [790, 790], [794, 794], [796, 796], [797, 797], [800, 800], [802, 802], [805, 805], [807, 807], [808, 808], [812, 812], [813, 813], [816, 816], [819, 819], [823, 823], [827, 827], [831, 831], [832, 832]], "source_code_file": "src/who.c", "binary_file1": "who.json", "binary_file2": "who.json"}
{"fname": "emit_mandatory_arg_note", "lineno_map": [[586, 586], [587, 587], [590, 590]], "source_code_file": "src/install.c", "binary_file1": "install.json", "binary_file2": "install.json"}
{"fname": "emit_backup_suffix_note", "lineno_map": [[613, 613], [614, 614], [621, 621], [627, 627]], "source_code_file": "src/install.c", "binary_file1": "install.json", "binary_file2": "install.json"}
{"fname": "emit_ancillary_info", "lineno_map": [[631, 631], [632, 632], [642, 642], [643, 643], [645, 645], [646, 646], [648, 648], [649, 649], [651, 651], [655, 655], [656, 656], [662, 662], [665, 665], [667, 667], [669, 669]], "source_code_file": "src/install.c", "binary_file1": "install.json", "binary_file2": "install.json"}
{"fname": "se_const", "lineno_map": [[754, 754]], "source_code_file": "src/install.c", "binary_file1": "install.json", "binary_file2": "install.json"}
{"fname": "restorecon", "lineno_map": [[41, 41]], "source_code_file": "src/install.c", "binary_file1": "install.json", "binary_file2": "install.json"}
{"fname": "defaultcon", "lineno_map": [[45, 45]], "source_code_file": "src/install.c", "binary_file1": "install.json", "binary_file2": "install.json"}
{"fname": "have_same_content", "lineno_map": [[153, 153], [154, 154], [157, 157]], "source_code_file": "src/install.c", "binary_file1": "install.json", "binary_file2": "install.json"}
{"fname": "extra_mode", "lineno_map": [[168, 168]], "source_code_file": "src/install.c", "binary_file1": "install.json", "binary_file2": "install.json"}
{"fname": "need_copy", "lineno_map": [[181, 181], [185, 185], [188, 188], [191, 191], [192, 192], [195, 195], [196, 196], [199, 199], [201, 201], [202, 202], [203, 203], [206, 206], [209, 209], [211, 211], [212, 212], [213, 213], [216, 216], [220, 220], [222, 222], [223, 223], [226, 226], [229, 229], [231, 231], [235, 235], [237, 237], [238, 238], [239, 239], [244, 244], [245, 245], [248, 248], [249, 249], [251, 251], [255, 255], [257, 257], [258, 258]], "source_code_file": "src/install.c", "binary_file1": "install.json", "binary_file2": "install.json"}
{"fname": "cp_option_init", "lineno_map": [[265, 265], [266, 266], [267, 267], [268, 268], [269, 269], [270, 270], [271, 271], [272, 272], [273, 273], [274, 274], [275, 275], [276, 276], [277, 277], [278, 278], [279, 279], [280, 280], [281, 281], [282, 282], [283, 283], [284, 284], [285, 285], [286, 286], [287, 287], [288, 288], [293, 293], [294, 294], [295, 295], [297, 297], [298, 298], [299, 299], [300, 300], [301, 301], [302, 302], [303, 303], [304, 304], [305, 305]], "source_code_file": "src/install.c", "binary_file1": "install.json", "binary_file2": "install.json"}
{"fname": "setdefaultfilecon", "lineno_map": [[317, 317], [320, 320], [325, 325], [328, 328], [338, 338], [339, 339], [340, 340], [343, 343], [345, 345], [350, 350], [352, 352], [354, 354], [355, 355], [357, 357], [359, 359], [363, 363], [368, 368], [369, 369], [371, 371], [372, 372], [376, 376], [377, 377], [378, 378], [381, 381]], "source_code_file": "src/install.c", "binary_file1": "install.json", "binary_file2": "install.json"}
{"fname": "target_directory_operand", "lineno_map": [[400, 400], [401, 401], [402, 402], [404, 404], [405, 405], [406, 406], [407, 407], [408, 408], [409, 409]], "source_code_file": "src/install.c", "binary_file1": "install.json", "binary_file2": "install.json"}
{"fname": "announce_mkdir", "lineno_map": [[418, 418], [419, 419], [420, 420]], "source_code_file": "src/install.c", "binary_file1": "install.json", "binary_file2": "install.json"}
{"fname": "make_ancestor", "lineno_map": [[429, 429], [430, 430], [431, 431], [432, 432], [435, 435], [436, 436], [437, 437]], "source_code_file": "src/install.c", "binary_file1": "install.json", "binary_file2": "install.json"}
{"fname": "process_dir", "lineno_map": [[445, 445], [447, 447], [451, 451], [458, 458], [460, 460], [461, 461], [462, 462]], "source_code_file": "src/install.c", "binary_file1": "install.json", "binary_file2": "install.json"}
{"fname": "copy_file", "lineno_map": [[477, 477]], "source_code_file": "src/install.c", "binary_file1": "install.json", "binary_file2": "install.json"}
{"fname": "change_attributes", "lineno_map": [[495, 495], [508, 508], [509, 509], [510, 510], [511, 511], [512, 512], [514, 514], [516, 516], [517, 517]], "source_code_file": "src/install.c", "binary_file1": "install.json", "binary_file2": "install.json"}
{"fname": "change_timestamps", "lineno_map": [[529, 529], [530, 530], [532, 532], [534, 534]], "source_code_file": "src/install.c", "binary_file1": "install.json", "binary_file2": "install.json"}
{"fname": "strip", "lineno_map": [[550, 550], [551, 551], [553, 553], [556, 556], [559, 559], [560, 560], [562, 562], [563, 563], [564, 564], [565, 565], [567, 567]], "source_code_file": "src/install.c", "binary_file1": "install.json", "binary_file2": "install.json"}
{"fname": "get_ids", "lineno_map": [[581, 581], [583, 583], [584, 584], [587, 587], [589, 589], [591, 591], [594, 594], [595, 595], [598, 598], [600, 600], [602, 602], [603, 603], [606, 606], [608, 608], [610, 610], [613, 613], [614, 614], [617, 617]], "source_code_file": "src/install.c", "binary_file1": "install.json", "binary_file2": "install.json"}
{"fname": "usage", "lineno_map": [[623, 623], [624, 624], [627, 627], [634, 634], [646, 646], [648, 648], [657, 657], [665, 665], [675, 675], [683, 683], [684, 684], [685, 685], [686, 686], [688, 688]], "source_code_file": "src/install.c", "binary_file1": "install.json", "binary_file2": "install.json"}
{"fname": "install_file_in_file", "lineno_map": [[700, 700], [702, 702], [705, 705], [707, 707], [708, 708], [710, 710], [711, 711], [714, 714], [715, 715]], "source_code_file": "src/install.c", "binary_file1": "install.json", "binary_file2": "install.json"}
{"fname": "mkancesdirs_safe_wd", "lineno_map": [[728, 728], [730, 730], [731, 731], [734, 734], [735, 735], [736, 736], [738, 738], [740, 740], [741, 741], [744, 744], [746, 746], [747, 747], [748, 748], [749, 749], [751, 751], [753, 753]], "source_code_file": "src/install.c", "binary_file1": "install.json", "binary_file2": "install.json"}
{"fname": "install_file_in_file_parents", "lineno_map": [[769, 769]], "source_code_file": "src/install.c", "binary_file1": "install.json", "binary_file2": "install.json"}
{"fname": "install_file_in_dir", "lineno_map": [[780, 780], [781, 781], [782, 782], [784, 784], [785, 785], [787, 787], [788, 788]], "source_code_file": "src/install.c", "binary_file1": "install.json", "binary_file2": "install.json"}
{"fname": "main", "lineno_map": [[796, 796], [797, 797], [798, 798], [799, 799], [800, 800], [801, 801], [803, 803], [804, 804], [807, 807], [808, 808], [810, 810], [813, 813], [814, 814], [815, 815], [816, 816], [818, 818], [820, 820], [822, 822], [823, 823], [824, 824], [825, 825], [826, 826], [828, 828], [831, 831], [834, 834], [835, 835], [836, 836], [841, 841], [844, 844], [847, 847], [851, 851], [852, 852], [855, 855], [858, 858], [861, 861], [864, 864], [867, 867], [870, 870], [873, 873], [876, 876], [877, 877], [880, 880], [881, 881], [883, 883], [886, 886], [890, 890], [892, 892], [896, 896], [897, 897], [900, 900], [908, 908], [910, 910], [911, 911], [913, 913], [915, 915], [917, 917], [918, 918], [922, 922], [923, 923], [925, 925], [930, 930], [931, 931], [933, 933], [934, 934], [937, 937], [940, 940], [941, 941], [942, 942], [944, 944], [945, 945], [949, 949], [950, 950], [953, 953], [955, 955], [956, 956], [959, 959], [960, 960], [964, 964], [965, 965], [967, 967], [969, 969], [970, 970], [972, 972], [974, 974], [977, 977], [979, 979], [980, 980], [983, 983], [985, 985], [986, 986], [989, 989], [991, 991], [992, 992], [993, 993], [994, 994], [998, 998], [1000, 1000], [1001, 1001], [1002, 1002], [1003, 1003], [1004, 1004], [1005, 1005], [1008, 1008], [1009, 1009], [1012, 1012], [1014, 1014], [1016, 1016], [1019, 1019], [1021, 1021], [1023, 1023], [1026, 1026], [1027, 1027], [1030, 1030], [1032, 1032], [1033, 1033], [1038, 1038], [1040, 1040], [1042, 1042], [1043, 1043], [1044, 1044], [1045, 1045], [1050, 1050], [1051, 1051], [1052, 1052], [1053, 1053], [1054, 1054]], "source_code_file": "src/install.c", "binary_file1": "install.json", "binary_file2": "install.json"}
{"fname": "src_to_dest_hash", "lineno_map": [[53, 53]], "source_code_file": "src/cp-hash.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "src_to_dest_compare", "lineno_map": [[66, 66], [67, 67]], "source_code_file": "src/cp-hash.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "src_to_dest_free", "lineno_map": [[74, 74], [75, 75], [76, 76]], "source_code_file": "src/cp-hash.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "forget_created", "lineno_map": [[87, 87], [88, 88], [89, 89], [91, 91], [92, 92], [93, 93]], "source_code_file": "src/cp-hash.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "src_to_dest_lookup", "lineno_map": [[104, 104], [105, 105], [106, 106]], "source_code_file": "src/cp-hash.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "remember_copied", "lineno_map": [[120, 120], [121, 121], [122, 122], [123, 123], [125, 125], [126, 126], [129, 129], [135, 135], [137, 137]], "source_code_file": "src/cp-hash.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "hash_init", "lineno_map": [[149, 149], [153, 153], [154, 154]], "source_code_file": "src/cp-hash.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "forget_all", "lineno_map": [[163, 163]], "source_code_file": "src/cp-hash.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "usage", "lineno_map": [[46, 46], [47, 47], [50, 50], [54, 54], [59, 59], [62, 62], [63, 63], [64, 64], [72, 72], [74, 74]], "source_code_file": "src/dirname.c", "binary_file1": "dirname.json", "binary_file2": "dirname.json"}
{"fname": "main", "lineno_map": [[81, 81], [86, 86], [87, 87], [88, 88], [89, 89], [91, 91], [95, 95], [97, 97], [100, 100], [103, 103], [106, 106], [107, 107], [110, 110], [114, 114], [116, 116], [117, 117], [120, 120], [122, 122], [123, 123], [125, 125], [127, 127], [128, 128], [131, 131], [132, 132]], "source_code_file": "src/dirname.c", "binary_file1": "dirname.json", "binary_file2": "dirname.json"}
{"fname": "to_uchar", "lineno_map": [[156, 156]], "source_code_file": "src/stty.c", "binary_file1": "stty.json", "binary_file2": "stty.json"}
{"fname": "emit_mandatory_arg_note", "lineno_map": [[586, 586], [587, 587], [590, 590]], "source_code_file": "src/stty.c", "binary_file1": "stty.json", "binary_file2": "stty.json"}
{"fname": "emit_ancillary_info", "lineno_map": [[631, 631], [632, 632], [642, 642], [643, 643], [645, 645], [646, 646], [648, 648], [649, 649], [651, 651], [655, 655], [656, 656], [662, 662], [665, 665], [667, 667], [669, 669]], "source_code_file": "src/stty.c", "binary_file1": "stty.json", "binary_file2": "stty.json"}
{"fname": "wrapf", "lineno_map": [[498, 498], [499, 499], [502, 502], [503, 503], [505, 505], [507, 507], [509, 509], [510, 510], [514, 514], [515, 515], [519, 519], [520, 520], [521, 521]], "source_code_file": "src/stty.c", "binary_file1": "stty.json", "binary_file2": "stty.json"}
{"fname": "usage", "lineno_map": [[527, 527], [528, 528], [531, 531], [537, 537], [541, 541], [543, 543], [548, 548], [549, 549], [550, 550], [555, 555], [559, 559], [568, 568], [573, 573], [577, 577], [583, 583], [592, 592], [596, 596], [600, 600], [606, 606], [611, 611], [615, 615], [621, 621], [626, 626], [628, 628], [629, 629], [633, 633], [637, 637], [642, 642], [647, 647], [651, 651], [658, 658], [667, 667], [670, 670], [678, 678], [682, 682], [692, 692], [696, 696], [702, 702], [707, 707], [712, 712], [716, 716], [722, 722], [727, 727], [732, 732], [737, 737], [742, 742], [747, 747], [752, 752], [757, 757], [762, 762], [767, 767], [772, 772], [777, 777], [781, 781], [785, 785], [792, 792], [796, 796], [802, 802], [808, 808], [812, 812], [816, 816], [820, 820], [825, 825], [829, 829], [833, 833], [838, 838], [843, 843], [847, 847], [858, 858], [863, 863], [868, 868], [873, 873], [877, 877], [882, 882], [886, 886], [890, 890], [895, 895], [905, 905], [920, 920], [924, 924], [930, 930], [934, 934], [938, 938], [956, 956], [963, 963], [982, 982], [1068, 1068], [1075, 1075], [1077, 1077]], "source_code_file": "src/stty.c", "binary_file1": "stty.json", "binary_file2": "stty.json"}
{"fname": "apply_settings", "lineno_map": [[1103, 1103], [1105, 1105], [1106, 1106], [1107, 1107], [1108, 1108], [1111, 1111], [1112, 1112], [1114, 1114], [1116, 1116], [1117, 1117], [1119, 1119], [1121, 1121], [1122, 1122], [1124, 1124], [1126, 1126], [1128, 1128], [1130, 1130], [1131, 1131], [1134, 1134], [1138, 1138], [1140, 1140], [1141, 1141], [1143, 1143], [1145, 1145], [1147, 1147], [1149, 1149], [1150, 1150], [1151, 1151], [1152, 1152], [1153, 1153], [1158, 1158], [1160, 1160], [1162, 1162], [1163, 1163], [1164, 1164], [1165, 1165], [1166, 1166], [1167, 1167], [1168, 1168], [1170, 1170], [1172, 1172], [1173, 1173], [1174, 1174], [1175, 1175], [1176, 1176], [1177, 1177], [1178, 1178], [1198, 1198], [1200, 1200], [1201, 1201], [1202, 1202], [1203, 1203], [1204, 1204], [1207, 1207], [1208, 1208], [1210, 1210], [1211, 1211], [1212, 1212], [1213, 1213], [1214, 1214], [1217, 1217], [1219, 1219], [1220, 1220], [1221, 1221], [1222, 1222], [1223, 1223], [1227, 1227], [1230, 1230], [1231, 1231], [1232, 1232], [1233, 1233], [1234, 1234], [1235, 1235], [1236, 1236], [1239, 1239], [1241, 1241], [1242, 1242], [1243, 1243], [1244, 1244], [1246, 1246], [1248, 1248], [1249, 1249], [1250, 1250], [1251, 1251], [1252, 1252], [1256, 1256], [1258, 1258], [1259, 1259], [1261, 1261]], "source_code_file": "src/stty.c", "binary_file1": "stty.json", "binary_file2": "stty.json"}
{"fname": "main", "lineno_map": [[1276, 1276], [1277, 1277], [1282, 1282], [1283, 1283], [1287, 1287], [1288, 1288], [1289, 1289], [1290, 1290], [1292, 1292], [1294, 1294], [1295, 1295], [1296, 1296], [1299, 1299], [1308, 1308], [1312, 1312], [1315, 1315], [1316, 1316], [1320, 1320], [1321, 1321], [1325, 1325], [1326, 1326], [1327, 1327], [1330, 1330], [1332, 1332], [1337, 1337], [1338, 1338], [1339, 1339], [1343, 1343], [1346, 1346], [1347, 1347], [1353, 1353], [1354, 1354], [1358, 1358], [1359, 1359], [1364, 1364], [1365, 1365], [1368, 1368], [1370, 1370], [1373, 1373], [1377, 1377], [1380, 1380], [1381, 1381], [1382, 1382], [1383, 1383], [1384, 1384], [1388, 1388], [1389, 1389], [1391, 1391], [1393, 1393], [1394, 1394], [1395, 1395], [1399, 1399], [1400, 1400], [1401, 1401], [1404, 1404], [1410, 1410], [1411, 1411], [1420, 1420], [1421, 1421], [1430, 1430], [1442, 1442], [1443, 1443], [1446, 1446]], "source_code_file": "src/stty.c", "binary_file1": "stty.json", "binary_file2": "stty.json"}
{"fname": "set_mode", "lineno_map": [[1473, 1473], [1476, 1476], [1478, 1478], [1481, 1481], [1483, 1483], [1484, 1484], [1486, 1486], [1488, 1488], [1490, 1490], [1491, 1491], [1493, 1493], [1495, 1495], [1497, 1497], [1499, 1499], [1500, 1500], [1509, 1509], [1515, 1515], [1517, 1517], [1521, 1521], [1523, 1523], [1524, 1524], [1526, 1526], [1527, 1527], [1528, 1528], [1530, 1530], [1531, 1531], [1533, 1533], [1535, 1535], [1537, 1537], [1539, 1539], [1540, 1540], [1544, 1544], [1545, 1545], [1548, 1548], [1550, 1550], [1552, 1552], [1553, 1553], [1554, 1554], [1558, 1558], [1559, 1559], [1560, 1560], [1563, 1563], [1565, 1565], [1566, 1566], [1569, 1569], [1570, 1570], [1571, 1571], [1582, 1582], [1583, 1583], [1584, 1584], [1589, 1589], [1590, 1590], [1594, 1594], [1596, 1596], [1597, 1597], [1599, 1599], [1603, 1603], [1605, 1605], [1606, 1606], [1608, 1608], [1622, 1622], [1623, 1623], [1625, 1625], [1627, 1627], [1628, 1628], [1629, 1629], [1633, 1633], [1634, 1634], [1635, 1635], [1639, 1639], [1640, 1640], [1648, 1648], [1650, 1650], [1651, 1651], [1652, 1652], [1653, 1653], [1662, 1662], [1666, 1666], [1667, 1667], [1669, 1669]], "source_code_file": "src/stty.c", "binary_file1": "stty.json", "binary_file2": "stty.json"}
{"fname": "set_control_char", "lineno_map": [[1680, 1680], [1681, 1681], [1682, 1682], [1683, 1683], [1684, 1684], [1685, 1685], [1686, 1686], [1688, 1688], [1689, 1689], [1691, 1691], [1694, 1694], [1695, 1695]], "source_code_file": "src/stty.c", "binary_file1": "stty.json", "binary_file2": "stty.json"}
{"fname": "set_speed", "lineno_map": [[1703, 1703], [1704, 1704], [1705, 1705], [1706, 1706], [1707, 1707]], "source_code_file": "src/stty.c", "binary_file1": "stty.json", "binary_file2": "stty.json"}
{"fname": "get_win_size", "lineno_map": [[1715, 1715]], "source_code_file": "src/stty.c", "binary_file1": "stty.json", "binary_file2": "stty.json"}
{"fname": "set_window_size", "lineno_map": [[1724, 1724], [1726, 1726], [1727, 1727], [1728, 1728], [1731, 1731], [1732, 1732], [1733, 1733], [1734, 1734], [1777, 1777], [1778, 1778]], "source_code_file": "src/stty.c", "binary_file1": "stty.json", "binary_file2": "stty.json"}
{"fname": "display_window_size", "lineno_map": [[1786, 1786], [1788, 1788], [1789, 1789], [1790, 1790], [1791, 1791], [1797, 1797], [1798, 1798], [1799, 1799], [1800, 1800]], "source_code_file": "src/stty.c", "binary_file1": "stty.json", "binary_file2": "stty.json"}
{"fname": "screen_columns", "lineno_map": [[1817, 1817], [1822, 1822], [1824, 1824], [1825, 1825], [1826, 1826], [1828, 1828]], "source_code_file": "src/stty.c", "binary_file1": "stty.json", "binary_file2": "stty.json"}
{"fname": "mode_type_flag", "lineno_map": [[1836, 1836], [1854, 1854]], "source_code_file": "src/stty.c", "binary_file1": "stty.json", "binary_file2": "stty.json"}
{"fname": "display_settings", "lineno_map": [[1862, 1862], [1865, 1865], [1869, 1869], [1873, 1873]], "source_code_file": "src/stty.c", "binary_file1": "stty.json", "binary_file2": "stty.json"}
{"fname": "display_changed", "lineno_map": [[1885, 1885], [1887, 1887], [1889, 1889], [1891, 1891], [1892, 1892], [1894, 1894], [1895, 1895], [1897, 1897], [1898, 1898], [1902, 1902], [1903, 1903], [1918, 1918], [1919, 1919], [1920, 1920], [1922, 1922], [1924, 1924], [1925, 1925], [1926, 1926], [1928, 1928], [1929, 1929], [1930, 1930], [1932, 1932], [1933, 1933], [1935, 1935], [1936, 1936], [1937, 1937], [1939, 1939], [1941, 1941], [1942, 1942], [1943, 1943], [1945, 1945], [1948, 1948], [1949, 1949], [1954, 1954], [1956, 1956], [1958, 1958], [1960, 1960], [1961, 1961], [1964, 1964], [1966, 1966], [1967, 1967], [1970, 1970], [1971, 1971], [1972, 1972]], "source_code_file": "src/stty.c", "binary_file1": "stty.json", "binary_file2": "stty.json"}
{"fname": "display_all", "lineno_map": [[1981, 1981], [1983, 1983], [1985, 1985], [1988, 1988], [1990, 1990], [1991, 1991], [1993, 1993], [1997, 1997], [1998, 1998], [2012, 2012], [2013, 2013], [2018, 2018], [2019, 2019], [2020, 2020], [2021, 2021], [2022, 2022], [2023, 2023], [2025, 2025], [2027, 2027], [2028, 2028], [2029, 2029], [2031, 2031], [2032, 2032], [2033, 2033], [2036, 2036], [2037, 2037], [2038, 2038], [2039, 2039], [2040, 2040], [2041, 2041], [2042, 2042], [2044, 2044], [2045, 2045]], "source_code_file": "src/stty.c", "binary_file1": "stty.json", "binary_file2": "stty.json"}
{"fname": "display_speed", "lineno_map": [[2051, 2051], [2052, 2052], [2055, 2055], [2058, 2058], [2059, 2059]], "source_code_file": "src/stty.c", "binary_file1": "stty.json", "binary_file2": "stty.json"}
{"fname": "display_recoverable", "lineno_map": [[2065, 2065], [2066, 2066], [2067, 2067], [2068, 2068], [2069, 2069], [2070, 2070], [2071, 2071], [2072, 2072]], "source_code_file": "src/stty.c", "binary_file1": "stty.json", "binary_file2": "stty.json"}
{"fname": "strtoul_tcflag_t", "lineno_map": [[2081, 2081], [2082, 2082], [2083, 2083], [2085, 2085]], "source_code_file": "src/stty.c", "binary_file1": "stty.json", "binary_file2": "stty.json"}
{"fname": "strtoul_cc_t", "lineno_map": [[2094, 2094], [2095, 2095], [2096, 2096], [2098, 2098]], "source_code_file": "src/stty.c", "binary_file1": "stty.json", "binary_file2": "stty.json"}
{"fname": "recover_mode", "lineno_map": [[2108, 2108], [2110, 2110], [2113, 2113], [2115, 2115], [2117, 2117], [2118, 2118], [2119, 2119], [2120, 2120], [2122, 2122], [2125, 2125], [2126, 2126], [2128, 2128]], "source_code_file": "src/stty.c", "binary_file1": "stty.json", "binary_file2": "stty.json"}
{"fname": "string_to_baud", "lineno_map": [[2213, 2213], [2214, 2214]], "source_code_file": "src/stty.c", "binary_file1": "stty.json", "binary_file2": "stty.json"}
{"fname": "baud_to_value", "lineno_map": [[2222, 2222], [2223, 2223]], "source_code_file": "src/stty.c", "binary_file1": "stty.json", "binary_file2": "stty.json"}
{"fname": "sane_mode", "lineno_map": [[2234, 2234], [2240, 2240], [2243, 2243], [2245, 2245], [2246, 2246], [2248, 2248], [2250, 2250], [2251, 2251], [2252, 2252], [2254, 2254], [2256, 2256], [2257, 2257], [2258, 2258]], "source_code_file": "src/stty.c", "binary_file1": "stty.json", "binary_file2": "stty.json"}
{"fname": "visible", "lineno_map": [[2270, 2270], [2272, 2272], [2275, 2275], [2277, 2277], [2278, 2278], [2279, 2279], [2281, 2281], [2282, 2282], [2286, 2286], [2287, 2287], [2288, 2288], [2290, 2290], [2291, 2291], [2294, 2294], [2295, 2295], [2300, 2300], [2301, 2301], [2307, 2307], [2308, 2308], [2310, 2310]], "source_code_file": "src/stty.c", "binary_file1": "stty.json", "binary_file2": "stty.json"}
{"fname": "ptr_align", "lineno_map": [[501, 501], [502, 502], [503, 503]], "source_code_file": "src/cat.c", "binary_file1": "cat.json", "binary_file2": "cat.json"}
{"fname": "emit_stdin_note", "lineno_map": [[579, 579], [583, 583]], "source_code_file": "src/cat.c", "binary_file1": "cat.json", "binary_file2": "cat.json"}
{"fname": "emit_ancillary_info", "lineno_map": [[631, 631], [642, 642], [643, 643], [645, 645], [648, 648], [651, 651], [655, 655], [656, 656], [662, 662], [665, 665], [667, 667]], "source_code_file": "src/cat.c", "binary_file1": "cat.json", "binary_file2": "cat.json"}
{"fname": "io_blksize", "lineno_map": [[76, 76], [77, 77], [78, 78]], "source_code_file": "src/cat.c", "binary_file1": "cat.json", "binary_file2": "cat.json"}
{"fname": "usage", "lineno_map": [[84, 84], [85, 85], [88, 88], [92, 92], [96, 96], [98, 98], [107, 107], [113, 113], [114, 114], [115, 115], [122, 122], [124, 124]], "source_code_file": "src/cat.c", "binary_file1": "cat.json", "binary_file2": "cat.json"}
{"fname": "next_line_num", "lineno_map": [[132, 132], [135, 135], [137, 137], [139, 139], [140, 140], [141, 141], [143, 143], [144, 144], [145, 145]], "source_code_file": "src/cat.c", "binary_file1": "cat.json", "binary_file2": "cat.json"}
{"fname": "simple_cat", "lineno_map": [[169, 169], [170, 170], [172, 172], [178, 178], [185, 185], [186, 186], [187, 187]], "source_code_file": "src/cat.c", "binary_file1": "cat.json", "binary_file2": "cat.json"}
{"fname": "write_pending", "lineno_map": [[199, 199], [200, 200], [202, 202], [203, 203], [204, 204]], "source_code_file": "src/cat.c", "binary_file1": "cat.json", "binary_file2": "cat.json"}
{"fname": "cat", "lineno_map": [[258, 258], [263, 263], [269, 269], [270, 270], [272, 272], [280, 280], [282, 282], [286, 286], [287, 287], [288, 288], [289, 289], [291, 291], [296, 296], [297, 297], [302, 302], [304, 304], [306, 306], [312, 312], [313, 313], [321, 321], [322, 322], [323, 323], [324, 324], [327, 327], [329, 329], [333, 333], [334, 334], [337, 337], [338, 338], [342, 342], [343, 343], [345, 345], [346, 346], [347, 347], [350, 350], [352, 352], [353, 353], [360, 360], [361, 361], [362, 362], [371, 371], [373, 373], [378, 378], [383, 383], [385, 385], [386, 386], [392, 392], [394, 394], [395, 395], [401, 401], [402, 402], [406, 406], [408, 408], [410, 410], [414, 414], [416, 416], [417, 417], [428, 428], [432, 432], [434, 434], [435, 435], [436, 436], [438, 438], [439, 439], [443, 443], [444, 444], [445, 445], [447, 447], [448, 448], [451, 451], [452, 452], [457, 457], [458, 458], [462, 462], [463, 463], [464, 464], [466, 466], [471, 471], [472, 472], [475, 475], [483, 483], [485, 485], [486, 486], [488, 488], [489, 489], [492, 492], [496, 496]], "source_code_file": "src/cat.c", "binary_file1": "cat.json", "binary_file2": "cat.json"}
{"fname": "main", "lineno_map": [[511, 511], [519, 519], [535, 535], [540, 540], [541, 541], [542, 542], [543, 543], [544, 544], [545, 545], [546, 546], [563, 563], [564, 564], [565, 565], [566, 566], [572, 572], [576, 576], [579, 579], [582, 582], [583, 583], [587, 587], [588, 588], [592, 592], [596, 596], [600, 600], [601, 601], [609, 609], [613, 613], [614, 614], [615, 615], [619, 619], [623, 623], [626, 626], [628, 628], [631, 631], [637, 637], [638, 638], [640, 640], [641, 641], [642, 642], [643, 643], [645, 645], [648, 648], [655, 655], [656, 656], [660, 660], [661, 661], [663, 663], [665, 665], [666, 666], [672, 672], [673, 673], [675, 675], [676, 676], [677, 677], [681, 681], [683, 683], [684, 684], [687, 687], [689, 689], [695, 695], [696, 696], [697, 697], [699, 699], [700, 700], [707, 707], [708, 708], [710, 710], [711, 711], [713, 713], [717, 717], [741, 741], [742, 742], [744, 744], [745, 745], [749, 749], [752, 752], [755, 755], [757, 757], [758, 758], [761, 761], [763, 763], [764, 764]], "source_code_file": "src/cat.c", "binary_file1": "cat.json", "binary_file2": "cat.json"}
{"fname": "emit_stdin_note", "lineno_map": [[580, 580]], "source_code_file": "src/fmt.c", "binary_file1": "fmt.json", "binary_file2": "fmt.json"}
{"fname": "emit_mandatory_arg_note", "lineno_map": [[587, 587]], "source_code_file": "src/fmt.c", "binary_file1": "fmt.json", "binary_file2": "fmt.json"}
{"fname": "emit_ancillary_info", "lineno_map": [[631, 631], [632, 632], [642, 642], [643, 643], [645, 645], [646, 646], [651, 651], [655, 655], [656, 656], [662, 662], [665, 665], [667, 667], [669, 669]], "source_code_file": "src/fmt.c", "binary_file1": "fmt.json", "binary_file2": "fmt.json"}
{"fname": "usage", "lineno_map": [[265, 265], [266, 266], [269, 269], [270, 270], [275, 275], [276, 276], [278, 278], [287, 287], [293, 293], [294, 294], [295, 295], [297, 297]], "source_code_file": "src/fmt.c", "binary_file1": "fmt.json", "binary_file2": "fmt.json"}
{"fname": "main", "lineno_map": [[320, 320], [321, 321], [322, 322], [325, 325], [326, 326], [327, 327], [328, 328], [330, 330], [332, 332], [333, 333], [334, 334], [335, 335], [337, 337], [340, 340], [343, 343], [344, 344], [345, 345], [348, 348], [351, 351], [354, 354], [355, 355], [358, 358], [361, 361], [365, 365], [369, 369], [373, 373], [377, 377], [381, 381], [385, 385], [388, 388], [390, 390], [394, 394], [398, 398], [399, 399], [402, 402], [405, 405], [406, 406], [407, 407], [408, 408], [412, 412], [415, 415], [416, 416], [419, 419], [421, 421], [422, 422], [423, 423], [427, 427], [428, 428], [430, 430], [431, 431], [433, 433], [434, 434], [439, 439], [441, 441]], "source_code_file": "src/fmt.c", "binary_file1": "fmt.json", "binary_file2": "fmt.json"}
{"fname": "set_prefix", "lineno_map": [[458, 458], [459, 459], [461, 461], [462, 462], [464, 464], [465, 465], [466, 466], [467, 467], [468, 468], [469, 469], [470, 470]], "source_code_file": "src/fmt.c", "binary_file1": "fmt.json", "binary_file2": "fmt.json"}
{"fname": "fmt", "lineno_map": [[478, 478], [479, 479], [480, 480], [481, 481], [482, 482], [484, 484], [485, 485]], "source_code_file": "src/fmt.c", "binary_file1": "fmt.json", "binary_file2": "fmt.json"}
{"fname": "set_other_indent", "lineno_map": [[495, 495], [496, 496], [497, 497], [499, 499], [501, 501], [503, 503], [505, 505], [513, 513], [514, 514], [518, 518]], "source_code_file": "src/fmt.c", "binary_file1": "fmt.json", "binary_file2": "fmt.json"}
{"fname": "get_paragraph", "lineno_map": [[542, 542], [543, 543], [547, 547], [548, 548], [549, 549], [551, 551], [552, 552], [554, 554], [557, 557], [558, 558], [563, 563], [564, 564], [565, 565], [566, 566], [567, 567], [568, 568], [572, 572], [576, 576], [578, 578], [582, 582], [584, 584], [587, 587], [589, 589], [593, 593], [595, 595], [600, 600], [601, 601], [606, 606], [608, 608], [609, 609]], "source_code_file": "src/fmt.c", "binary_file1": "fmt.json", "binary_file2": "fmt.json"}
{"fname": "copy_rest", "lineno_map": [[623, 623], [624, 624], [626, 626], [627, 627], [628, 628], [629, 629], [630, 630], [631, 631], [632, 632], [634, 634], [636, 636], [637, 637]], "source_code_file": "src/fmt.c", "binary_file1": "fmt.json", "binary_file2": "fmt.json"}
{"fname": "same_para", "lineno_map": [[650, 650], [651, 651]], "source_code_file": "src/fmt.c", "binary_file1": "fmt.json", "binary_file2": "fmt.json"}
{"fname": "get_line", "lineno_map": [[669, 669], [670, 670], [677, 677], [680, 680], [682, 682], [683, 683], [685, 685], [686, 686], [688, 688], [689, 689], [690, 690], [694, 694], [695, 695], [696, 696], [697, 697], [698, 698], [699, 699], [700, 700], [701, 701], [702, 702], [704, 704], [705, 705], [707, 707], [709, 709]], "source_code_file": "src/fmt.c", "binary_file1": "fmt.json", "binary_file2": "fmt.json"}
{"fname": "get_prefix", "lineno_map": [[721, 721], [722, 722], [723, 723], [724, 724], [725, 725], [729, 729], [730, 730], [732, 732], [733, 733], [735, 735], [736, 736], [738, 738]], "source_code_file": "src/fmt.c", "binary_file1": "fmt.json", "binary_file2": "fmt.json"}
{"fname": "get_space", "lineno_map": [[751, 751], [752, 752], [753, 753], [755, 755], [756, 756], [760, 760]], "source_code_file": "src/fmt.c", "binary_file1": "fmt.json", "binary_file2": "fmt.json"}
{"fname": "check_punctuation", "lineno_map": [[769, 769], [770, 770], [771, 771], [773, 773], [774, 774], [775, 775], [776, 776], [777, 777]], "source_code_file": "src/fmt.c", "binary_file1": "fmt.json", "binary_file2": "fmt.json"}
{"fname": "flush_paragraph", "lineno_map": [[793, 793], [795, 795], [796, 796], [806, 806], [810, 810], [811, 811], [812, 812], [814, 814], [816, 816], [817, 817], [819, 819], [820, 820], [822, 822], [827, 827], [828, 828], [829, 829], [833, 833], [834, 834], [839, 839], [840, 840]], "source_code_file": "src/fmt.c", "binary_file1": "fmt.json", "binary_file2": "fmt.json"}
{"fname": "fmt_paragraph", "lineno_map": [[855, 855], [856, 856], [857, 857], [859, 859], [861, 861], [862, 862], [866, 866], [867, 867], [870, 870], [874, 874], [875, 875], [876, 876], [877, 877], [879, 879], [880, 880], [881, 881], [888, 888], [891, 891], [893, 893], [894, 894], [897, 897]], "source_code_file": "src/fmt.c", "binary_file1": "fmt.json", "binary_file2": "fmt.json"}
{"fname": "base_cost", "lineno_map": [[908, 908], [910, 910], [912, 912], [914, 914], [915, 915], [917, 917], [919, 919], [920, 920], [921, 921], [922, 922], [925, 925], [926, 926], [927, 927], [928, 928]], "source_code_file": "src/fmt.c", "binary_file1": "fmt.json", "binary_file2": "fmt.json"}
{"fname": "line_cost", "lineno_map": [[942, 942], [944, 944], [945, 945], [946, 946], [948, 948], [949, 949]], "source_code_file": "src/fmt.c", "binary_file1": "fmt.json", "binary_file2": "fmt.json"}
{"fname": "put_paragraph", "lineno_map": [[962, 962], [963, 963], [964, 964]], "source_code_file": "src/fmt.c", "binary_file1": "fmt.json", "binary_file2": "fmt.json"}
{"fname": "put_line", "lineno_map": [[975, 975], [976, 976], [977, 977], [978, 978], [979, 979], [981, 981], [982, 982], [984, 984], [985, 985], [987, 987], [988, 988], [989, 989]], "source_code_file": "src/fmt.c", "binary_file1": "fmt.json", "binary_file2": "fmt.json"}
{"fname": "put_word", "lineno_map": [[1000, 1000], [1001, 1001], [1002, 1002], [1003, 1003]], "source_code_file": "src/fmt.c", "binary_file1": "fmt.json", "binary_file2": "fmt.json"}
{"fname": "put_space", "lineno_map": [[1013, 1013], [1014, 1014], [1016, 1016], [1017, 1017], [1018, 1018], [1020, 1020], [1021, 1021], [1024, 1024], [1026, 1026], [1027, 1027]], "source_code_file": "src/fmt.c", "binary_file1": "fmt.json", "binary_file2": "fmt.json"}
{"fname": "to_uchar", "lineno_map": [[156, 156]], "source_code_file": "src/pr.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "emit_stdin_note", "lineno_map": [[579, 579], [580, 580], [583, 583]], "source_code_file": "src/pr.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "emit_mandatory_arg_note", "lineno_map": [[586, 586], [587, 587], [590, 590]], "source_code_file": "src/pr.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "timetostr", "lineno_map": [[687, 687], [688, 688], [691, 691]], "source_code_file": "src/pr.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "cols_ready_to_print", "lineno_map": [[790, 790], [791, 791], [792, 792], [793, 793], [794, 794], [795, 795]], "source_code_file": "src/pr.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "first_last_page", "lineno_map": [[807, 807], [808, 808], [809, 809], [810, 810], [812, 812], [815, 815], [817, 817], [818, 818], [819, 819], [820, 820], [821, 821], [825, 825], [828, 828], [829, 829]], "source_code_file": "src/pr.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "parse_column_count", "lineno_map": [[840, 840], [841, 841]], "source_code_file": "src/pr.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "separator_string", "lineno_map": [[849, 849], [850, 850], [851, 851], [852, 852], [853, 853]], "source_code_file": "src/pr.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "main", "lineno_map": [[860, 860], [861, 861], [862, 862], [866, 866], [867, 867], [868, 868], [871, 871], [872, 872], [873, 873], [874, 874], [876, 876], [878, 878], [879, 879], [880, 880], [881, 881], [885, 885], [886, 886], [887, 887], [890, 890], [893, 893], [895, 895], [896, 896], [897, 897], [901, 901], [903, 903], [907, 907], [908, 908], [909, 909], [914, 914], [915, 915], [917, 917], [918, 918], [925, 925], [930, 930], [931, 931], [932, 932], [937, 937], [938, 938], [941, 941], [944, 944], [947, 947], [950, 950], [953, 953], [954, 954], [957, 957], [961, 961], [964, 964], [967, 967], [968, 968], [971, 971], [974, 974], [977, 977], [978, 978], [981, 981], [982, 982], [985, 985], [986, 986], [987, 987], [991, 991], [992, 992], [993, 993], [996, 996], [997, 997], [1000, 1000], [1003, 1003], [1004, 1004], [1005, 1005], [1006, 1006], [1009, 1009], [1011, 1011], [1012, 1012], [1013, 1013], [1014, 1014], [1015, 1015], [1018, 1018], [1019, 1019], [1022, 1022], [1023, 1023], [1026, 1026], [1029, 1029], [1030, 1030], [1033, 1033], [1034, 1034], [1035, 1035], [1036, 1036], [1040, 1040], [1041, 1041], [1042, 1042], [1043, 1043], [1045, 1045], [1046, 1046], [1048, 1048], [1053, 1053], [1055, 1055], [1056, 1056], [1059, 1059], [1060, 1060], [1064, 1064], [1067, 1067], [1068, 1068], [1070, 1070], [1071, 1071], [1074, 1074], [1075, 1075], [1082, 1082], [1084, 1084], [1086, 1086], [1089, 1089], [1090, 1090], [1093, 1093], [1098, 1098], [1100, 1100], [1103, 1103], [1105, 1105], [1109, 1109], [1110, 1110], [1112, 1112], [1118, 1118], [1123, 1123], [1125, 1125], [1128, 1128], [1131, 1131], [1135, 1135], [1136, 1136], [1139, 1139], [1140, 1140], [1144, 1144], [1147, 1147], [1148, 1148]], "source_code_file": "src/pr.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "getoptnum", "lineno_map": [[1157, 1157], [1158, 1158]], "source_code_file": "src/pr.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "getoptarg", "lineno_map": [[1170, 1170], [1171, 1171], [1172, 1172], [1175, 1175], [1176, 1176], [1178, 1178], [1179, 1179], [1181, 1181], [1183, 1183]], "source_code_file": "src/pr.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "init_parameters", "lineno_map": [[1192, 1192], [1194, 1194], [1195, 1195], [1197, 1197], [1198, 1198], [1200, 1200], [1201, 1201], [1203, 1203], [1204, 1204], [1208, 1208], [1209, 1209], [1211, 1211], [1212, 1212], [1216, 1216], [1217, 1217], [1220, 1220], [1222, 1222], [1225, 1225], [1226, 1226], [1228, 1228], [1230, 1230], [1231, 1231], [1235, 1235], [1236, 1236], [1238, 1238], [1239, 1239], [1242, 1242], [1245, 1245], [1246, 1246], [1248, 1248], [1250, 1250], [1252, 1252], [1260, 1260], [1261, 1261], [1262, 1262], [1264, 1264], [1268, 1268], [1269, 1269], [1273, 1273], [1274, 1274], [1275, 1275], [1277, 1277], [1278, 1278], [1280, 1280], [1281, 1281], [1283, 1283], [1285, 1285], [1286, 1286], [1295, 1295], [1296, 1296]], "source_code_file": "src/pr.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "init_fps", "lineno_map": [[1315, 1315], [1317, 1317], [1318, 1318], [1320, 1320], [1322, 1322], [1323, 1323], [1325, 1325], [1327, 1327], [1328, 1328], [1331, 1331], [1333, 1333], [1337, 1337], [1338, 1338], [1340, 1340], [1342, 1342], [1343, 1343], [1347, 1347], [1348, 1348], [1349, 1349], [1350, 1350], [1351, 1351], [1352, 1352], [1353, 1353], [1354, 1354], [1357, 1357], [1358, 1358], [1360, 1360], [1362, 1362], [1363, 1363], [1364, 1364], [1365, 1365], [1366, 1366], [1369, 1369]], "source_code_file": "src/pr.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "init_funcs", "lineno_map": [[1385, 1385], [1387, 1387], [1388, 1388], [1394, 1394], [1395, 1395], [1397, 1397], [1402, 1402], [1406, 1406], [1408, 1408], [1410, 1410], [1411, 1411], [1416, 1416], [1417, 1417], [1422, 1422], [1423, 1423], [1429, 1429], [1431, 1431], [1432, 1432], [1436, 1436], [1437, 1437], [1445, 1445], [1447, 1447], [1448, 1448], [1452, 1452], [1453, 1453], [1456, 1456], [1457, 1457]], "source_code_file": "src/pr.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "open_file", "lineno_map": [[1468, 1468], [1470, 1470], [1471, 1471], [1472, 1472], [1476, 1476], [1477, 1477], [1479, 1479], [1481, 1481], [1482, 1482], [1483, 1483], [1486, 1486], [1487, 1487], [1488, 1488], [1489, 1489]], "source_code_file": "src/pr.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "close_file", "lineno_map": [[1504, 1504], [1506, 1506], [1507, 1507], [1508, 1508], [1509, 1509], [1511, 1511], [1513, 1513], [1515, 1515], [1516, 1516], [1518, 1518], [1524, 1524], [1525, 1525], [1528, 1528]], "source_code_file": "src/pr.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "hold_file", "lineno_map": [[1543, 1543], [1544, 1544], [1546, 1546], [1547, 1547], [1549, 1549], [1552, 1552], [1554, 1554], [1555, 1555]], "source_code_file": "src/pr.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "reset_status", "lineno_map": [[1564, 1564], [1567, 1567], [1568, 1568], [1570, 1570], [1571, 1571], [1574, 1574], [1576, 1576], [1578, 1578], [1580, 1580]], "source_code_file": "src/pr.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "print_files", "lineno_map": [[1596, 1596], [1597, 1597], [1599, 1599], [1600, 1600], [1602, 1602], [1604, 1604], [1607, 1607], [1610, 1610], [1612, 1612], [1614, 1614], [1615, 1615]], "source_code_file": "src/pr.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "init_header", "lineno_map": [[1626, 1626], [1633, 1633], [1634, 1634], [1635, 1635], [1636, 1636], [1640, 1640], [1641, 1641], [1642, 1642], [1645, 1645], [1646, 1646], [1648, 1648], [1649, 1649], [1650, 1650], [1651, 1651], [1656, 1656], [1657, 1657], [1660, 1660], [1661, 1661], [1662, 1662], [1663, 1663], [1664, 1664], [1665, 1665]], "source_code_file": "src/pr.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "init_page", "lineno_map": [[1684, 1684], [1686, 1686], [1687, 1687], [1689, 1689], [1693, 1693], [1695, 1695], [1701, 1701], [1703, 1703], [1706, 1706], [1710, 1710], [1711, 1711], [1713, 1713], [1716, 1716]], "source_code_file": "src/pr.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "align_column", "lineno_map": [[1726, 1726], [1727, 1727], [1729, 1729], [1730, 1730], [1733, 1733], [1734, 1734], [1736, 1736], [1737, 1737]], "source_code_file": "src/pr.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "print_page", "lineno_map": [[1767, 1767], [1769, 1769], [1772, 1772], [1773, 1773], [1776, 1776], [1777, 1777], [1779, 1779], [1780, 1780], [1781, 1781], [1783, 1783], [1785, 1785], [1786, 1786], [1787, 1787], [1788, 1788], [1789, 1789], [1790, 1790], [1792, 1792], [1794, 1794], [1795, 1795], [1797, 1797], [1798, 1798], [1799, 1799], [1800, 1800], [1801, 1801], [1803, 1803], [1804, 1804], [1806, 1806], [1811, 1811], [1813, 1813], [1814, 1814], [1815, 1815], [1816, 1816], [1817, 1817], [1820, 1820], [1823, 1823], [1824, 1824], [1826, 1826], [1830, 1830], [1831, 1831], [1834, 1834], [1836, 1836], [1837, 1837], [1840, 1840], [1843, 1843], [1845, 1845], [1846, 1846], [1850, 1850], [1851, 1851], [1852, 1852], [1853, 1853], [1855, 1855], [1857, 1857], [1858, 1858], [1859, 1859], [1861, 1861], [1862, 1862], [1865, 1865], [1868, 1868]], "source_code_file": "src/pr.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "init_store_cols", "lineno_map": [[1891, 1891], [1892, 1892], [1893, 1893], [1894, 1894], [1896, 1896], [1898, 1898], [1900, 1900], [1902, 1902], [1903, 1903], [1905, 1905], [1906, 1906], [1907, 1907], [1908, 1908]], "source_code_file": "src/pr.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "store_columns", "lineno_map": [[1927, 1927], [1932, 1932], [1933, 1933], [1935, 1935], [1936, 1936], [1938, 1938], [1940, 1940], [1941, 1941], [1943, 1943], [1944, 1944], [1946, 1946], [1947, 1947], [1949, 1949], [1951, 1951], [1953, 1953], [1954, 1954], [1956, 1956], [1957, 1957], [1959, 1959], [1960, 1960], [1961, 1961], [1962, 1962], [1968, 1968], [1970, 1970], [1971, 1971]], "source_code_file": "src/pr.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "balance", "lineno_map": [[1979, 1979], [1981, 1981], [1983, 1983], [1984, 1984], [1985, 1985], [1987, 1987], [1988, 1988], [1990, 1990]], "source_code_file": "src/pr.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "store_char", "lineno_map": [[1999, 1999], [2002, 2002], [2004, 2004]], "source_code_file": "src/pr.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "add_line_number", "lineno_map": [[2016, 2016], [2017, 2017], [2018, 2018], [2019, 2019], [2020, 2020], [2022, 2022], [2027, 2027], [2029, 2029], [2030, 2030], [2031, 2031], [2034, 2034], [2041, 2041], [2042, 2042], [2043, 2043], [2047, 2047], [2048, 2048]], "source_code_file": "src/pr.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "pad_across_to", "lineno_map": [[2057, 2057], [2059, 2059], [2060, 2060], [2063, 2063], [2064, 2064], [2065, 2065]], "source_code_file": "src/pr.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "pad_down", "lineno_map": [[2077, 2077], [2078, 2078], [2080, 2080], [2081, 2081]], "source_code_file": "src/pr.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "read_rest_of_line", "lineno_map": [[2094, 2094], [2096, 2096], [2098, 2098], [2100, 2100], [2101, 2101], [2102, 2102], [2103, 2103], [2104, 2104], [2107, 2107], [2109, 2109]], "source_code_file": "src/pr.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "skip_read", "lineno_map": [[2128, 2128], [2130, 2130], [2134, 2134], [2137, 2137], [2138, 2138], [2140, 2140], [2144, 2144], [2145, 2145], [2149, 2149], [2150, 2150], [2152, 2152], [2154, 2154], [2158, 2158], [2160, 2160], [2161, 2161], [2162, 2162], [2164, 2164], [2167, 2167], [2168, 2168], [2169, 2169], [2172, 2172], [2174, 2174], [2177, 2177], [2180, 2180], [2181, 2181], [2182, 2182]], "source_code_file": "src/pr.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "print_white_space", "lineno_map": [[2195, 2195], [2196, 2196], [2198, 2198], [2199, 2199], [2201, 2201], [2202, 2202], [2204, 2204], [2205, 2205], [2207, 2207], [2208, 2208]], "source_code_file": "src/pr.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "print_sep_string", "lineno_map": [[2219, 2219], [2220, 2220], [2222, 2222], [2225, 2225], [2226, 2226], [2230, 2230], [2232, 2232], [2236, 2236], [2240, 2240], [2241, 2241], [2245, 2245], [2246, 2246], [2247, 2247], [2248, 2248], [2252, 2252], [2253, 2253]], "source_code_file": "src/pr.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "print_clump", "lineno_map": [[2264, 2264], [2265, 2265]], "source_code_file": "src/pr.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "print_char", "lineno_map": [[2280, 2280], [2282, 2282], [2284, 2284], [2287, 2287], [2288, 2288], [2291, 2291], [2293, 2293], [2294, 2294], [2297, 2297], [2299, 2299]], "source_code_file": "src/pr.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "skip_to_page", "lineno_map": [[2308, 2308], [2313, 2313], [2315, 2315], [2316, 2316], [2317, 2317], [2319, 2319], [2320, 2320], [2321, 2321], [2322, 2322], [2324, 2324], [2325, 2325], [2326, 2326], [2327, 2327], [2329, 2329], [2330, 2330], [2332, 2332], [2336, 2336], [2337, 2337]], "source_code_file": "src/pr.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "print_header", "lineno_map": [[2359, 2359], [2360, 2360], [2361, 2361], [2363, 2363], [2364, 2364], [2369, 2369], [2370, 2370], [2371, 2371], [2372, 2372], [2373, 2373], [2375, 2375], [2380, 2380], [2381, 2381]], "source_code_file": "src/pr.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "read_line", "lineno_map": [[2415, 2415], [2417, 2417], [2419, 2419], [2420, 2420], [2421, 2421], [2422, 2422], [2424, 2424], [2427, 2427], [2428, 2428], [2429, 2429], [2430, 2430], [2432, 2432], [2433, 2433], [2435, 2435], [2436, 2436], [2437, 2437], [2440, 2440], [2445, 2445], [2448, 2448], [2450, 2450], [2454, 2454], [2456, 2456], [2458, 2458], [2459, 2459], [2461, 2461], [2464, 2464], [2465, 2465], [2466, 2466], [2468, 2468], [2469, 2469], [2471, 2471], [2472, 2472], [2473, 2473], [2475, 2475], [2476, 2476], [2479, 2479], [2481, 2481], [2482, 2482], [2485, 2485], [2486, 2486], [2489, 2489], [2490, 2490], [2492, 2492], [2493, 2493], [2496, 2496], [2500, 2500], [2502, 2502], [2507, 2507], [2508, 2508], [2509, 2509], [2510, 2510], [2511, 2511], [2514, 2514], [2518, 2518], [2519, 2519], [2520, 2520], [2522, 2522], [2526, 2526]], "source_code_file": "src/pr.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "print_stored", "lineno_map": [[2549, 2549], [2550, 2550], [2562, 2562], [2564, 2564], [2566, 2566], [2567, 2567], [2569, 2569], [2572, 2572], [2573, 2573], [2574, 2574], [2576, 2576], [2577, 2577], [2582, 2582], [2584, 2584], [2585, 2585], [2588, 2588], [2589, 2589], [2591, 2591], [2592, 2592], [2594, 2594], [2596, 2596], [2597, 2597], [2598, 2598]], "source_code_file": "src/pr.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "char_to_clump", "lineno_map": [[2619, 2619], [2620, 2620], [2625, 2625], [2627, 2627], [2628, 2628], [2630, 2630], [2632, 2632], [2634, 2634], [2636, 2636], [2637, 2637], [2638, 2638], [2642, 2642], [2643, 2643], [2647, 2647], [2649, 2649], [2651, 2651], [2652, 2652], [2653, 2653], [2654, 2654], [2655, 2655], [2656, 2656], [2658, 2658], [2660, 2660], [2662, 2662], [2663, 2663], [2664, 2664], [2665, 2665], [2669, 2669], [2670, 2670], [2671, 2671], [2672, 2672], [2673, 2673], [2674, 2674], [2677, 2677], [2679, 2679], [2680, 2680], [2681, 2681], [2685, 2685], [2686, 2686], [2687, 2687], [2692, 2692], [2693, 2693], [2694, 2694], [2698, 2698], [2700, 2700], [2701, 2701], [2703, 2703], [2704, 2704], [2706, 2706]], "source_code_file": "src/pr.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "cleanup", "lineno_map": [[2719, 2719], [2720, 2720], [2721, 2721], [2722, 2722], [2723, 2723], [2724, 2724]], "source_code_file": "src/pr.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "usage", "lineno_map": [[2732, 2732], [2733, 2733], [2736, 2736], [2741, 2741], [2745, 2745], [2746, 2746], [2748, 2748], [2756, 2756], [2764, 2764], [2774, 2774], [2783, 2783], [2789, 2789], [2793, 2793], [2801, 2801], [2808, 2808], [2816, 2816], [2822, 2822], [2826, 2826], [2836, 2836], [2842, 2842], [2843, 2843], [2844, 2844], [2846, 2846]], "source_code_file": "src/pr.c", "binary_file1": "pr.json", "binary_file2": "pr.json"}
{"fname": "usage", "lineno_map": [[66, 66], [67, 67], [70, 70], [71, 71], [81, 81], [83, 83], [86, 86], [89, 89], [92, 92], [93, 93], [94, 94], [95, 95], [99, 99], [101, 101]], "source_code_file": "src/truncate.c", "binary_file1": "truncate.json", "binary_file2": "truncate.json"}
{"fname": "do_ftruncate", "lineno_map": [[112, 112], [114, 114], [117, 117], [119, 119], [120, 120], [122, 122], [123, 123], [129, 129], [131, 131], [135, 135], [136, 136], [140, 140], [142, 142], [143, 143], [147, 147], [154, 154], [155, 155], [157, 157], [162, 162], [165, 165], [166, 166], [167, 167], [168, 168], [169, 169], [171, 171], [172, 172], [176, 176], [177, 177], [179, 179], [183, 183], [187, 187], [189, 189], [193, 193], [197, 197], [198, 198], [199, 199], [201, 201], [203, 203], [204, 204]], "source_code_file": "src/truncate.c", "binary_file1": "truncate.json", "binary_file2": "truncate.json"}
{"fname": "main", "lineno_map": [[215, 215], [216, 216], [218, 218], [219, 219], [220, 220], [224, 224], [225, 225], [226, 226], [227, 227], [229, 229], [231, 231], [233, 233], [236, 236], [240, 240], [244, 244], [249, 249], [250, 250], [251, 251], [254, 254], [255, 255], [258, 258], [259, 259], [262, 262], [263, 263], [266, 266], [267, 267], [271, 271], [272, 272], [273, 273], [275, 275], [277, 277], [279, 279], [281, 281], [285, 285], [286, 286], [288, 288], [289, 289], [290, 290], [293, 293], [295, 295], [298, 298], [302, 302], [303, 303], [306, 306], [308, 308], [310, 310], [313, 313], [315, 315], [317, 317], [320, 320], [322, 322], [324, 324], [327, 327], [329, 329], [330, 330], [333, 333], [336, 336], [337, 337], [338, 338], [339, 339], [340, 340], [343, 343], [344, 344], [346, 346], [347, 347], [348, 348], [349, 349], [350, 350], [354, 354], [358, 358], [359, 359], [361, 361], [362, 362], [364, 364], [367, 367], [369, 369], [371, 371], [377, 377], [379, 379], [381, 381], [383, 383], [387, 387], [389, 389], [390, 390], [392, 392], [393, 393]], "source_code_file": "src/truncate.c", "binary_file1": "truncate.json", "binary_file2": "truncate.json"}
{"fname": "usage", "lineno_map": [[46, 46], [47, 47], [50, 50], [51, 51], [56, 56], [57, 57], [58, 58], [60, 60]], "source_code_file": "src/whoami.c", "binary_file1": "whoami.json", "binary_file2": "whoami.json"}
{"fname": "main", "lineno_map": [[68, 68], [71, 71], [72, 72], [73, 73], [74, 74], [76, 76], [78, 78], [80, 80], [81, 81], [83, 83], [85, 85], [86, 86], [89, 89], [90, 90], [91, 91], [92, 92], [93, 93], [95, 95]], "source_code_file": "src/whoami.c", "binary_file1": "whoami.json", "binary_file2": "whoami.json"}
{"fname": "initialize_exit_failure", "lineno_map": [[100, 100], [101, 101], [102, 102], [103, 103]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "field_sep", "lineno_map": [[161, 161], [162, 162], [163, 163]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "select_plural", "lineno_map": [[184, 184], [189, 189]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "emit_stdin_note", "lineno_map": [[579, 579], [580, 580], [583, 583]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "emit_mandatory_arg_note", "lineno_map": [[586, 586], [587, 587], [590, 590]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "emit_ancillary_info", "lineno_map": [[631, 631], [632, 632], [642, 642], [643, 643], [645, 645], [646, 646], [648, 648], [649, 649], [651, 651], [656, 656], [662, 662], [665, 665], [667, 667], [669, 669]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "async_safe_die", "lineno_map": [[389, 389], [396, 396], [399, 399], [400, 400], [401, 401], [404, 404], [406, 406]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "sort_die", "lineno_map": [[416, 416]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "usage", "lineno_map": [[423, 423], [424, 424], [427, 427], [432, 432], [436, 436], [437, 437], [439, 439], [443, 443], [449, 449], [454, 454], [457, 457], [463, 463], [471, 471], [475, 475], [479, 479], [486, 486], [493, 493], [497, 497], [503, 503], [512, 512], [515, 515], [516, 516], [517, 517], [530, 530], [538, 538], [541, 541]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "cs_enter", "lineno_map": [[648, 648], [649, 649]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "cs_leave", "lineno_map": [[656, 656], [659, 659]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "proctab_hasher", "lineno_map": [[697, 697]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "proctab_comparator", "lineno_map": [[704, 704], [705, 705]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "reap", "lineno_map": [[725, 725], [727, 727], [728, 728], [730, 730], [732, 732], [733, 733], [735, 735]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "register_proc", "lineno_map": [[747, 747], [749, 749], [753, 753], [754, 754], [757, 757], [759, 759], [760, 760]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "delete_proc", "lineno_map": [[771, 771], [772, 772], [773, 773], [775, 775]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "wait_proc", "lineno_map": [[785, 785], [786, 786]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "reap_exited", "lineno_map": [[795, 795], [796, 796]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "reap_some", "lineno_map": [[804, 804], [805, 805]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "reap_all", "lineno_map": [[813, 813], [814, 814]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "cleanup", "lineno_map": [[824, 824], [825, 825], [826, 826]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "exit_cleanup", "lineno_map": [[834, 834], [839, 839], [840, 840], [841, 841], [844, 844]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "create_temp_file", "lineno_map": [[860, 860], [861, 861], [862, 862], [863, 863], [864, 864], [867, 867], [868, 868], [869, 869], [870, 870], [871, 871], [874, 874], [875, 875], [876, 876], [878, 878], [879, 879], [881, 881], [882, 882], [883, 883], [885, 885], [887, 887], [888, 888], [890, 890], [891, 891], [894, 894]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "stream_open", "lineno_map": [[950, 950], [952, 952], [954, 954], [955, 955], [959, 959], [960, 960], [962, 962], [964, 964], [966, 966], [967, 967], [969, 969], [972, 972]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "xfopen", "lineno_map": [[983, 983], [984, 984], [985, 985]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "xfclose", "lineno_map": [[994, 994], [998, 998], [999, 999], [1004, 1004], [1005, 1005], [1009, 1009], [1010, 1010]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "move_fd", "lineno_map": [[1020, 1020], [1023, 1023], [1024, 1024]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "pipe_fork", "lineno_map": [[1039, 1039], [1043, 1043], [1053, 1053], [1054, 1054], [1056, 1056], [1060, 1060], [1061, 1061], [1062, 1062], [1064, 1064], [1065, 1065], [1066, 1066], [1067, 1067], [1069, 1069], [1070, 1070], [1072, 1072], [1076, 1076], [1077, 1077], [1078, 1078], [1082, 1082], [1084, 1084], [1085, 1085], [1086, 1086], [1087, 1087], [1089, 1089], [1091, 1091], [1092, 1092], [1095, 1095]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "maybe_create_temp", "lineno_map": [[1114, 1114], [1115, 1115], [1118, 1118], [1120, 1120], [1124, 1124], [1125, 1125], [1127, 1127], [1128, 1128], [1129, 1129], [1131, 1131], [1133, 1133], [1137, 1137], [1138, 1138], [1139, 1139], [1141, 1141], [1143, 1143], [1147, 1147], [1148, 1148], [1149, 1149]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "open_temp", "lineno_map": [[1173, 1173], [1175, 1175], [1176, 1176], [1178, 1178], [1179, 1179], [1182, 1182], [1184, 1184], [1187, 1187], [1188, 1188], [1190, 1190], [1191, 1191], [1197, 1197], [1198, 1198], [1199, 1199], [1201, 1201], [1203, 1203], [1206, 1206], [1207, 1207], [1208, 1208], [1209, 1209], [1211, 1211], [1212, 1212], [1214, 1214], [1215, 1215], [1216, 1216]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "add_temp_dir", "lineno_map": [[1228, 1228], [1229, 1229], [1231, 1231]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "zaptemp", "lineno_map": [[1243, 1243], [1246, 1246], [1249, 1249], [1250, 1250], [1253, 1253], [1254, 1254], [1255, 1255], [1256, 1256], [1257, 1257], [1258, 1258], [1260, 1260], [1261, 1261], [1262, 1262], [1263, 1263], [1264, 1264]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "struct_month_cmp", "lineno_map": [[1272, 1272], [1273, 1273]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "inittables", "lineno_map": [[1286, 1286], [1288, 1288], [1289, 1289], [1290, 1290], [1291, 1291], [1296, 1296], [1298, 1298], [1305, 1305], [1306, 1306], [1307, 1307], [1308, 1308], [1310, 1310], [1311, 1311], [1312, 1312], [1313, 1313], [1315, 1315]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "specify_nmerge", "lineno_map": [[1328, 1328], [1333, 1333], [1334, 1334], [1338, 1338], [1340, 1340], [1341, 1341], [1342, 1342], [1345, 1345], [1347, 1347], [1349, 1349], [1353, 1353], [1355, 1355], [1362, 1362], [1365, 1365], [1367, 1367], [1373, 1373]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "specify_sort_size", "lineno_map": [[1382, 1382], [1385, 1385], [1387, 1387], [1388, 1388], [1390, 1390], [1394, 1394], [1395, 1395], [1398, 1398], [1403, 1403], [1406, 1406], [1408, 1408], [1409, 1409], [1412, 1412], [1417, 1417], [1421, 1421], [1424, 1424], [1425, 1425], [1427, 1427], [1431, 1431], [1434, 1434]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "specify_nthreads", "lineno_map": [[1442, 1442], [1443, 1443], [1445, 1445], [1446, 1446], [1449, 1449], [1450, 1450]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "default_sort_size", "lineno_map": [[1462, 1462], [1464, 1464], [1465, 1465], [1467, 1467], [1468, 1468], [1473, 1473], [1478, 1478], [1479, 1479], [1484, 1484], [1485, 1485], [1486, 1486], [1489, 1489], [1490, 1490], [1495, 1495], [1496, 1496]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "sort_buffer_size", "lineno_map": [[1517, 1517], [1521, 1521], [1523, 1523], [1529, 1529], [1530, 1530], [1531, 1531], [1532, 1532], [1533, 1533], [1535, 1535], [1536, 1536], [1541, 1541], [1543, 1543], [1546, 1546], [1548, 1548], [1549, 1549], [1550, 1550], [1556, 1556], [1557, 1557], [1558, 1558], [1560, 1560]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "initbuf", "lineno_map": [[1579, 1579], [1580, 1580], [1581, 1581], [1583, 1583], [1584, 1584], [1585, 1585], [1588, 1588], [1589, 1589], [1590, 1590], [1591, 1591]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "buffer_linelim", "lineno_map": [[1599, 1599]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "begfield", "lineno_map": [[1609, 1609], [1610, 1610], [1611, 1611], [1616, 1616], [1617, 1617], [1619, 1619], [1620, 1620], [1621, 1621], [1622, 1622], [1625, 1625], [1627, 1627], [1628, 1628], [1629, 1629], [1630, 1630], [1635, 1635], [1636, 1636], [1637, 1637], [1640, 1640]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "limfield", "lineno_map": [[1651, 1651], [1652, 1652], [1654, 1654], [1655, 1655], [1664, 1664], [1665, 1665], [1667, 1667], [1668, 1668], [1669, 1669], [1670, 1670], [1673, 1673], [1675, 1675], [1676, 1676], [1677, 1677], [1678, 1678], [1732, 1732], [1736, 1736], [1737, 1737], [1738, 1738], [1741, 1741]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "fillbuf", "lineno_map": [[1756, 1756], [1757, 1757], [1758, 1758], [1759, 1759], [1761, 1761], [1764, 1764], [1766, 1766], [1767, 1767], [1768, 1768], [1773, 1773], [1774, 1774], [1775, 1775], [1776, 1776], [1777, 1777], [1779, 1779], [1786, 1786], [1787, 1787], [1788, 1788], [1790, 1790], [1792, 1792], [1794, 1794], [1795, 1795], [1796, 1796], [1798, 1798], [1799, 1799], [1801, 1801], [1802, 1802], [1807, 1807], [1812, 1812], [1813, 1813], [1814, 1814], [1815, 1815], [1816, 1816], [1817, 1817], [1818, 1818], [1820, 1820], [1824, 1824], [1826, 1826], [1828, 1828], [1829, 1829], [1832, 1832], [1833, 1833], [1834, 1834], [1835, 1835], [1839, 1839], [1842, 1842], [1843, 1843], [1847, 1847], [1848, 1848], [1849, 1849], [1851, 1851], [1852, 1852], [1860, 1860], [1861, 1861], [1862, 1862]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "traverse_raw_number", "lineno_map": [[1903, 1903], [1905, 1905], [1906, 1906], [1914, 1914], [1916, 1916], [1917, 1917], [1922, 1922], [1923, 1923], [1924, 1924], [1927, 1927], [1930, 1930], [1934, 1934], [1935, 1935], [1936, 1936], [1937, 1937], [1939, 1939]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "find_unit_order", "lineno_map": [[1951, 1951], [1952, 1952], [1953, 1953], [1954, 1954], [1956, 1956], [1957, 1957]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "human_numcompare", "lineno_map": [[1970, 1970], [1971, 1971], [1972, 1972], [1973, 1973], [1975, 1975]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "numcompare", "lineno_map": [[1986, 1986], [1987, 1987], [1988, 1988], [1989, 1989]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "nan_compare", "lineno_map": [[2002, 2002], [2003, 2003], [2006, 2006], [2007, 2007]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "general_numcompare", "lineno_map": [[2020, 2020], [2021, 2021], [2024, 2024], [2026, 2026], [2033, 2033], [2034, 2034], [2035, 2035], [2036, 2036], [2037, 2037]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "getmonth", "lineno_map": [[2046, 2046], [2047, 2047], [2049, 2049], [2050, 2050], [2054, 2054], [2055, 2055], [2056, 2056], [2058, 2058], [2060, 2060], [2062, 2062], [2063, 2063], [2066, 2066], [2068, 2068], [2071, 2071], [2073, 2073], [2078, 2078]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "random_md5_state_init", "lineno_map": [[2092, 2092], [2093, 2093], [2094, 2094], [2095, 2095], [2096, 2096], [2097, 2097], [2098, 2098], [2099, 2099]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "xstrxfrm", "lineno_map": [[2107, 2107], [2108, 2108], [2110, 2110], [2112, 2112], [2113, 2113], [2114, 2114]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "compare_random", "lineno_map": [[2134, 2134], [2137, 2137], [2138, 2138], [2139, 2139], [2142, 2142], [2144, 2144], [2146, 2146], [2147, 2147], [2166, 2166], [2167, 2167], [2169, 2169], [2170, 2170], [2171, 2171], [2172, 2172], [2174, 2174], [2175, 2175], [2179, 2179], [2180, 2180], [2181, 2181], [2182, 2182], [2184, 2184], [2187, 2187], [2189, 2189], [2191, 2191], [2192, 2192], [2193, 2193], [2194, 2194], [2195, 2195], [2196, 2196], [2197, 2197], [2198, 2198], [2199, 2199], [2206, 2206], [2207, 2207], [2208, 2208], [2209, 2209], [2210, 2210], [2212, 2212], [2213, 2213], [2219, 2219], [2220, 2220], [2223, 2223], [2225, 2225], [2226, 2226], [2227, 2227], [2233, 2233], [2234, 2234], [2235, 2235], [2238, 2238], [2240, 2240], [2242, 2242], [2243, 2243], [2244, 2244], [2247, 2247], [2250, 2250]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "debug_width", "lineno_map": [[2262, 2262], [2263, 2263], [2264, 2264]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "mark_key", "lineno_map": [[2274, 2274], [2275, 2275], [2277, 2277], [2278, 2278], [2282, 2282], [2283, 2283], [2285, 2285]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "debug_key", "lineno_map": [[2303, 2303], [2304, 2304], [2305, 2305], [2307, 2307], [2309, 2309], [2310, 2310], [2311, 2311], [2312, 2312], [2314, 2314], [2315, 2315], [2317, 2317], [2318, 2318], [2320, 2320], [2321, 2321], [2323, 2323], [2325, 2325], [2326, 2326], [2327, 2327], [2328, 2328], [2329, 2329], [2330, 2330], [2331, 2331], [2333, 2333], [2334, 2334], [2335, 2335], [2337, 2337], [2338, 2338], [2339, 2339], [2343, 2343], [2345, 2345], [2346, 2346], [2350, 2350], [2351, 2351], [2352, 2352]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "debug_line", "lineno_map": [[2360, 2360], [2363, 2363], [2364, 2364]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "default_key_compare", "lineno_map": [[2373, 2373], [2374, 2374], [2375, 2375], [2376, 2376], [2377, 2377], [2378, 2378], [2379, 2379]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "key_to_opts", "lineno_map": [[2389, 2389], [2390, 2390], [2391, 2391], [2392, 2392], [2393, 2393], [2394, 2394], [2395, 2395], [2396, 2396], [2397, 2397], [2398, 2398], [2399, 2399], [2400, 2400], [2401, 2401], [2402, 2402], [2403, 2403], [2404, 2404], [2405, 2405], [2406, 2406], [2407, 2407], [2408, 2408], [2409, 2409], [2410, 2410], [2411, 2411]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "key_warnings", "lineno_map": [[2420, 2420], [2421, 2421], [2423, 2423], [2425, 2425], [2427, 2427], [2428, 2428], [2435, 2435], [2436, 2436], [2438, 2438], [2439, 2439], [2441, 2441], [2442, 2442], [2443, 2443], [2445, 2445], [2446, 2446], [2447, 2447], [2448, 2448], [2450, 2450], [2455, 2455], [2456, 2456], [2457, 2457], [2460, 2460], [2461, 2461], [2462, 2462], [2463, 2463], [2464, 2464], [2465, 2465], [2466, 2466], [2472, 2472], [2474, 2474], [2475, 2475], [2476, 2476], [2477, 2477], [2478, 2478], [2479, 2479], [2484, 2484], [2485, 2485], [2486, 2486], [2487, 2487], [2488, 2488], [2489, 2489], [2490, 2490], [2491, 2491], [2492, 2492], [2493, 2493], [2494, 2494], [2495, 2495], [2496, 2496], [2501, 2501], [2502, 2502], [2504, 2504], [2505, 2505], [2506, 2506], [2509, 2509], [2510, 2510], [2511, 2511], [2514, 2514], [2516, 2516], [2517, 2517]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "keycompare", "lineno_map": [[2526, 2526], [2530, 2530], [2531, 2531], [2532, 2532], [2533, 2533], [2539, 2539], [2540, 2540], [2543, 2543], [2544, 2544], [2547, 2547], [2548, 2548], [2550, 2550], [2551, 2551], [2563, 2563], [2572, 2572], [2573, 2573], [2574, 2574], [2576, 2576], [2577, 2577], [2581, 2581], [2582, 2582], [2583, 2583], [2584, 2584], [2585, 2585], [2586, 2586], [2588, 2588], [2589, 2589], [2590, 2590], [2591, 2591], [2592, 2592], [2593, 2593], [2598, 2598], [2599, 2599], [2602, 2602], [2603, 2603], [2604, 2604], [2605, 2605], [2606, 2606], [2607, 2607], [2608, 2608], [2609, 2609], [2610, 2610], [2611, 2611], [2612, 2612], [2613, 2613], [2618, 2618], [2619, 2619], [2620, 2620], [2621, 2621], [2623, 2623], [2626, 2626], [2627, 2627], [2630, 2630], [2631, 2631], [2634, 2634], [2658, 2658], [2659, 2659], [2662, 2662], [2664, 2664], [2665, 2665], [2666, 2666], [2670, 2670], [2672, 2672], [2674, 2674], [2675, 2675], [2676, 2676], [2682, 2682], [2683, 2683], [2686, 2686], [2689, 2689], [2692, 2692], [2693, 2693], [2697, 2697], [2698, 2698], [2700, 2700], [2702, 2702], [2703, 2703], [2706, 2706], [2707, 2707], [2709, 2709], [2710, 2710], [2711, 2711], [2712, 2712], [2720, 2720]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "compare", "lineno_map": [[2737, 2737], [2739, 2739], [2740, 2740], [2746, 2746], [2748, 2748], [2749, 2749], [2750, 2750], [2751, 2751], [2752, 2752], [2758, 2758], [2760, 2760], [2761, 2761]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "write_line", "lineno_map": [[2774, 2774], [2775, 2775], [2776, 2776], [2778, 2778], [2781, 2781], [2783, 2783], [2785, 2785], [2786, 2786], [2787, 2787], [2788, 2788], [2789, 2789], [2790, 2790], [2791, 2791], [2794, 2794], [2798, 2798], [2799, 2799], [2800, 2800], [2801, 2801]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "check", "lineno_map": [[2813, 2813], [2816, 2816], [2817, 2817], [2818, 2818], [2819, 2819], [2820, 2820], [2822, 2822], [2824, 2824], [2826, 2826], [2828, 2828], [2829, 2829], [2833, 2833], [2837, 2837], [2839, 2839], [2840, 2840], [2841, 2841], [2843, 2843], [2846, 2846], [2849, 2849], [2855, 2855], [2856, 2856], [2859, 2859], [2862, 2862], [2866, 2866], [2867, 2867], [2869, 2869], [2873, 2873], [2875, 2875], [2876, 2876], [2878, 2878], [2879, 2879], [2880, 2880], [2882, 2882], [2883, 2883], [2887, 2887], [2888, 2888], [2889, 2889]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "open_input_files", "lineno_map": [[2901, 2901], [2905, 2905], [2907, 2907], [2908, 2908], [2909, 2909], [2910, 2910]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "mergefps", "lineno_map": [[2929, 2929], [2932, 2932], [2934, 2934], [2935, 2935], [2937, 2937], [2939, 2939], [2946, 2946], [2947, 2947], [2950, 2950], [2952, 2952], [2953, 2953], [2954, 2954], [2956, 2956], [2957, 2957], [2958, 2958], [2959, 2959], [2964, 2964], [2965, 2965], [2967, 2967], [2968, 2968], [2970, 2970], [2971, 2971], [2972, 2972], [2974, 2974], [2975, 2975], [2983, 2983], [2984, 2984], [2985, 2985], [2986, 2986], [2987, 2987], [2990, 2990], [2992, 2992], [2996, 2996], [2998, 2998], [3000, 3000], [3001, 3001], [3003, 3003], [3005, 3005], [3006, 3006], [3009, 3009], [3011, 3011], [3014, 3014], [3016, 3016], [3017, 3017], [3019, 3019], [3020, 3020], [3021, 3021], [3023, 3023], [3024, 3024], [3025, 3025], [3026, 3026], [3031, 3031], [3034, 3034], [3035, 3035], [3038, 3038], [3040, 3040], [3041, 3041], [3042, 3042], [3047, 3047], [3048, 3048], [3049, 3049], [3050, 3050], [3051, 3051], [3052, 3052], [3054, 3054], [3055, 3055], [3057, 3057], [3058, 3058], [3060, 3060], [3061, 3061], [3062, 3062], [3063, 3063], [3064, 3064], [3066, 3066], [3067, 3067], [3068, 3068], [3077, 3077], [3078, 3078], [3079, 3079], [3080, 3080], [3083, 3083], [3085, 3085], [3086, 3086], [3087, 3087], [3089, 3089], [3090, 3090], [3093, 3093], [3094, 3094], [3095, 3095], [3096, 3096], [3100, 3100], [3102, 3102], [3103, 3103], [3106, 3106], [3107, 3107], [3108, 3108], [3109, 3109], [3110, 3110], [3111, 3111]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "mergefiles", "lineno_map": [[3129, 3129], [3130, 3130], [3131, 3131], [3132, 3132]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "mergelines", "lineno_map": [[3146, 3146], [3147, 3147], [3148, 3148], [3151, 3151], [3153, 3153], [3154, 3154], [3163, 3163], [3164, 3164], [3167, 3167], [3168, 3168]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "sequential_sort", "lineno_map": [[3193, 3193], [3198, 3198], [3199, 3199], [3201, 3201], [3202, 3202], [3204, 3204], [3206, 3206], [3207, 3207], [3208, 3208], [3213, 3213], [3214, 3214], [3215, 3215], [3216, 3216], [3218, 3218], [3219, 3219], [3220, 3220], [3221, 3221], [3222, 3222], [3226, 3226], [3228, 3228], [3229, 3229], [3233, 3233], [3234, 3234], [3236, 3236]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "merge_tree_init", "lineno_map": [[3250, 3250], [3252, 3252], [3253, 3253], [3254, 3254], [3255, 3255], [3256, 3256], [3257, 3257], [3258, 3258], [3259, 3259], [3261, 3261]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "merge_tree_destroy", "lineno_map": [[3269, 3269], [3270, 3270], [3272, 3272], [3274, 3274], [3275, 3275], [3278, 3278]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "init_node", "lineno_map": [[3294, 3294], [3295, 3295], [3296, 3296], [3297, 3297], [3298, 3298], [3299, 3299], [3301, 3301], [3302, 3302], [3303, 3303], [3304, 3304], [3305, 3305], [3306, 3306], [3307, 3307], [3308, 3308], [3309, 3309], [3310, 3310], [3312, 3312], [3314, 3314], [3315, 3315], [3316, 3316], [3317, 3317], [3319, 3319], [3320, 3320], [3325, 3325], [3326, 3326]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "compare_nodes", "lineno_map": [[3337, 3337], [3338, 3338], [3339, 3339]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "lock_node", "lineno_map": [[3349, 3349]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "unlock_node", "lineno_map": [[3357, 3357]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "queue_destroy", "lineno_map": [[3365, 3365], [3366, 3366], [3367, 3367]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "queue_init", "lineno_map": [[3379, 3379], [3380, 3380], [3381, 3381]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "queue_insert", "lineno_map": [[3390, 3390], [3391, 3391], [3392, 3392], [3393, 3393], [3394, 3394]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "queue_pop", "lineno_map": [[3403, 3403], [3404, 3404], [3405, 3405], [3406, 3406], [3407, 3407], [3408, 3408]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "write_unique", "lineno_map": [[3422, 3422], [3424, 3424], [3426, 3426], [3429, 3429]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "mergelines_node", "lineno_map": [[3443, 3443], [3444, 3444], [3445, 3445], [3449, 3449], [3452, 3452], [3453, 3453], [3454, 3454], [3455, 3455], [3457, 3457], [3459, 3459], [3460, 3460], [3462, 3462], [3463, 3463], [3464, 3464], [3465, 3465], [3466, 3466], [3467, 3467], [3468, 3468], [3473, 3473], [3475, 3475], [3476, 3476], [3478, 3478], [3481, 3481], [3482, 3482], [3484, 3484], [3486, 3486], [3487, 3487], [3489, 3489], [3491, 3491], [3492, 3492], [3497, 3497], [3498, 3498], [3499, 3499], [3500, 3500]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "queue_check_insert", "lineno_map": [[3510, 3510], [3512, 3512], [3513, 3513], [3514, 3514], [3515, 3515]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "queue_check_insert_parent", "lineno_map": [[3525, 3525], [3527, 3527], [3528, 3528], [3529, 3529], [3531, 3531], [3535, 3535]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "merge_loop", "lineno_map": [[3551, 3551], [3553, 3553], [3555, 3555], [3557, 3557], [3560, 3560], [3561, 3561], [3562, 3562], [3564, 3564]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "sortlines_thread", "lineno_map": [[3606, 3606], [3607, 3607]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "sortlines", "lineno_map": [[3642, 3642], [3645, 3645], [3646, 3646], [3648, 3648], [3649, 3649], [3651, 3651], [3652, 3652], [3654, 3654], [3656, 3656], [3662, 3662], [3663, 3663], [3664, 3664], [3665, 3665], [3666, 3666], [3667, 3667], [3668, 3668], [3671, 3671], [3672, 3672], [3673, 3673], [3674, 3674], [3676, 3676], [3677, 3677]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "avoid_trashing_input", "lineno_map": [[3702, 3702], [3704, 3704], [3706, 3706], [3708, 3708], [3712, 3712], [3713, 3713], [3716, 3716], [3718, 3718], [3720, 3720], [3723, 3723], [3724, 3724], [3725, 3725], [3726, 3726], [3727, 3727], [3730, 3730], [3732, 3732], [3735, 3735], [3736, 3736], [3739, 3739], [3740, 3740]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "check_inputs", "lineno_map": [[3757, 3757], [3759, 3759], [3760, 3760], [3762, 3762], [3763, 3763]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "check_output", "lineno_map": [[3774, 3774], [3776, 3776], [3777, 3777], [3778, 3778], [3779, 3779], [3780, 3780]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "merge", "lineno_map": [[3793, 3793], [3811, 3811], [3814, 3814], [3815, 3815], [3816, 3816], [3817, 3817], [3818, 3818], [3819, 3819], [3820, 3820], [3823, 3823], [3824, 3824], [3826, 3826], [3831, 3831], [3833, 3833], [3834, 3834], [3835, 3835], [3836, 3836], [3837, 3837], [3838, 3838], [3839, 3839], [3844, 3844], [3845, 3845], [3846, 3846], [3849, 3849], [3859, 3859], [3861, 3861], [3863, 3863], [3864, 3864], [3866, 3866], [3869, 3869], [3870, 3870], [3872, 3872], [3873, 3873], [3884, 3884], [3885, 3885], [3886, 3886], [3888, 3888], [3891, 3891], [3893, 3893], [3894, 3894], [3895, 3895], [3897, 3897], [3898, 3898], [3899, 3899]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "sort", "lineno_map": [[3911, 3911], [3912, 3912], [3914, 3914], [3916, 3916], [3919, 3919], [3920, 3920], [3924, 3924], [3927, 3927], [3928, 3928], [3929, 3929], [3931, 3931], [3932, 3932], [3934, 3934], [3937, 3937], [3939, 3939], [3940, 3940], [3942, 3942], [3943, 3943], [3944, 3944], [3946, 3946], [3950, 3950], [3951, 3951], [3952, 3952], [3957, 3957], [3961, 3961], [3962, 3962], [3963, 3963], [3965, 3965], [3966, 3966], [3967, 3967], [3968, 3968], [3972, 3972], [3973, 3973], [3975, 3975], [3978, 3978], [3979, 3979], [3980, 3980], [3982, 3982], [3991, 3991], [3993, 3993], [3995, 3995], [3998, 3998], [4002, 4002], [4004, 4004], [4006, 4006], [4007, 4007], [4008, 4008], [4010, 4010], [4011, 4011], [4012, 4012], [4014, 4014], [4015, 4015], [4018, 4018]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "insertkey", "lineno_map": [[4027, 4027], [4029, 4029], [4031, 4031], [4032, 4032]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "check_ordering_compatibility", "lineno_map": [[4062, 4062], [4063, 4063], [4064, 4064], [4069, 4069], [4070, 4070], [4071, 4071]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "parse_field_count", "lineno_map": [[4087, 4087], [4091, 4091], [4092, 4092], [4097, 4097], [4101, 4101], [4102, 4102]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "sighandler", "lineno_map": [[4118, 4118], [4120, 4120], [4121, 4121]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "set_ordering", "lineno_map": [[4132, 4132], [4134, 4134], [4137, 4137], [4138, 4138], [4139, 4139], [4140, 4140], [4143, 4143], [4146, 4146], [4149, 4149], [4152, 4152], [4157, 4157], [4158, 4158], [4161, 4161], [4164, 4164], [4167, 4167], [4170, 4170], [4173, 4173], [4178, 4178]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "key_init", "lineno_map": [[4188, 4188], [4189, 4189]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "main", "lineno_map": [[4199, 4199], [4201, 4201], [4202, 4202], [4203, 4203], [4204, 4204], [4205, 4205], [4206, 4206], [4207, 4207], [4208, 4208], [4209, 4209], [4210, 4210], [4212, 4212], [4214, 4214], [4218, 4218], [4219, 4219], [4220, 4220], [4221, 4221], [4223, 4223], [4225, 4225], [4227, 4227], [4232, 4232], [4237, 4237], [4238, 4238], [4239, 4239], [4242, 4242], [4243, 4243], [4244, 4244], [4247, 4247], [4248, 4248], [4277, 4277], [4278, 4278], [4280, 4280], [4281, 4281], [4282, 4282], [4285, 4285], [4286, 4286], [4287, 4287], [4289, 4289], [4290, 4290], [4291, 4291], [4301, 4301], [4304, 4304], [4306, 4306], [4307, 4307], [4309, 4309], [4317, 4317], [4319, 4319], [4320, 4320], [4321, 4321], [4322, 4322], [4323, 4323], [4324, 4324], [4325, 4325], [4326, 4326], [4330, 4330], [4332, 4332], [4334, 4334], [4337, 4337], [4338, 4338], [4340, 4340], [4341, 4341], [4342, 4342], [4343, 4343], [4347, 4347], [4348, 4348], [4349, 4349], [4350, 4350], [4351, 4351], [4352, 4352], [4353, 4353], [4354, 4354], [4357, 4357], [4359, 4359], [4360, 4360], [4365, 4365], [4366, 4366], [4367, 4367], [4369, 4369], [4377, 4377], [4379, 4379], [4380, 4380], [4383, 4383], [4384, 4384], [4388, 4388], [4389, 4389], [4393, 4393], [4408, 4408], [4409, 4409], [4410, 4410], [4415, 4415], [4416, 4416], [4417, 4417], [4421, 4421], [4422, 4422], [4423, 4423], [4427, 4427], [4428, 4428], [4429, 4429], [4433, 4433], [4437, 4437], [4441, 4441], [4444, 4444], [4446, 4446], [4449, 4449], [4451, 4451], [4453, 4453], [4455, 4455], [4458, 4458], [4461, 4461], [4462, 4462], [4463, 4463], [4464, 4464], [4466, 4466], [4467, 4467], [4472, 4472], [4474, 4474], [4477, 4477], [4479, 4479], [4481, 4481], [4484, 4484], [4486, 4486], [4487, 4487], [4488, 4488], [4492, 4492], [4496, 4496], [4500, 4500], [4501, 4501], [4502, 4502], [4506, 4506], [4507, 4507], [4508, 4508], [4512, 4512], [4516, 4516], [4521, 4521], [4522, 4522], [4523, 4523], [4524, 4524], [4526, 4526], [4527, 4527], [4534, 4534], [4538, 4538], [4539, 4539], [4540, 4540], [4545, 4545], [4549, 4549], [4553, 4553], [4567, 4567], [4570, 4570], [4572, 4572], [4577, 4577], [4580, 4580], [4582, 4582], [4585, 4585], [4589, 4589], [4593, 4593], [4595, 4595], [4596, 4596], [4598, 4598], [4601, 4601], [4603, 4603], [4605, 4605], [4606, 4606], [4608, 4608], [4610, 4610], [4612, 4612], [4613, 4613], [4614, 4614], [4615, 4615], [4617, 4617], [4618, 4618], [4621, 4621], [4626, 4626], [4627, 4627], [4634, 4634], [4639, 4639], [4641, 4641], [4643, 4643], [4644, 4644], [4645, 4645], [4646, 4646], [4647, 4647], [4648, 4648], [4649, 4649], [4650, 4650], [4651, 4651], [4652, 4652], [4653, 4653], [4656, 4656], [4659, 4659], [4661, 4661], [4662, 4662], [4663, 4663], [4666, 4666], [4668, 4668], [4670, 4670], [4673, 4673], [4674, 4674], [4682, 4682], [4683, 4683], [4684, 4684], [4685, 4685], [4686, 4686], [4687, 4687], [4688, 4688], [4690, 4690], [4692, 4692], [4695, 4695], [4697, 4697], [4698, 4698], [4700, 4700], [4702, 4702], [4703, 4703], [4706, 4706], [4708, 4708], [4709, 4709], [4710, 4710], [4711, 4711], [4716, 4716], [4717, 4717], [4719, 4719], [4721, 4721], [4722, 4722], [4725, 4725], [4728, 4728], [4729, 4729], [4738, 4738], [4741, 4741], [4743, 4743], [4745, 4745], [4747, 4747], [4748, 4748], [4750, 4750], [4755, 4755], [4757, 4757], [4758, 4758], [4762, 4762], [4763, 4763], [4765, 4765], [4775, 4775], [4776, 4776]], "source_code_file": "src/sort.c", "binary_file1": "sort.json", "binary_file2": "sort.json"}
{"fname": "to_uchar_1", "lineno_map": [[156, 156]], "source_code_file": "src/set-fields.c", "binary_file1": "cut.json", "binary_file2": "cut.json"}
{"fname": "add_range_pair", "lineno_map": [[50, 50], [51, 51], [52, 52], [53, 53], [54, 54]], "source_code_file": "src/set-fields.c", "binary_file1": "cut.json", "binary_file2": "cut.json"}
{"fname": "compare_ranges", "lineno_map": [[63, 63], [64, 64]], "source_code_file": "src/set-fields.c", "binary_file1": "cut.json", "binary_file2": "cut.json"}
{"fname": "complement_rp", "lineno_map": [[74, 74], [75, 75], [77, 77], [78, 78], [79, 79], [81, 81], [82, 82], [84, 84], [86, 86], [87, 87], [89, 89], [92, 92], [93, 93], [95, 95]], "source_code_file": "src/set-fields.c", "binary_file1": "cut.json", "binary_file2": "cut.json"}
{"fname": "set_fields", "lineno_map": [[140, 140], [141, 141], [142, 142], [143, 143], [144, 144], [146, 146], [151, 151], [153, 153], [154, 154], [155, 155], [156, 156], [161, 161], [163, 163], [165, 165], [166, 166], [170, 170], [171, 171], [173, 173], [174, 174], [178, 178], [179, 179], [181, 181], [182, 182], [184, 184], [186, 186], [188, 188], [190, 190], [193, 193], [194, 194], [196, 196], [201, 201], [204, 204], [209, 209], [210, 210], [212, 212], [214, 214], [219, 219], [220, 220], [224, 224], [225, 225], [228, 228], [231, 231], [232, 232], [233, 233], [235, 235], [240, 240], [241, 241], [242, 242], [244, 244], [245, 245], [247, 247], [250, 250], [251, 251], [256, 256], [257, 257], [258, 258], [262, 262], [263, 263], [266, 266], [270, 270], [274, 274], [278, 278], [279, 279], [283, 283], [286, 286], [288, 288], [290, 290], [292, 292], [293, 293], [294, 294], [295, 295], [302, 302], [303, 303], [308, 308], [309, 309], [310, 310]], "source_code_file": "src/set-fields.c", "binary_file1": "cut.json", "binary_file2": "cut.json"}
{"fname": "reset_fields", "lineno_map": [[316, 316], [317, 317], [318, 318], [319, 319]], "source_code_file": "src/set-fields.c", "binary_file1": "cut.json", "binary_file2": "cut.json"}
{"fname": "prog_fprintf", "lineno_map": [[31, 31], [32, 32], [33, 33], [34, 34], [36, 36]], "source_code_file": "src/prog-fprintf.c", "binary_file1": "mkdir.json", "binary_file2": "mkdir.json"}
{"fname": "initialize_exit_failure", "lineno_map": [[100, 100], [101, 101], [103, 103]], "source_code_file": "src/nice.c", "binary_file1": "nice.json", "binary_file2": "nice.json"}
{"fname": "usage", "lineno_map": [[69, 69], [70, 70], [73, 73], [74, 74], [81, 81], [83, 83], [86, 86], [87, 87], [88, 88], [89, 89], [91, 91]], "source_code_file": "src/nice.c", "binary_file1": "nice.json", "binary_file2": "nice.json"}
{"fname": "main", "lineno_map": [[104, 104], [105, 105], [110, 110], [111, 111], [112, 112], [113, 113], [115, 115], [116, 116], [118, 118], [120, 120], [122, 122], [124, 124], [125, 125], [130, 130], [131, 131], [134, 134], [137, 137], [139, 139], [140, 140], [142, 142], [145, 145], [151, 151], [153, 153], [156, 156], [160, 160], [165, 165], [172, 172], [173, 173], [175, 175], [178, 178], [180, 180], [182, 182], [183, 183], [186, 186], [187, 187], [188, 188], [189, 189], [190, 190], [194, 194], [198, 198], [199, 199], [200, 200], [201, 201], [203, 203], [205, 205], [206, 206], [212, 212], [216, 216], [218, 218], [219, 219]], "source_code_file": "src/nice.c", "binary_file1": "nice.json", "binary_file2": "nice.json"}
{"fname": "initialize_exit_failure", "lineno_map": [[100, 100], [101, 101], [102, 102], [103, 103]], "source_code_file": "src/timeout.c", "binary_file1": "timeout.json", "binary_file2": "timeout.json"}
{"fname": "settimeout", "lineno_map": [[125, 125], [126, 126], [128, 128], [130, 130], [134, 134], [135, 135], [136, 136], [139, 139], [140, 140], [144, 144], [145, 145], [148, 148], [149, 149], [151, 151]], "source_code_file": "src/timeout.c", "binary_file1": "timeout.json", "binary_file2": "timeout.json"}
{"fname": "send_sig", "lineno_map": [[166, 166], [167, 167]], "source_code_file": "src/timeout.c", "binary_file1": "timeout.json", "binary_file2": "timeout.json"}
{"fname": "cleanup", "lineno_map": [[182, 182], [184, 184], [185, 185], [187, 187], [189, 189], [191, 191], [193, 193], [194, 194], [195, 195], [196, 196], [202, 202], [205, 205], [206, 206], [207, 207], [210, 210], [214, 214], [216, 216], [217, 217], [219, 219], [220, 220], [225, 225]], "source_code_file": "src/timeout.c", "binary_file1": "timeout.json", "binary_file2": "timeout.json"}
{"fname": "usage", "lineno_map": [[231, 231], [232, 232], [235, 235], [239, 239], [243, 243], [245, 245], [260, 260], [263, 263], [264, 264], [266, 266], [271, 271], [278, 278], [280, 280]], "source_code_file": "src/timeout.c", "binary_file1": "timeout.json", "binary_file2": "timeout.json"}
{"fname": "apply_time_suffix", "lineno_map": [[294, 294], [298, 298], [301, 301], [304, 304], [307, 307], [313, 313]], "source_code_file": "src/timeout.c", "binary_file1": "timeout.json", "binary_file2": "timeout.json"}
{"fname": "parse_duration", "lineno_map": [[324, 324], [326, 326], [328, 328], [330, 330], [332, 332], [333, 333]], "source_code_file": "src/timeout.c", "binary_file1": "timeout.json", "binary_file2": "timeout.json"}
{"fname": "unblock_signal", "lineno_map": [[343, 343], [344, 344], [345, 345], [346, 346]], "source_code_file": "src/timeout.c", "binary_file1": "timeout.json", "binary_file2": "timeout.json"}
{"fname": "install_sigchld", "lineno_map": [[353, 353], [354, 354], [355, 355], [358, 358], [362, 362]], "source_code_file": "src/timeout.c", "binary_file1": "timeout.json", "binary_file2": "timeout.json"}
{"fname": "install_cleanup", "lineno_map": [[369, 369], [370, 370], [371, 371], [374, 374], [375, 375], [376, 376], [377, 377], [378, 378], [379, 379]], "source_code_file": "src/timeout.c", "binary_file1": "timeout.json", "binary_file2": "timeout.json"}
{"fname": "block_cleanup_and_chld", "lineno_map": [[391, 391], [393, 393], [394, 394], [395, 395], [396, 396], [397, 397], [398, 398], [400, 400], [402, 402], [403, 403]], "source_code_file": "src/timeout.c", "binary_file1": "timeout.json", "binary_file2": "timeout.json"}
{"fname": "disable_core_dumps", "lineno_map": [[412, 412], [425, 425]], "source_code_file": "src/timeout.c", "binary_file1": "timeout.json", "binary_file2": "timeout.json"}
{"fname": "main", "lineno_map": [[437, 437], [438, 438], [439, 439], [440, 440], [442, 442], [443, 443], [445, 445], [447, 447], [450, 450], [454, 454], [455, 455], [456, 456], [460, 460], [464, 464], [468, 468], [471, 471], [473, 473], [476, 476], [481, 481], [482, 482], [484, 484], [486, 486], [487, 487], [493, 493], [494, 494], [498, 498], [499, 499], [500, 500], [501, 501], [503, 503], [504, 504], [506, 506], [509, 509], [512, 512], [513, 513], [515, 515], [518, 518], [519, 519], [529, 529], [531, 531], [536, 536], [538, 538], [539, 539], [541, 541], [544, 544], [545, 545], [549, 549], [550, 550], [551, 551], [553, 553], [554, 554], [555, 555], [556, 556], [559, 559], [560, 560], [561, 561], [563, 563], [568, 568], [569, 569], [573, 573], [574, 574]], "source_code_file": "src/timeout.c", "binary_file1": "timeout.json", "binary_file2": "timeout.json"}
{"fname": "usage", "lineno_map": [[44, 44], [45, 45], [48, 48], [53, 53], [58, 58], [60, 60], [65, 65], [66, 66], [67, 67], [76, 76], [78, 78]], "source_code_file": "src/basename.c", "binary_file1": "basename.json", "binary_file2": "basename.json"}
{"fname": "remove_suffix", "lineno_map": [[90, 90], [91, 91], [93, 93], [94, 94], [96, 96], [97, 97]], "source_code_file": "src/basename.c", "binary_file1": "basename.json", "binary_file2": "basename.json"}
{"fname": "perform_basename", "lineno_map": [[106, 106], [107, 107], [115, 115], [116, 116], [118, 118], [119, 119], [120, 120]], "source_code_file": "src/basename.c", "binary_file1": "basename.json", "binary_file2": "basename.json"}
{"fname": "main", "lineno_map": [[126, 126], [127, 127], [128, 128], [131, 131], [132, 132], [133, 133], [134, 134], [136, 136], [140, 140], [142, 142], [145, 145], [148, 148], [153, 153], [157, 157], [160, 160], [161, 161], [164, 164], [168, 168], [170, 170], [171, 171], [174, 174], [176, 176], [177, 177], [180, 180], [182, 182], [183, 183], [186, 186], [187, 187]], "source_code_file": "src/basename.c", "binary_file1": "basename.json", "binary_file2": "basename.json"}
{"fname": "diagnose_leading_hyphen", "lineno_map": [[109, 109], [111, 111], [114, 114], [116, 116], [117, 117]], "source_code_file": "src/rm.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "usage", "lineno_map": [[129, 129], [130, 130], [133, 133], [134, 134], [140, 140], [147, 147], [152, 152], [158, 158], [163, 163], [164, 164], [165, 165], [170, 170], [179, 179], [185, 185], [187, 187]], "source_code_file": "src/rm.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "rm_option_init", "lineno_map": [[193, 193], [194, 194], [195, 195], [196, 196], [197, 197], [198, 198], [199, 199], [200, 200], [201, 201], [205, 205]], "source_code_file": "src/rm.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "main", "lineno_map": [[211, 211], [213, 213], [217, 217], [218, 218], [219, 219], [220, 220], [222, 222], [224, 224], [227, 227], [229, 229], [231, 231], [234, 234], [238, 238], [239, 239], [240, 240], [244, 244], [245, 245], [246, 246], [250, 250], [251, 251], [252, 252], [257, 257], [263, 263], [264, 264], [267, 267], [268, 268], [271, 271], [272, 272], [276, 276], [277, 277], [278, 278], [282, 282], [283, 283], [284, 284], [291, 291], [295, 295], [296, 296], [298, 298], [302, 302], [304, 304], [305, 305], [308, 308], [313, 313], [317, 317], [321, 321], [324, 324], [325, 325], [327, 327], [328, 328], [332, 332], [334, 334], [338, 338], [339, 339], [343, 343], [346, 346], [347, 347], [348, 348], [352, 352], [353, 353], [355, 355], [357, 357], [358, 358], [359, 359], [362, 362], [366, 366], [370, 370], [371, 371]], "source_code_file": "src/rm.c", "binary_file1": "rm.json", "binary_file2": "rm.json"}
{"fname": "collapse_escapes", "lineno_map": [[94, 94], [95, 95], [97, 97], [99, 99], [101, 101], [102, 102], [105, 105], [108, 108], [112, 112], [116, 116], [120, 120], [124, 124], [128, 128], [132, 132], [136, 136], [140, 140], [144, 144], [147, 147], [153, 153]], "source_code_file": "src/paste.c", "binary_file1": "paste.json", "binary_file2": "paste.json"}
{"fname": "xputchar", "lineno_map": [[171, 171], [172, 172]], "source_code_file": "src/paste.c", "binary_file1": "paste.json", "binary_file2": "paste.json"}
{"fname": "paste_parallel", "lineno_map": [[182, 182], [187, 187], [191, 191], [197, 197], [203, 203], [205, 205], [207, 207], [208, 208], [212, 212], [213, 213], [214, 214], [215, 215], [216, 216], [217, 217], [221, 221], [222, 222], [228, 228], [231, 231], [232, 232], [233, 233], [235, 235], [239, 239], [241, 241], [243, 243], [244, 244], [245, 245], [247, 247], [248, 248], [249, 249], [252, 252], [254, 254], [255, 255], [257, 257], [258, 258], [259, 259], [263, 263], [267, 267], [269, 269], [271, 271], [272, 272], [274, 274], [275, 275], [276, 276], [278, 278], [279, 279], [282, 282], [283, 283], [286, 286], [290, 290], [293, 293], [295, 295], [297, 297], [298, 298], [300, 300], [302, 302], [307, 307], [308, 308], [309, 309], [310, 310], [316, 316], [319, 319], [321, 321], [322, 322], [323, 323], [324, 324], [325, 325], [326, 326], [332, 332], [333, 333], [338, 338], [339, 339]], "source_code_file": "src/paste.c", "binary_file1": "paste.json", "binary_file2": "paste.json"}
{"fname": "paste_serial", "lineno_map": [[350, 350], [355, 355], [358, 358], [359, 359], [361, 361], [362, 362], [366, 366], [367, 367], [369, 369], [370, 370], [371, 371], [373, 373], [376, 376], [378, 378], [379, 379], [380, 380], [388, 388], [391, 391], [393, 393], [394, 394], [396, 396], [397, 397], [400, 400], [402, 402], [404, 404], [407, 407], [410, 410], [411, 411], [413, 413], [415, 415], [416, 416], [418, 418], [419, 419], [420, 420], [422, 422], [423, 423]], "source_code_file": "src/paste.c", "binary_file1": "paste.json", "binary_file2": "paste.json"}
{"fname": "usage", "lineno_map": [[432, 432], [433, 433], [436, 436], [440, 440], [445, 445], [446, 446], [448, 448], [452, 452], [455, 455], [456, 456], [458, 458], [460, 460]], "source_code_file": "src/paste.c", "binary_file1": "paste.json", "binary_file2": "paste.json"}
{"fname": "main", "lineno_map": [[467, 467], [470, 470], [471, 471], [472, 472], [473, 473], [475, 475], [477, 477], [478, 478], [480, 480], [482, 482], [486, 486], [490, 490], [494, 494], [497, 497], [499, 499], [502, 502], [506, 506], [507, 507], [509, 509], [510, 510], [513, 513], [517, 517], [522, 522], [523, 523], [525, 525], [527, 527], [528, 528]], "source_code_file": "src/paste.c", "binary_file1": "paste.json", "binary_file2": "paste.json"}
{"fname": "usage", "lineno_map": [[74, 74], [75, 75], [78, 78], [82, 82], [86, 86], [87, 87], [89, 89], [94, 94], [95, 95], [96, 96], [97, 97], [99, 99]], "source_code_file": "src/unexpand.c", "binary_file1": "unexpand.json", "binary_file2": "unexpand.json"}
{"fname": "unexpand", "lineno_map": [[109, 109], [116, 116], [122, 122], [130, 130], [137, 137], [140, 140], [143, 143], [146, 146], [151, 151], [154, 154], [161, 161], [162, 162], [164, 164], [166, 166], [168, 168], [172, 172], [175, 175], [176, 176], [178, 178], [180, 180], [181, 181], [183, 183], [185, 185], [187, 187], [188, 188], [192, 192], [194, 194], [198, 198], [199, 199], [200, 200], [201, 201], [206, 206], [211, 211], [214, 214], [218, 218], [219, 219], [220, 220], [224, 224], [225, 225], [226, 226], [229, 229], [231, 231], [232, 232], [233, 233], [234, 234], [235, 235], [236, 236], [239, 239], [240, 240], [243, 243], [245, 245], [249, 249], [250, 250], [252, 252]], "source_code_file": "src/unexpand.c", "binary_file1": "unexpand.json", "binary_file2": "unexpand.json"}
{"fname": "main", "lineno_map": [[259, 259], [265, 265], [268, 268], [269, 269], [270, 270], [271, 271], [273, 273], [275, 275], [278, 278], [281, 281], [283, 283], [286, 286], [287, 287], [290, 290], [293, 293], [294, 294], [295, 295], [297, 297], [298, 298], [300, 300], [302, 302], [303, 303], [305, 305], [306, 306], [311, 311], [312, 312], [314, 314], [315, 315], [317, 317], [319, 319], [321, 321], [323, 323]], "source_code_file": "src/unexpand.c", "binary_file1": "unexpand.json", "binary_file2": "unexpand.json"}
{"fname": "add_tab_stop", "lineno_map": [[80, 80], [81, 81], [83, 83], [84, 84], [85, 85], [87, 87], [91, 91]], "source_code_file": "src/expand-common.c", "binary_file1": "expand.json", "binary_file2": "expand.json"}
{"fname": "set_extend_size", "lineno_map": [[98, 98], [100, 100], [102, 102], [103, 103], [105, 105], [107, 107]], "source_code_file": "src/expand-common.c", "binary_file1": "expand.json", "binary_file2": "expand.json"}
{"fname": "set_increment_size", "lineno_map": [[115, 115], [117, 117], [119, 119], [120, 120], [122, 122], [124, 124]], "source_code_file": "src/expand-common.c", "binary_file1": "expand.json", "binary_file2": "expand.json"}
{"fname": "parse_tab_stops", "lineno_map": [[134, 134], [135, 135], [136, 136], [137, 137], [138, 138], [139, 139], [141, 141], [143, 143], [145, 145], [147, 147], [149, 149], [151, 151], [155, 155], [157, 157], [159, 159], [164, 164], [166, 166], [168, 168], [170, 170], [172, 172], [174, 174], [176, 176], [177, 177], [179, 179], [181, 181], [183, 183], [185, 185], [187, 187], [188, 188], [190, 190], [192, 192], [194, 194], [195, 195], [196, 196], [200, 200], [202, 202], [203, 203], [204, 204], [205, 205], [206, 206], [207, 207], [212, 212], [214, 214], [219, 219], [221, 221], [222, 222], [223, 223], [224, 224], [226, 226], [229, 229], [230, 230]], "source_code_file": "src/expand-common.c", "binary_file1": "expand.json", "binary_file2": "expand.json"}
{"fname": "validate_tab_stops", "lineno_map": [[239, 239], [241, 241], [243, 243], [244, 244], [245, 245], [246, 246], [247, 247], [250, 250], [251, 251]], "source_code_file": "src/expand-common.c", "binary_file1": "expand.json", "binary_file2": "expand.json"}
{"fname": "finalize_tab_stops", "lineno_map": [[265, 265], [267, 267], [268, 268], [269, 269], [270, 270], [271, 271], [272, 272], [274, 274]], "source_code_file": "src/expand-common.c", "binary_file1": "expand.json", "binary_file2": "expand.json"}
{"fname": "get_next_tab_column", "lineno_map": [[282, 282], [285, 285], [290, 290], [292, 292], [293, 293], [298, 298], [302, 302], [304, 304], [309, 309]], "source_code_file": "src/expand-common.c", "binary_file1": "expand.json", "binary_file2": "expand.json"}
{"fname": "set_file_list", "lineno_map": [[320, 320], [322, 322], [323, 323], [325, 325]], "source_code_file": "src/expand-common.c", "binary_file1": "expand.json", "binary_file2": "expand.json"}
{"fname": "next_file", "lineno_map": [[339, 339], [341, 341], [342, 342], [344, 344], [345, 345], [347, 347], [348, 348], [349, 349], [351, 351], [352, 352], [356, 356], [358, 358], [360, 360], [361, 361], [364, 364], [365, 365], [367, 367], [368, 368], [371, 371], [372, 372]], "source_code_file": "src/expand-common.c", "binary_file1": "expand.json", "binary_file2": "expand.json"}
{"fname": "cleanup_file_list_stdin", "lineno_map": [[381, 381], [382, 382]], "source_code_file": "src/expand-common.c", "binary_file1": "expand.json", "binary_file2": "expand.json"}
{"fname": "emit_tab_list_info", "lineno_map": [[390, 390], [393, 393]], "source_code_file": "src/expand-common.c", "binary_file1": "expand.json", "binary_file2": "expand.json"}
{"fname": "initialize_exit_failure", "lineno_map": [[100, 100], [101, 101], [103, 103]], "source_code_file": "src/env.c", "binary_file1": "env.json", "binary_file2": "env.json"}
{"fname": "emit_mandatory_arg_note", "lineno_map": [[586, 586], [587, 587], [590, 590]], "source_code_file": "src/env.c", "binary_file1": "env.json", "binary_file2": "env.json"}
{"fname": "usage", "lineno_map": [[69, 69], [70, 70], [73, 73], [76, 76], [80, 80], [82, 82], [87, 87], [90, 90], [95, 95], [96, 96], [97, 97], [101, 101], [103, 103]], "source_code_file": "src/env.c", "binary_file1": "env.json", "binary_file2": "env.json"}
{"fname": "append_unset_var", "lineno_map": [[109, 109], [110, 110], [111, 111]], "source_code_file": "src/env.c", "binary_file1": "env.json", "binary_file2": "env.json"}
{"fname": "unset_envvars", "lineno_map": [[117, 117], [119, 119], [121, 121], [122, 122]], "source_code_file": "src/env.c", "binary_file1": "env.json", "binary_file2": "env.json"}
{"fname": "valid_escape_sequence", "lineno_map": [[136, 136], [137, 137]], "source_code_file": "src/env.c", "binary_file1": "env.json", "binary_file2": "env.json"}
{"fname": "escape_char", "lineno_map": [[143, 143], [146, 146], [147, 147], [148, 148], [149, 149], [150, 150], [151, 151]], "source_code_file": "src/env.c", "binary_file1": "env.json", "binary_file2": "env.json"}
{"fname": "scan_varname", "lineno_map": [[162, 162], [163, 163], [165, 165], [166, 166], [167, 167], [168, 168]], "source_code_file": "src/env.c", "binary_file1": "env.json", "binary_file2": "env.json"}
{"fname": "extract_varname", "lineno_map": [[186, 186], [187, 187], [191, 191], [193, 193], [195, 195], [196, 196], [199, 199], [200, 200]], "source_code_file": "src/env.c", "binary_file1": "env.json", "binary_file2": "env.json"}
{"fname": "validate_split_str", "lineno_map": [[219, 219], [221, 221], [223, 223], [224, 224], [226, 226], [228, 228], [230, 230], [232, 232], [236, 236], [237, 237], [238, 238], [241, 241], [244, 244], [245, 245], [249, 249], [250, 250], [254, 254], [255, 255], [258, 258], [259, 259], [262, 262], [263, 263], [265, 265], [266, 266], [268, 268], [273, 273], [276, 276], [277, 277], [280, 280], [281, 281], [284, 284], [287, 287], [288, 288], [290, 290], [291, 291]], "source_code_file": "src/env.c", "binary_file1": "env.json", "binary_file2": "env.json"}
{"fname": "build_argv", "lineno_map": [[316, 316], [320, 320], [321, 321], [336, 336], [338, 338], [341, 341], [345, 345], [348, 348], [349, 349], [350, 350], [355, 355], [357, 357], [359, 359], [362, 362], [364, 364], [365, 365], [366, 366], [367, 367], [370, 370], [372, 372], [373, 373], [374, 374], [375, 375], [380, 380], [382, 382], [383, 383], [384, 384], [387, 387], [393, 393], [397, 397], [398, 398], [399, 399], [403, 403], [405, 405], [407, 407], [408, 408], [409, 409], [412, 412], [414, 414], [417, 417], [422, 422], [428, 428], [429, 429], [430, 430], [432, 432], [433, 433], [434, 434], [437, 437], [439, 439], [440, 440], [445, 445], [446, 446], [447, 447], [451, 451], [452, 452]], "source_code_file": "src/env.c", "binary_file1": "env.json", "binary_file2": "env.json"}
{"fname": "parse_split_string", "lineno_map": [[484, 484], [485, 485], [486, 486], [489, 489], [492, 492], [495, 495], [498, 498], [500, 500], [501, 501], [502, 502], [503, 503], [508, 508], [509, 509], [513, 513], [514, 514], [515, 515], [518, 518], [519, 519], [520, 520], [523, 523], [524, 524], [525, 525]], "source_code_file": "src/env.c", "binary_file1": "env.json", "binary_file2": "env.json"}
{"fname": "main", "lineno_map": [[532, 532], [533, 533], [534, 534], [537, 537], [538, 538], [539, 539], [540, 540], [542, 542], [543, 543], [545, 545], [547, 547], [550, 550], [553, 553], [556, 556], [559, 559], [562, 562], [565, 565], [573, 573], [574, 574], [575, 575], [577, 577], [578, 578], [580, 580], [584, 584], [586, 586], [587, 587], [590, 590], [592, 592], [594, 594], [597, 597], [600, 600], [602, 602], [604, 604], [606, 606], [607, 607], [610, 610], [613, 613], [615, 615], [617, 617], [618, 618], [621, 621], [623, 623], [624, 624], [627, 627], [630, 630], [631, 631], [632, 632], [636, 636], [638, 638], [640, 640], [641, 641], [645, 645], [647, 647], [648, 648], [649, 649], [652, 652], [654, 654], [655, 655], [657, 657], [658, 658]], "source_code_file": "src/env.c", "binary_file1": "env.json", "binary_file2": "env.json"}
{"fname": "initialize_exit_failure", "lineno_map": [[100, 100], [101, 101], [102, 102], [103, 103]], "source_code_file": "src/expr.c", "binary_file1": "expr.json", "binary_file2": "expr.json"}
{"fname": "mpz_clear", "lineno_map": [[58, 58]], "source_code_file": "src/expr.c", "binary_file1": "expr.json", "binary_file2": "expr.json"}
{"fname": "mpz_init_set_ui", "lineno_map": [[59, 59]], "source_code_file": "src/expr.c", "binary_file1": "expr.json", "binary_file2": "expr.json"}
{"fname": "mpz_add", "lineno_map": [[68, 68], [69, 69], [70, 70], [71, 71], [72, 72], [73, 73]], "source_code_file": "src/expr.c", "binary_file1": "expr.json", "binary_file2": "expr.json"}
{"fname": "mpz_sub", "lineno_map": [[78, 78], [79, 79], [80, 80], [81, 81], [82, 82], [83, 83]], "source_code_file": "src/expr.c", "binary_file1": "expr.json", "binary_file2": "expr.json"}
{"fname": "mpz_mul", "lineno_map": [[88, 88], [89, 89], [90, 90], [91, 91], [92, 92], [93, 93], [94, 94]], "source_code_file": "src/expr.c", "binary_file1": "expr.json", "binary_file2": "expr.json"}
{"fname": "mpz_tdiv_q", "lineno_map": [[99, 99], [100, 100], [103, 103], [104, 104], [105, 105]], "source_code_file": "src/expr.c", "binary_file1": "expr.json", "binary_file2": "expr.json"}
{"fname": "mpz_tdiv_r", "lineno_map": [[110, 110], [111, 111], [114, 114]], "source_code_file": "src/expr.c", "binary_file1": "expr.json", "binary_file2": "expr.json"}
{"fname": "mbs_logical_cspn", "lineno_map": [[217, 217], [219, 219], [223, 223], [227, 227], [229, 229], [230, 230], [232, 232], [239, 239], [240, 240], [241, 241], [242, 242], [254, 254]], "source_code_file": "src/expr.c", "binary_file1": "expr.json", "binary_file2": "expr.json"}
{"fname": "mbs_logical_substr", "lineno_map": [[271, 271], [272, 272], [274, 274], [278, 278], [280, 280], [283, 283], [284, 284], [292, 292], [295, 295], [296, 296], [297, 297], [298, 298], [301, 301], [302, 302], [305, 305], [306, 306], [309, 309]], "source_code_file": "src/expr.c", "binary_file1": "expr.json", "binary_file2": "expr.json"}
{"fname": "mbs_offset_to_chars", "lineno_map": [[325, 325], [326, 326], [328, 328], [329, 329], [331, 331]], "source_code_file": "src/expr.c", "binary_file1": "expr.json", "binary_file2": "expr.json"}
{"fname": "usage", "lineno_map": [[341, 341], [342, 342], [345, 345], [350, 350], [351, 351], [352, 352], [353, 353], [362, 362], [371, 371], [378, 378], [384, 384], [393, 393], [399, 399], [406, 406], [411, 411], [413, 413]], "source_code_file": "src/expr.c", "binary_file1": "expr.json", "binary_file2": "expr.json"}
{"fname": "main", "lineno_map": [[432, 432], [433, 433], [434, 434], [435, 435], [437, 437], [438, 438], [440, 440], [445, 445], [446, 446], [448, 448], [449, 449], [452, 452], [454, 454], [455, 455], [458, 458], [460, 460], [461, 461], [462, 462], [465, 465]], "source_code_file": "src/expr.c", "binary_file1": "expr.json", "binary_file2": "expr.json"}
{"fname": "int_value", "lineno_map": [[475, 475], [476, 476], [477, 477]], "source_code_file": "src/expr.c", "binary_file1": "expr.json", "binary_file2": "expr.json"}
{"fname": "str_value", "lineno_map": [[486, 486], [487, 487], [488, 488]], "source_code_file": "src/expr.c", "binary_file1": "expr.json", "binary_file2": "expr.json"}
{"fname": "freev", "lineno_map": [[497, 497], [498, 498], [500, 500], [501, 501]], "source_code_file": "src/expr.c", "binary_file1": "expr.json", "binary_file2": "expr.json"}
{"fname": "printv", "lineno_map": [[509, 509], [512, 512], [513, 513], [516, 516], [519, 519]], "source_code_file": "src/expr.c", "binary_file1": "expr.json", "binary_file2": "expr.json"}
{"fname": "null", "lineno_map": [[528, 528], [534, 534], [535, 535], [538, 538], [542, 542], [545, 545], [550, 550]], "source_code_file": "src/expr.c", "binary_file1": "expr.json", "binary_file2": "expr.json"}
{"fname": "looks_like_integer", "lineno_map": [[559, 559], [562, 562], [564, 564]], "source_code_file": "src/expr.c", "binary_file1": "expr.json", "binary_file2": "expr.json"}
{"fname": "tostring", "lineno_map": [[574, 574], [578, 578], [579, 579], [580, 580], [581, 581], [587, 587]], "source_code_file": "src/expr.c", "binary_file1": "expr.json", "binary_file2": "expr.json"}
{"fname": "toarith", "lineno_map": [[596, 596], [602, 602], [604, 604], [606, 606], [607, 607], [608, 608], [609, 609], [613, 613]], "source_code_file": "src/expr.c", "binary_file1": "expr.json", "binary_file2": "expr.json"}
{"fname": "getsize", "lineno_map": [[623, 623], [625, 625], [627, 627], [628, 628]], "source_code_file": "src/expr.c", "binary_file1": "expr.json", "binary_file2": "expr.json"}
{"fname": "nextarg", "lineno_map": [[640, 640], [644, 644], [645, 645]], "source_code_file": "src/expr.c", "binary_file1": "expr.json", "binary_file2": "expr.json"}
{"fname": "require_more_args", "lineno_map": [[664, 664], [665, 665]], "source_code_file": "src/expr.c", "binary_file1": "expr.json", "binary_file2": "expr.json"}
{"fname": "docolon", "lineno_map": [[700, 700], [701, 701], [703, 703], [704, 704], [705, 705], [707, 707], [708, 708], [709, 709], [710, 710], [711, 711], [713, 713], [714, 714], [715, 715], [716, 716], [718, 718], [719, 719], [722, 722], [724, 724], [725, 725], [731, 731], [733, 733], [734, 734], [737, 737], [740, 740], [741, 741], [743, 743], [746, 746], [750, 750], [752, 752], [753, 753], [755, 755], [756, 756]], "source_code_file": "src/expr.c", "binary_file1": "expr.json", "binary_file2": "expr.json"}
{"fname": "eval7", "lineno_map": [[770, 770], [772, 772], [774, 774], [775, 775], [776, 776], [778, 778], [779, 779], [784, 784], [785, 785]], "source_code_file": "src/expr.c", "binary_file1": "expr.json", "binary_file2": "expr.json"}
{"fname": "eval6", "lineno_map": [[804, 804], [806, 806], [809, 809], [811, 811], [812, 812], [813, 813], [814, 814], [817, 817], [819, 819], [820, 820], [821, 821], [823, 823], [824, 824], [827, 827], [828, 828], [831, 831], [835, 835], [836, 836], [837, 837], [838, 838], [839, 839], [840, 840], [841, 841], [842, 842], [845, 845], [847, 847], [848, 848], [849, 849], [850, 850], [852, 852], [853, 853], [856, 856], [857, 857], [859, 859], [860, 860], [861, 861], [863, 863], [864, 864], [865, 865]], "source_code_file": "src/expr.c", "binary_file1": "expr.json", "binary_file2": "expr.json"}
{"fname": "eval5", "lineno_map": [[885, 885], [888, 888], [890, 890], [891, 891], [893, 893], [894, 894], [895, 895], [897, 897]], "source_code_file": "src/expr.c", "binary_file1": "expr.json", "binary_file2": "expr.json"}
{"fname": "eval4", "lineno_map": [[916, 916], [919, 919], [920, 920], [921, 921], [922, 922], [923, 923], [924, 924], [927, 927], [928, 928], [930, 930], [931, 931], [932, 932], [933, 933], [934, 934], [935, 935], [936, 936], [937, 937], [939, 939]], "source_code_file": "src/expr.c", "binary_file1": "expr.json", "binary_file2": "expr.json"}
{"fname": "eval3", "lineno_map": [[955, 955], [958, 958], [959, 959], [960, 960], [961, 961], [964, 964], [965, 965], [967, 967], [968, 968], [969, 969], [971, 971]], "source_code_file": "src/expr.c", "binary_file1": "expr.json", "binary_file2": "expr.json"}
{"fname": "eval2", "lineno_map": [[985, 985], [993, 993], [995, 995], [996, 996], [997, 997], [998, 998], [999, 999], [1000, 1000], [1001, 1001], [1002, 1002], [1003, 1003], [1004, 1004], [1005, 1005], [1006, 1006], [1009, 1009], [1011, 1011], [1014, 1014], [1015, 1015], [1017, 1017], [1018, 1018], [1021, 1021], [1022, 1022], [1024, 1024], [1026, 1026], [1027, 1027], [1028, 1028], [1035, 1035], [1037, 1037], [1038, 1038], [1039, 1039], [1040, 1040], [1041, 1041], [1042, 1042], [1043, 1043], [1047, 1047], [1048, 1048], [1049, 1049]], "source_code_file": "src/expr.c", "binary_file1": "expr.json", "binary_file2": "expr.json"}
{"fname": "eval1", "lineno_map": [[1064, 1064], [1067, 1067], [1069, 1069], [1070, 1070], [1072, 1072], [1073, 1073], [1074, 1074], [1077, 1077]], "source_code_file": "src/expr.c", "binary_file1": "expr.json", "binary_file2": "expr.json"}
{"fname": "eval", "lineno_map": [[1095, 1095], [1098, 1098], [1100, 1100], [1101, 1101], [1103, 1103], [1104, 1104], [1105, 1105], [1107, 1107], [1108, 1108], [1112, 1112]], "source_code_file": "src/expr.c", "binary_file1": "expr.json", "binary_file2": "expr.json"}
{"fname": "get_reldate", "lineno_map": [[115, 115], [116, 116]], "source_code_file": "src/touch.c", "binary_file1": "touch.json", "binary_file2": "touch.json"}
{"fname": "touch", "lineno_map": [[126, 126], [127, 127], [128, 128], [130, 130], [131, 131], [132, 132], [135, 135], [142, 142], [143, 143], [146, 146], [149, 149], [150, 150], [153, 153], [154, 154], [158, 158], [162, 162], [165, 165], [166, 166], [169, 169], [171, 171], [173, 173], [177, 177], [180, 180], [184, 184], [186, 186], [192, 192], [196, 196], [198, 198]], "source_code_file": "src/touch.c", "binary_file1": "touch.json", "binary_file2": "touch.json"}
{"fname": "usage", "lineno_map": [[209, 209], [210, 210], [213, 213], [214, 214], [224, 224], [226, 226], [232, 232], [238, 238], [245, 245], [246, 246], [247, 247], [251, 251], [253, 253]], "source_code_file": "src/touch.c", "binary_file1": "touch.json", "binary_file2": "touch.json"}
{"fname": "main", "lineno_map": [[260, 260], [261, 261], [262, 262], [265, 265], [266, 266], [267, 267], [268, 268], [270, 270], [272, 272], [273, 273], [275, 275], [277, 277], [280, 280], [284, 284], [288, 288], [295, 295], [299, 299], [303, 303], [304, 304], [308, 308], [310, 310], [312, 312], [313, 313], [314, 314], [318, 318], [322, 322], [324, 324], [327, 327], [331, 331], [332, 332], [334, 334], [336, 336], [337, 337], [340, 340], [345, 345], [346, 346], [347, 347], [349, 349], [350, 350], [351, 351], [352, 352], [354, 354], [355, 355], [356, 356], [357, 357], [362, 362], [365, 365], [366, 366], [367, 367], [368, 368], [373, 373], [374, 374], [375, 375], [380, 380], [381, 381], [382, 382], [383, 383], [384, 384], [385, 385], [392, 392], [393, 393], [396, 396], [397, 397], [398, 398], [400, 400], [402, 402], [408, 408], [409, 409], [410, 410], [412, 412], [413, 413], [417, 417], [420, 420], [422, 422], [423, 423], [425, 425], [428, 428], [430, 430], [431, 431], [434, 434], [435, 435]], "source_code_file": "src/touch.c", "binary_file1": "touch.json", "binary_file2": "touch.json"}
{"fname": "userid_compare", "lineno_map": [[47, 47], [48, 48]], "source_code_file": "src/users.c", "binary_file1": "users.json", "binary_file2": "users.json"}
{"fname": "list_entries_users", "lineno_map": [[55, 55], [57, 57], [59, 59], [61, 61], [65, 65], [67, 67], [68, 68], [70, 70], [73, 73], [75, 75], [77, 77], [78, 78], [79, 79], [82, 82], [83, 83], [84, 84]], "source_code_file": "src/users.c", "binary_file1": "users.json", "binary_file2": "users.json"}
{"fname": "users", "lineno_map": [[96, 96], [97, 97], [99, 99], [101, 101]], "source_code_file": "src/users.c", "binary_file1": "users.json", "binary_file2": "users.json"}
{"fname": "usage", "lineno_map": [[107, 107], [108, 108], [111, 111], [112, 112], [118, 118], [119, 119], [120, 120], [122, 122]], "source_code_file": "src/users.c", "binary_file1": "users.json", "binary_file2": "users.json"}
{"fname": "main", "lineno_map": [[129, 129], [130, 130], [131, 131], [132, 132], [134, 134], [136, 136], [138, 138], [139, 139], [141, 141], [144, 144], [148, 148], [152, 152], [153, 153]], "source_code_file": "src/users.c", "binary_file1": "users.json", "binary_file2": "users.json"}
{"fname": "smack_new_label_from_self", "lineno_map": [[27, 27], [28, 28], [29, 29]], "source_code_file": "src/id.c", "binary_file1": "id.json", "binary_file2": "id.json"}
{"fname": "usage", "lineno_map": [[81, 81], [82, 82], [85, 85], [86, 86], [91, 91], [102, 102], [103, 103], [104, 104], [108, 108], [110, 110]], "source_code_file": "src/id.c", "binary_file1": "id.json", "binary_file2": "id.json"}
{"fname": "main", "lineno_map": [[117, 117], [118, 118], [119, 119], [120, 120], [123, 123], [125, 125], [127, 127], [129, 129], [132, 132], [133, 133], [134, 134], [135, 135], [137, 137], [139, 139], [141, 141], [155, 155], [156, 156], [159, 159], [163, 163], [166, 166], [169, 169], [172, 172], [175, 175], [178, 178], [180, 180], [181, 181], [183, 183], [187, 187], [188, 188], [190, 190], [191, 191], [194, 194], [195, 195], [198, 198], [199, 199], [201, 201], [202, 202], [203, 203], [204, 204], [206, 206], [207, 207], [210, 210], [211, 211], [219, 219], [220, 220], [221, 221], [224, 224], [225, 225], [226, 226], [227, 227], [228, 228], [231, 231], [233, 233], [234, 234], [238, 238], [240, 240], [245, 245], [248, 248], [249, 249], [250, 250], [251, 251], [252, 252], [259, 259], [260, 260], [262, 262], [263, 263], [265, 265], [266, 266], [267, 267], [268, 268], [271, 271], [272, 272], [274, 274], [275, 275], [276, 276], [277, 277], [280, 280], [282, 282], [283, 283], [284, 284], [285, 285], [287, 287], [288, 288], [289, 289], [290, 290], [294, 294], [296, 296], [298, 298], [300, 300], [301, 301], [303, 303], [305, 305], [307, 307], [309, 309], [311, 311], [315, 315], [317, 317]], "source_code_file": "src/id.c", "binary_file1": "id.json", "binary_file2": "id.json"}
{"fname": "print_user", "lineno_map": [[350, 350], [352, 352], [354, 354], [355, 355], [357, 357], [359, 359], [363, 363], [364, 364]], "source_code_file": "src/id.c", "binary_file1": "id.json", "binary_file2": "id.json"}
{"fname": "print_full_info", "lineno_map": [[375, 375], [376, 376], [377, 377], [378, 378], [380, 380], [381, 381], [382, 382], [383, 383], [385, 385], [387, 387], [388, 388], [389, 389], [390, 390], [393, 393], [395, 395], [396, 396], [397, 397], [398, 398], [405, 405], [406, 406], [408, 408], [410, 410], [411, 411], [413, 413], [414, 414], [417, 417], [418, 418], [422, 422], [423, 423], [424, 424], [426, 426], [427, 427], [428, 428], [429, 429], [430, 430], [431, 431], [433, 433], [438, 438], [439, 439]], "source_code_file": "src/id.c", "binary_file1": "id.json", "binary_file2": "id.json"}
{"fname": "usage", "lineno_map": [[117, 117], [118, 118], [121, 121], [123, 123], [125, 125], [134, 134], [144, 144], [150, 150], [151, 151], [152, 152], [154, 154]], "source_code_file": "src/uname.c", "binary_file1": "uname.json", "binary_file2": "uname.json"}
{"fname": "print_element", "lineno_map": [[164, 164], [165, 165], [166, 166], [167, 167]], "source_code_file": "src/uname.c", "binary_file1": "uname.json", "binary_file2": "uname.json"}
{"fname": "decode_switches", "lineno_map": [[178, 178], [180, 180], [182, 182], [185, 185], [187, 187], [189, 189], [192, 192], [195, 195], [199, 199], [202, 202], [205, 205], [209, 209], [213, 213], [217, 217], [221, 221], [225, 225], [229, 229], [233, 233], [237, 237], [240, 240], [242, 242], [245, 245], [250, 250], [252, 252], [253, 253]], "source_code_file": "src/uname.c", "binary_file1": "uname.json", "binary_file2": "uname.json"}
{"fname": "main", "lineno_map": [[265, 265], [268, 268], [269, 269], [270, 270], [271, 271], [273, 273], [275, 275], [277, 277], [278, 278], [280, 280], [281, 281], [286, 286], [287, 287], [289, 289], [290, 290], [291, 291], [292, 292], [293, 293], [294, 294], [295, 295], [296, 296], [297, 297], [298, 298], [301, 301], [303, 303], [341, 341], [342, 342], [345, 345], [347, 347], [366, 366], [367, 367], [370, 370], [371, 371], [373, 373]], "source_code_file": "src/uname.c", "binary_file1": "uname.json", "binary_file2": "uname.json"}
{"fname": "emit_stdin_note", "lineno_map": [[580, 580], [583, 583]], "source_code_file": "src/head.c", "binary_file1": "head.json", "binary_file2": "head.json"}
{"fname": "emit_mandatory_arg_note", "lineno_map": [[586, 586], [590, 590]], "source_code_file": "src/head.c", "binary_file1": "head.json", "binary_file2": "head.json"}
{"fname": "emit_ancillary_info", "lineno_map": [[642, 642], [643, 643], [645, 645], [646, 646], [648, 648], [651, 651], [655, 655], [656, 656], [662, 662], [665, 665], [667, 667]], "source_code_file": "src/head.c", "binary_file1": "head.json", "binary_file2": "head.json"}
{"fname": "usage", "lineno_map": [[106, 106], [107, 107], [110, 110], [114, 114], [119, 119], [120, 120], [122, 122], [130, 130], [134, 134], [137, 137], [138, 138], [139, 139], [145, 145], [147, 147]], "source_code_file": "src/head.c", "binary_file1": "head.json", "binary_file2": "head.json"}
{"fname": "diagnose_copy_fd_failure", "lineno_map": [[153, 153], [156, 156], [159, 159], [162, 162]], "source_code_file": "src/head.c", "binary_file1": "head.json", "binary_file2": "head.json"}
{"fname": "write_header", "lineno_map": [[171, 171], [172, 172]], "source_code_file": "src/head.c", "binary_file1": "head.json", "binary_file2": "head.json"}
{"fname": "xwrite_stdout", "lineno_map": [[181, 181], [183, 183], [184, 184]], "source_code_file": "src/head.c", "binary_file1": "head.json", "binary_file2": "head.json"}
{"fname": "copy_fd", "lineno_map": [[196, 196], [199, 199], [201, 201], [202, 202], [203, 203], [206, 206], [208, 208], [211, 211]], "source_code_file": "src/head.c", "binary_file1": "head.json", "binary_file2": "head.json"}
{"fname": "elseek", "lineno_map": [[225, 225], [228, 228], [229, 229], [230, 230]], "source_code_file": "src/head.c", "binary_file1": "head.json", "binary_file2": "head.json"}
{"fname": "elide_tail_bytes_pipe", "lineno_map": [[250, 250], [251, 251], [252, 252], [289, 289], [291, 291], [292, 292], [293, 293], [296, 296], [297, 297], [299, 299], [301, 301], [302, 302], [303, 303], [305, 305], [307, 307], [308, 308], [313, 313], [315, 315], [323, 323], [326, 326], [331, 331], [333, 333], [334, 334], [336, 336], [338, 338], [340, 340], [341, 341], [345, 345], [352, 352], [356, 356], [358, 358], [359, 359], [360, 360], [361, 361], [362, 362], [364, 364], [365, 365], [367, 367], [370, 370], [371, 371], [372, 372], [373, 373], [375, 375], [376, 376], [379, 379], [381, 381], [382, 382], [384, 384], [385, 385], [387, 387], [389, 389], [390, 390], [393, 393], [396, 396], [397, 397], [399, 399], [401, 401], [402, 402], [407, 407], [409, 409], [411, 411], [412, 412], [413, 413], [415, 415], [419, 419], [420, 420], [423, 423], [437, 437], [438, 438], [439, 439], [440, 440], [445, 445], [446, 446], [447, 447], [450, 450], [451, 451]], "source_code_file": "src/head.c", "binary_file1": "head.json", "binary_file2": "head.json"}
{"fname": "elide_tail_bytes_file", "lineno_map": [[467, 467], [468, 468], [474, 474], [475, 475], [477, 477], [480, 480], [481, 481], [484, 484]], "source_code_file": "src/head.c", "binary_file1": "head.json", "binary_file2": "head.json"}
{"fname": "elide_tail_lines_pipe", "lineno_map": [[507, 507], [510, 510], [511, 511], [514, 514], [515, 515], [516, 516], [517, 517], [524, 524], [525, 525], [528, 528], [530, 530], [531, 531], [532, 532], [535, 535], [536, 536], [537, 537], [541, 541], [542, 542], [543, 543], [545, 545], [546, 546], [549, 549], [554, 554], [556, 556], [557, 557], [558, 558], [567, 567], [568, 568], [570, 570], [571, 571], [572, 572], [573, 573], [574, 574], [577, 577], [581, 581], [583, 583], [585, 585], [586, 586], [592, 592], [594, 594], [595, 595], [598, 598], [600, 600], [601, 601], [602, 602], [606, 606], [608, 608], [609, 609], [610, 610], [611, 611], [613, 613], [614, 614], [615, 615], [617, 617], [618, 618], [622, 622], [624, 624], [625, 625], [626, 626], [629, 629], [630, 630]], "source_code_file": "src/head.c", "binary_file1": "head.json", "binary_file2": "head.json"}
{"fname": "elide_tail_lines_seekable", "lineno_map": [[652, 652], [656, 656], [657, 657], [658, 658], [661, 661], [662, 662], [664, 664], [665, 665], [667, 667], [672, 672], [675, 675], [676, 676], [682, 682], [683, 683], [685, 685], [686, 686], [690, 690], [691, 691], [693, 693], [695, 695], [700, 700], [703, 703], [706, 706], [707, 707], [709, 709], [716, 716], [724, 724], [729, 729], [730, 730], [733, 733], [734, 734], [736, 736], [742, 742]], "source_code_file": "src/head.c", "binary_file1": "head.json", "binary_file2": "head.json"}
{"fname": "elide_tail_lines_file", "lineno_map": [[756, 756], [757, 757], [767, 767]], "source_code_file": "src/head.c", "binary_file1": "head.json", "binary_file2": "head.json"}
{"fname": "head_bytes", "lineno_map": [[776, 776], [778, 778], [781, 781], [782, 782], [783, 783], [784, 784], [786, 786], [789, 789], [791, 791], [792, 792]], "source_code_file": "src/head.c", "binary_file1": "head.json", "binary_file2": "head.json"}
{"fname": "head_lines", "lineno_map": [[802, 802], [804, 804], [805, 805], [807, 807], [809, 809], [812, 812], [814, 814], [815, 815], [817, 817], [821, 821], [824, 824], [825, 825], [829, 829]], "source_code_file": "src/head.c", "binary_file1": "head.json", "binary_file2": "head.json"}
{"fname": "head", "lineno_map": [[838, 838], [839, 839], [841, 841], [843, 843], [845, 845], [847, 847], [851, 851], [853, 853], [854, 854], [857, 857], [862, 862]], "source_code_file": "src/head.c", "binary_file1": "head.json", "binary_file2": "head.json"}
{"fname": "head_file", "lineno_map": [[874, 874], [876, 876], [878, 878], [879, 879], [880, 880], [881, 881], [885, 885], [886, 886], [888, 888], [893, 893], [894, 894], [896, 896]], "source_code_file": "src/head.c", "binary_file1": "head.json", "binary_file2": "head.json"}
{"fname": "main", "lineno_map": [[919, 919], [920, 920], [925, 925], [929, 929], [933, 933], [941, 941], [942, 942], [943, 943], [944, 944], [946, 946], [948, 948], [950, 950], [952, 952], [954, 954], [956, 956], [957, 957], [959, 959], [963, 963], [964, 964], [967, 967], [970, 970], [972, 972], [975, 975], [976, 976], [982, 982], [983, 983], [987, 987], [991, 991], [995, 995], [999, 999], [1003, 1003], [1004, 1004], [1010, 1010], [1011, 1011], [1012, 1012], [1014, 1014], [1017, 1017], [1018, 1018], [1019, 1019], [1022, 1022], [1025, 1025], [1028, 1028], [1032, 1032], [1033, 1033], [1034, 1034], [1035, 1035], [1036, 1036], [1040, 1040], [1041, 1041], [1042, 1042], [1043, 1043], [1044, 1044], [1048, 1048], [1052, 1052], [1056, 1056], [1059, 1059], [1061, 1061], [1064, 1064], [1065, 1065], [1066, 1066], [1070, 1070], [1071, 1071], [1072, 1072], [1074, 1074], [1077, 1077], [1081, 1081], [1082, 1082], [1083, 1083], [1085, 1085], [1087, 1087], [1088, 1088], [1090, 1090], [1091, 1091]], "source_code_file": "src/head.c", "binary_file1": "head.json", "binary_file2": "head.json"}
{"fname": "to_uchar", "lineno_map": [[156, 156]], "source_code_file": "src/dircolors.c", "binary_file1": "dircolors.json", "binary_file2": "dircolors.json"}
{"fname": "usage", "lineno_map": [[95, 95], [96, 96], [99, 99], [100, 100], [108, 108], [109, 109], [110, 110], [116, 116], [119, 119]], "source_code_file": "src/dircolors.c", "binary_file1": "dircolors.json", "binary_file2": "dircolors.json"}
{"fname": "guess_shell_syntax", "lineno_map": [[130, 130], [131, 131], [134, 134], [136, 136]], "source_code_file": "src/dircolors.c", "binary_file1": "dircolors.json", "binary_file2": "dircolors.json"}
{"fname": "parse_line", "lineno_map": [[149, 149], [150, 150], [152, 152], [156, 156], [159, 159], [161, 161], [163, 163], [166, 166], [167, 167], [172, 172], [174, 174], [176, 176], [179, 179], [181, 181], [182, 182], [184, 184], [186, 186], [188, 188]], "source_code_file": "src/dircolors.c", "binary_file1": "dircolors.json", "binary_file2": "dircolors.json"}
{"fname": "append_quoted", "lineno_map": [[197, 197], [199, 199], [201, 201], [204, 204], [205, 205], [206, 206], [207, 207], [212, 212], [217, 217], [218, 218], [222, 222], [226, 226], [227, 227]], "source_code_file": "src/dircolors.c", "binary_file1": "dircolors.json", "binary_file2": "dircolors.json"}
{"fname": "dc_parse_stream", "lineno_map": [[241, 241], [242, 242], [243, 243], [244, 244], [247, 247], [250, 250], [253, 253], [254, 254], [255, 255], [262, 262], [264, 264], [266, 266], [268, 268], [271, 271], [275, 275], [277, 277], [278, 278], [281, 281], [283, 283], [284, 284], [286, 286], [288, 288], [290, 290], [291, 291], [292, 292], [295, 295], [296, 296], [298, 298], [299, 299], [300, 300], [301, 301], [305, 305], [306, 306], [308, 308], [310, 310], [312, 312], [313, 313], [314, 314], [315, 315], [316, 316], [318, 318], [320, 320], [321, 321], [322, 322], [323, 323], [325, 325], [326, 326], [327, 327], [335, 335], [336, 336], [339, 339], [341, 341], [342, 342], [343, 343], [344, 344], [348, 348], [354, 354], [358, 358], [360, 360], [363, 363], [366, 366], [367, 367]], "source_code_file": "src/dircolors.c", "binary_file1": "dircolors.json", "binary_file2": "dircolors.json"}
{"fname": "dc_parse_file", "lineno_map": [[378, 378], [380, 380], [384, 384], [386, 386], [388, 388]], "source_code_file": "src/dircolors.c", "binary_file1": "dircolors.json", "binary_file2": "dircolors.json"}
{"fname": "main", "lineno_map": [[398, 398], [400, 400], [401, 401], [404, 404], [405, 405], [406, 406], [407, 407], [409, 409], [411, 411], [412, 412], [415, 415], [419, 419], [423, 423], [426, 426], [428, 428], [431, 431], [434, 434], [435, 435], [439, 439], [441, 441], [442, 442], [444, 444], [447, 447], [449, 449], [450, 450], [451, 451], [454, 454], [457, 457], [459, 459], [460, 460], [462, 462], [463, 463], [469, 469], [471, 471], [472, 472], [474, 474], [479, 479], [480, 480], [481, 481], [483, 483], [485, 485], [487, 487], [488, 488], [492, 492], [494, 494], [495, 495], [499, 499], [500, 500], [502, 502], [503, 503], [504, 504]], "source_code_file": "src/dircolors.c", "binary_file1": "dircolors.json", "binary_file2": "dircolors.json"}
{"fname": "usage", "lineno_map": [[43, 43], [44, 44], [47, 47], [52, 52], [53, 53], [54, 54], [56, 56]], "source_code_file": "src/hostid.c", "binary_file1": "hostid.json", "binary_file2": "hostid.json"}
{"fname": "main", "lineno_map": [[65, 65], [66, 66], [67, 67], [68, 68], [70, 70], [72, 72], [74, 74], [75, 75], [77, 77], [79, 79], [80, 80], [83, 83], [90, 90]], "source_code_file": "src/hostid.c", "binary_file1": "hostid.json", "binary_file2": "hostid.json"}
{"fname": "to_uchar", "lineno_map": [[156, 156]], "source_code_file": "src/test.c", "binary_file1": "test.json", "binary_file2": "test.json"}
{"fname": "emit_ancillary_info", "lineno_map": [[631, 631], [642, 642], [645, 645], [646, 646], [648, 648], [649, 649], [651, 651], [655, 655], [656, 656], [667, 667]], "source_code_file": "src/test.c", "binary_file1": "test.json", "binary_file2": "test.json"}
{"fname": "test_syntax_error", "lineno_map": [[95, 95], [96, 96], [97, 97]], "source_code_file": "src/test.c", "binary_file1": "test.json", "binary_file2": "test.json"}
{"fname": "advance", "lineno_map": [[107, 107], [109, 109], [110, 110]], "source_code_file": "src/test.c", "binary_file1": "test.json", "binary_file2": "test.json"}
{"fname": "unary_advance", "lineno_map": [[116, 116], [117, 117]], "source_code_file": "src/test.c", "binary_file1": "test.json", "binary_file2": "test.json"}
{"fname": "beyond", "lineno_map": [[127, 127]], "source_code_file": "src/test.c", "binary_file1": "test.json", "binary_file2": "test.json"}
{"fname": "find_int", "lineno_map": [[139, 139], [142, 142], [144, 144], [145, 145], [149, 149], [150, 150], [153, 153], [155, 155], [156, 156], [157, 157], [158, 158], [159, 159], [163, 163]], "source_code_file": "src/test.c", "binary_file1": "test.json", "binary_file2": "test.json"}
{"fname": "get_mtime", "lineno_map": [[172, 172], [177, 177], [178, 178]], "source_code_file": "src/test.c", "binary_file1": "test.json", "binary_file2": "test.json"}
{"fname": "binop", "lineno_map": [[187, 187], [188, 188], [189, 189], [190, 190]], "source_code_file": "src/test.c", "binary_file1": "test.json", "binary_file2": "test.json"}
{"fname": "term", "lineno_map": [[215, 215], [218, 218], [220, 220], [221, 221], [224, 224], [225, 225], [228, 228], [232, 232], [234, 234], [235, 235], [236, 236], [237, 237], [239, 239], [243, 243], [244, 244], [245, 245], [247, 247], [248, 248], [249, 249], [250, 250], [254, 254], [255, 255], [256, 256], [257, 257], [260, 260], [262, 262], [263, 263], [265, 265], [269, 269], [270, 270]], "source_code_file": "src/test.c", "binary_file1": "test.json", "binary_file2": "test.json"}
{"fname": "binary_operator", "lineno_map": [[284, 284], [285, 285], [286, 286], [288, 288], [290, 290], [291, 291], [294, 294], [296, 296], [299, 299], [300, 300], [301, 301], [302, 302], [303, 303], [307, 307], [308, 308], [309, 309], [310, 310], [311, 311], [312, 312], [313, 313], [314, 314], [315, 315], [317, 317], [318, 318], [321, 321], [327, 327], [332, 332], [333, 333], [334, 334], [335, 335], [336, 336], [342, 342], [345, 345], [346, 346], [347, 347], [349, 349], [350, 350], [351, 351], [356, 356], [361, 361], [362, 362], [363, 363], [364, 364], [365, 365], [372, 372], [375, 375], [376, 376], [378, 378], [379, 379], [383, 383], [385, 385], [386, 386], [391, 391]], "source_code_file": "src/test.c", "binary_file1": "test.json", "binary_file2": "test.json"}
{"fname": "unary_operator", "lineno_map": [[399, 399], [411, 411], [415, 415], [419, 419], [423, 423], [428, 428], [429, 429], [431, 431], [432, 432], [433, 433], [439, 439], [440, 440], [442, 442], [443, 443], [444, 444], [449, 449], [453, 453], [456, 456], [458, 458], [461, 461], [463, 463], [466, 466], [468, 468], [471, 471], [473, 473], [476, 476], [478, 478], [481, 481], [483, 483], [489, 489], [491, 491], [494, 494], [496, 496], [499, 499], [501, 501], [504, 504], [506, 506], [512, 512], [513, 513], [514, 514], [515, 515], [520, 520], [524, 524]], "source_code_file": "src/test.c", "binary_file1": "test.json", "binary_file2": "test.json"}
{"fname": "and", "lineno_map": [[537, 537], [541, 541], [542, 542], [544, 544]], "source_code_file": "src/test.c", "binary_file1": "test.json", "binary_file2": "test.json"}
{"fname": "or", "lineno_map": [[556, 556], [560, 560], [561, 561], [563, 563]], "source_code_file": "src/test.c", "binary_file1": "test.json", "binary_file2": "test.json"}
{"fname": "expr", "lineno_map": [[574, 574], [575, 575]], "source_code_file": "src/test.c", "binary_file1": "test.json", "binary_file2": "test.json"}
{"fname": "test_unop", "lineno_map": [[584, 584], [587, 587]], "source_code_file": "src/test.c", "binary_file1": "test.json", "binary_file2": "test.json"}
{"fname": "two_arguments", "lineno_map": [[611, 611], [613, 613], [614, 614], [616, 616], [617, 617], [618, 618], [620, 620], [621, 621], [623, 623], [626, 626]], "source_code_file": "src/test.c", "binary_file1": "test.json", "binary_file2": "test.json"}
{"fname": "three_arguments", "lineno_map": [[635, 635], [636, 636], [637, 637], [639, 639], [640, 640], [642, 642], [644, 644], [645, 645], [646, 646], [648, 648], [649, 649], [651, 651]], "source_code_file": "src/test.c", "binary_file1": "test.json", "binary_file2": "test.json"}
{"fname": "posixtest", "lineno_map": [[661, 661], [664, 664], [668, 668], [672, 672], [676, 676], [678, 678], [679, 679], [682, 682], [684, 684], [685, 685], [686, 686], [692, 692], [693, 693], [694, 694]], "source_code_file": "src/test.c", "binary_file1": "test.json", "binary_file2": "test.json"}
{"fname": "usage", "lineno_map": [[705, 705], [706, 706], [709, 709], [716, 716], [720, 720], [721, 721], [722, 722], [727, 727], [734, 734], [742, 742], [751, 751], [757, 757], [764, 764], [771, 771], [778, 778], [785, 785], [791, 791], [796, 796], [801, 801], [802, 802], [804, 804]], "source_code_file": "src/test.c", "binary_file1": "test.json", "binary_file2": "test.json"}
{"fname": "main", "lineno_map": [[836, 836], [837, 837], [838, 838], [839, 839], [841, 841], [842, 842], [845, 845], [873, 873], [874, 874], [876, 876], [877, 877], [879, 879], [881, 881], [882, 882], [884, 884]], "source_code_file": "src/test.c", "binary_file1": "test.json", "binary_file2": "test.json"}
{"fname": "initialize_exit_failure", "lineno_map": [[100, 100], [101, 101], [102, 102], [103, 103]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "to_uchar", "lineno_map": [[156, 156]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "dot_or_dotdot", "lineno_map": [[266, 266], [267, 267], [269, 269], [270, 270], [273, 273], [274, 274]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "emit_mandatory_arg_note", "lineno_map": [[587, 587], [590, 590]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "emit_size_note", "lineno_map": [[594, 594], [599, 599]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "timetostr", "lineno_map": [[687, 687], [688, 688]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "is_ENOTSUP", "lineno_map": [[762, 762], [763, 763], [764, 764]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "dev_ino_push", "lineno_map": [[1010, 1010], [1011, 1011], [1012, 1012], [1013, 1013], [1014, 1014], [1015, 1015], [1016, 1016]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "dev_ino_pop", "lineno_map": [[1026, 1026], [1027, 1027], [1028, 1028], [1029, 1029], [1030, 1030]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "dired_dump_obstack", "lineno_map": [[1055, 1055], [1056, 1056], [1058, 1058], [1059, 1059], [1060, 1060], [1061, 1061], [1062, 1062]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "first_percent_b", "lineno_map": [[1073, 1073], [1074, 1074], [1075, 1075], [1077, 1077], [1078, 1078]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "file_escape_init", "lineno_map": [[1087, 1087], [1088, 1088]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "abmon_init", "lineno_map": [[1122, 1122], [1126, 1126], [1127, 1127], [1128, 1128], [1130, 1130], [1131, 1131], [1132, 1132], [1134, 1134], [1136, 1136], [1138, 1138], [1141, 1141]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "abformat_init", "lineno_map": [[1153, 1153], [1154, 1154], [1155, 1155], [1159, 1159], [1162, 1162], [1164, 1164], [1165, 1165], [1167, 1167], [1170, 1170], [1171, 1171], [1174, 1174], [1176, 1176], [1177, 1177], [1178, 1178], [1181, 1181], [1186, 1186]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "dev_ino_hash", "lineno_map": [[1192, 1192]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "dev_ino_compare", "lineno_map": [[1199, 1199], [1200, 1200]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "dev_ino_free", "lineno_map": [[1207, 1207]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "visit_dir", "lineno_map": [[1221, 1221], [1222, 1222], [1223, 1223], [1226, 1226], [1228, 1228], [1231, 1231], [1234, 1234], [1236, 1236], [1239, 1239]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "free_pending_ent", "lineno_map": [[1248, 1248], [1249, 1249], [1250, 1250]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "is_colored", "lineno_map": [[1256, 1256], [1257, 1257], [1259, 1259], [1260, 1260]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "restore_default_color", "lineno_map": [[1266, 1266], [1267, 1267]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "set_normal_color", "lineno_map": [[1273, 1273], [1275, 1275], [1276, 1276], [1277, 1277]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "sighandler", "lineno_map": [[1288, 1288], [1289, 1289]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "stophandler", "lineno_map": [[1299, 1299], [1300, 1300]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "process_signals", "lineno_map": [[1312, 1312], [1318, 1318], [1319, 1319], [1320, 1320], [1322, 1322], [1326, 1326], [1327, 1327], [1332, 1332], [1334, 1334], [1335, 1335], [1338, 1338], [1341, 1341], [1342, 1342]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "signal_setup", "lineno_map": [[1387, 1387], [1392, 1392], [1393, 1393], [1395, 1395], [1396, 1396], [1397, 1397], [1400, 1400], [1401, 1401], [1403, 1403], [1404, 1404], [1406, 1406], [1407, 1407], [1424, 1424], [1425, 1425], [1426, 1426]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "signal_init", "lineno_map": [[1438, 1438]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "signal_restore", "lineno_map": [[1444, 1444]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "main", "lineno_map": [[1455, 1455], [1456, 1456], [1457, 1457], [1458, 1458], [1460, 1460], [1461, 1461], [1466, 1466], [1467, 1467], [1468, 1468], [1470, 1470], [1471, 1471], [1473, 1473], [1475, 1475], [1476, 1476], [1480, 1480], [1483, 1483], [1484, 1484], [1485, 1485], [1486, 1486], [1489, 1489], [1490, 1490], [1491, 1491], [1492, 1492], [1498, 1498], [1500, 1500], [1504, 1504], [1505, 1505], [1507, 1507], [1510, 1510], [1512, 1512], [1513, 1513], [1514, 1514], [1515, 1515], [1516, 1516], [1517, 1517], [1518, 1518], [1519, 1519], [1520, 1520], [1522, 1522], [1524, 1524], [1525, 1525], [1528, 1528], [1530, 1530], [1532, 1532], [1535, 1535], [1536, 1536], [1539, 1539], [1540, 1540], [1541, 1541], [1543, 1543], [1545, 1545], [1547, 1547], [1549, 1549], [1550, 1550], [1552, 1552], [1556, 1556], [1557, 1557], [1559, 1559], [1561, 1561], [1562, 1562], [1563, 1563], [1571, 1571], [1573, 1573], [1574, 1574], [1575, 1575], [1577, 1577], [1578, 1578], [1580, 1580], [1582, 1582], [1583, 1583], [1585, 1585], [1587, 1587], [1593, 1593], [1594, 1594], [1596, 1596], [1597, 1597], [1598, 1598], [1603, 1603], [1606, 1606], [1607, 1607], [1610, 1610], [1616, 1616], [1617, 1617], [1618, 1618], [1619, 1619], [1620, 1620], [1622, 1622], [1624, 1624], [1630, 1630], [1631, 1631], [1632, 1632], [1633, 1633], [1634, 1634], [1637, 1637], [1640, 1640], [1641, 1641], [1642, 1642], [1643, 1643], [1646, 1646], [1648, 1648], [1649, 1649]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "set_line_length", "lineno_map": [[1665, 1665], [1668, 1668], [1672, 1672]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "decode_switches", "lineno_map": [[1686, 1686], [1688, 1688], [1689, 1689], [1691, 1691], [1695, 1695], [1699, 1699], [1700, 1700], [1705, 1705], [1706, 1706], [1711, 1711], [1713, 1713], [1714, 1714], [1716, 1716], [1720, 1720], [1721, 1721], [1726, 1726], [1729, 1729], [1730, 1730], [1731, 1731], [1732, 1732], [1733, 1733], [1734, 1734], [1735, 1735], [1736, 1736], [1737, 1737], [1738, 1738], [1739, 1739], [1740, 1740], [1741, 1741], [1742, 1742], [1744, 1744], [1746, 1746], [1748, 1748], [1749, 1749], [1750, 1750], [1751, 1751], [1759, 1759], [1760, 1760], [1761, 1761], [1766, 1766], [1767, 1767], [1768, 1768], [1771, 1771], [1774, 1774], [1778, 1778], [1779, 1779], [1787, 1787], [1788, 1788], [1791, 1791], [1794, 1794], [1797, 1797], [1801, 1801], [1805, 1805], [1809, 1809], [1814, 1814], [1815, 1815], [1816, 1816], [1818, 1818], [1819, 1819], [1820, 1820], [1821, 1821], [1822, 1822], [1826, 1826], [1830, 1830], [1831, 1831], [1835, 1835], [1837, 1837], [1841, 1841], [1845, 1845], [1849, 1849], [1853, 1853], [1857, 1857], [1858, 1858], [1862, 1862], [1863, 1863], [1867, 1867], [1871, 1871], [1875, 1875], [1879, 1879], [1883, 1883], [1884, 1884], [1888, 1888], [1892, 1892], [1893, 1893], [1897, 1897], [1898, 1898], [1903, 1903], [1907, 1907], [1911, 1911], [1912, 1912], [1916, 1916], [1920, 1920], [1924, 1924], [1928, 1928], [1932, 1932], [1936, 1936], [1940, 1940], [1944, 1944], [1948, 1948], [1952, 1952], [1956, 1956], [1960, 1960], [1961, 1961], [1965, 1965], [1966, 1966], [1970, 1970], [1971, 1971], [1975, 1975], [1976, 1976], [1981, 1981], [1982, 1982], [1986, 1986], [1991, 1991], [1992, 1992], [1993, 1993], [1994, 1994], [1999, 1999], [2000, 2000], [2004, 2004], [2008, 2008], [2012, 2012], [2016, 2016], [2017, 2017], [2023, 2023], [2024, 2024], [2028, 2028], [2030, 2030], [2031, 2031], [2032, 2032], [2034, 2034], [2039, 2039], [2047, 2047], [2048, 2048], [2052, 2052], [2054, 2054], [2055, 2055], [2056, 2056], [2061, 2061], [2067, 2067], [2068, 2068], [2074, 2074], [2078, 2078], [2083, 2083], [2085, 2085], [2086, 2086], [2087, 2087], [2088, 2088], [2093, 2093], [2095, 2095], [2099, 2099], [2102, 2102], [2104, 2104], [2107, 2107], [2111, 2111], [2113, 2113], [2114, 2114], [2116, 2116], [2118, 2118], [2119, 2119], [2121, 2121], [2123, 2123], [2124, 2124], [2129, 2129], [2132, 2132], [2134, 2134], [2135, 2135], [2136, 2136], [2137, 2137], [2138, 2138], [2139, 2139], [2140, 2140], [2141, 2141], [2142, 2142], [2143, 2143], [2144, 2144], [2147, 2147], [2148, 2148], [2151, 2151], [2152, 2152], [2157, 2157], [2158, 2158], [2168, 2168], [2169, 2169], [2171, 2171], [2174, 2174], [2176, 2176], [2179, 2179], [2180, 2180], [2181, 2181], [2183, 2183], [2185, 2185], [2187, 2187], [2190, 2190], [2192, 2192], [2193, 2193], [2194, 2194], [2195, 2195], [2198, 2198], [2199, 2199], [2201, 2201], [2203, 2203], [2204, 2204], [2208, 2208], [2211, 2211], [2216, 2216], [2223, 2223], [2224, 2224], [2225, 2225], [2226, 2226], [2227, 2227], [2229, 2229], [2231, 2231], [2234, 2234], [2239, 2239], [2243, 2243], [2244, 2244], [2248, 2248], [2250, 2250], [2251, 2251], [2252, 2252], [2257, 2257]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "get_funky_string", "lineno_map": [[2288, 2288], [2289, 2289], [2291, 2291], [2292, 2292], [2294, 2294], [2295, 2295], [2297, 2297], [2300, 2300], [2304, 2304], [2307, 2307], [2308, 2308], [2311, 2311], [2312, 2312], [2315, 2315], [2317, 2317], [2322, 2322], [2323, 2323], [2329, 2329], [2339, 2339], [2340, 2340], [2344, 2344], [2345, 2345], [2348, 2348], [2351, 2351], [2354, 2354], [2357, 2357], [2360, 2360], [2363, 2363], [2366, 2366], [2369, 2369], [2372, 2372], [2375, 2375], [2378, 2378], [2381, 2381], [2384, 2384], [2386, 2386], [2387, 2387], [2388, 2388], [2390, 2390], [2394, 2394], [2396, 2396], [2397, 2397], [2398, 2398], [2401, 2401], [2405, 2405], [2417, 2417], [2425, 2425], [2433, 2433], [2436, 2436], [2437, 2437], [2438, 2438], [2444, 2444], [2445, 2445], [2447, 2447], [2448, 2448], [2450, 2450], [2452, 2452], [2453, 2453], [2456, 2456], [2460, 2460], [2464, 2464], [2465, 2465], [2466, 2466]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "known_term_type", "lineno_map": [[2487, 2487], [2488, 2488], [2491, 2491], [2492, 2492], [2494, 2494], [2496, 2496], [2499, 2499]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "parse_ls_color", "lineno_map": [[2514, 2514], [2520, 2520], [2521, 2521], [2522, 2522], [2526, 2526], [2527, 2527], [2533, 2533], [2535, 2535], [2538, 2538], [2541, 2541], [2544, 2544], [2553, 2553], [2554, 2554], [2555, 2555], [2557, 2557], [2558, 2558], [2560, 2560], [2565, 2565], [2569, 2569], [2570, 2570], [2576, 2576], [2578, 2578], [2579, 2579], [2582, 2582], [2586, 2586], [2587, 2587], [2589, 2589], [2591, 2591], [2593, 2593], [2594, 2594], [2600, 2600], [2601, 2601], [2606, 2606], [2608, 2608], [2609, 2609], [2613, 2613], [2620, 2620], [2625, 2625], [2630, 2630], [2631, 2631], [2632, 2632], [2633, 2633], [2635, 2635], [2636, 2636], [2637, 2637], [2639, 2639], [2642, 2642], [2643, 2643], [2644, 2644]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "getenv_quoting_style", "lineno_map": [[2653, 2653], [2654, 2654], [2656, 2656], [2657, 2657], [2658, 2658], [2660, 2660], [2661, 2661]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "set_exit_status", "lineno_map": [[2672, 2672], [2673, 2673], [2674, 2674], [2675, 2675]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "file_failure", "lineno_map": [[2685, 2685], [2686, 2686]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "queue_directory", "lineno_map": [[2702, 2702], [2703, 2703], [2704, 2704], [2705, 2705], [2706, 2706], [2707, 2707]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "print_dir", "lineno_map": [[2720, 2720], [2723, 2723], [2724, 2724], [2725, 2725], [2727, 2727], [2731, 2731], [2734, 2734], [2737, 2737], [2738, 2738], [2739, 2739], [2741, 2741], [2742, 2742], [2743, 2743], [2749, 2749], [2751, 2751], [2753, 2753], [2754, 2754], [2758, 2758], [2761, 2761], [2763, 2763], [2765, 2765], [2766, 2766], [2767, 2767], [2768, 2768], [2770, 2770], [2771, 2771], [2773, 2773], [2774, 2774], [2775, 2775], [2776, 2776], [2778, 2778], [2781, 2781], [2783, 2783], [2793, 2793], [2794, 2794], [2795, 2795], [2797, 2797], [2799, 2799], [2802, 2802], [2804, 2804], [2805, 2805], [2806, 2806], [2807, 2807], [2808, 2808], [2809, 2809], [2810, 2810], [2812, 2812], [2816, 2816], [2824, 2824], [2825, 2825], [2830, 2830], [2831, 2831], [2832, 2832], [2836, 2836], [2838, 2838], [2839, 2839], [2848, 2848], [2851, 2851], [2853, 2853], [2858, 2858], [2863, 2863], [2864, 2864], [2866, 2866], [2871, 2871], [2872, 2872], [2873, 2873], [2874, 2874], [2875, 2875], [2877, 2877], [2878, 2878], [2881, 2881], [2882, 2882]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "add_ignore_pattern", "lineno_map": [[2893, 2893], [2894, 2894], [2896, 2896], [2897, 2897]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "patterns_match", "lineno_map": [[2906, 2906], [2907, 2907]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "file_ignored", "lineno_map": [[2918, 2918], [2919, 2919], [2920, 2920], [2921, 2921], [2922, 2922]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "has_capability", "lineno_map": [[2962, 2962]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "free_ent", "lineno_map": [[2972, 2972], [2973, 2973], [2974, 2974], [2975, 2975], [2977, 2977], [2978, 2978], [2980, 2980]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "clear_files", "lineno_map": [[2988, 2988], [2990, 2990], [2991, 2991], [2994, 2994], [2995, 2995], [2996, 2996], [2997, 2997], [2998, 2998], [2999, 2999], [3000, 3000], [3001, 3001], [3002, 3002], [3003, 3003], [3004, 3004], [3005, 3005], [3006, 3006]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "getfilecon_cache", "lineno_map": [[3027, 3027], [3029, 3029], [3032, 3032], [3039, 3039], [3040, 3040], [3041, 3041], [3042, 3042], [3043, 3043]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "file_has_acl_cache", "lineno_map": [[3057, 3057], [3059, 3059], [3065, 3065], [3066, 3066], [3067, 3067], [3068, 3068]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "has_capability_cache", "lineno_map": [[3082, 3082], [3084, 3084], [3088, 3088], [3089, 3089], [3090, 3090]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "needs_quoting", "lineno_map": [[3098, 3098]], "source_code_file": "src/ls.c", "binary_file1": "vdir.json", "binary_file2": "vdir.json"}
{"fname": "usage", "lineno_map": [[83, 83], [84, 84], [87, 87], [88, 88], [94, 94], [98, 98], [99, 99], [100, 100], [112, 112], [114, 114]], "source_code_file": "src/tee.c", "binary_file1": "tee.json", "binary_file2": "tee.json"}
{"fname": "main", "lineno_map": [[124, 124], [125, 125], [126, 126], [127, 127], [129, 129], [131, 131], [132, 132], [134, 134], [136, 136], [139, 139], [143, 143], [147, 147], [148, 148], [151, 151], [154, 154], [156, 156], [159, 159], [163, 163], [164, 164], [166, 166], [167, 167], [172, 172], [173, 173], [174, 174]], "source_code_file": "src/tee.c", "binary_file1": "tee.json", "binary_file2": "tee.json"}
{"fname": "tee_files", "lineno_map": [[186, 186], [189, 189], [191, 191], [192, 192], [197, 197], [198, 198], [199, 199], [204, 204], [205, 205], [206, 206], [207, 207], [208, 208], [209, 209], [211, 211], [214, 214], [215, 215], [217, 217], [218, 218], [219, 219], [220, 220], [224, 224], [225, 225], [229, 229], [231, 231], [232, 232], [233, 233], [234, 234], [239, 239], [240, 240], [241, 241], [243, 243], [244, 244], [245, 245], [246, 246], [247, 247], [248, 248], [250, 250], [251, 251], [252, 252], [254, 254], [255, 255], [256, 256], [257, 257], [261, 261], [263, 263], [264, 264], [268, 268], [269, 269], [271, 271], [272, 272], [275, 275]], "source_code_file": "src/tee.c", "binary_file1": "tee.json", "binary_file2": "tee.json"}
{"fname": "emit_stdin_note", "lineno_map": [[579, 579], [580, 580], [583, 583]], "source_code_file": "src/tac.c", "binary_file1": "tac.json", "binary_file2": "tac.json"}
{"fname": "emit_mandatory_arg_note", "lineno_map": [[587, 587], [590, 590]], "source_code_file": "src/tac.c", "binary_file1": "tac.json", "binary_file2": "tac.json"}
{"fname": "emit_ancillary_info", "lineno_map": [[631, 631], [632, 632], [642, 642], [643, 643], [646, 646], [649, 649], [651, 651], [655, 655], [656, 656], [662, 662], [665, 665], [667, 667], [669, 669]], "source_code_file": "src/tac.c", "binary_file1": "tac.json", "binary_file2": "tac.json"}
{"fname": "usage", "lineno_map": [[128, 128], [129, 129], [132, 132], [136, 136], [140, 140], [141, 141], [143, 143], [148, 148], [149, 149], [150, 150], [152, 152]], "source_code_file": "src/tac.c", "binary_file1": "tac.json", "binary_file2": "tac.json"}
{"fname": "output", "lineno_map": [[163, 163], [164, 164], [166, 166], [168, 168], [169, 169], [174, 174], [176, 176], [177, 177], [178, 178], [179, 179], [180, 180], [181, 181], [184, 184], [185, 185]], "source_code_file": "src/tac.c", "binary_file1": "tac.json", "binary_file2": "tac.json"}
{"fname": "tac_seekable", "lineno_map": [[208, 208], [209, 209], [210, 210], [211, 211], [218, 218], [219, 219], [221, 221], [222, 222], [223, 223], [228, 228], [229, 229], [231, 231], [232, 232], [233, 233], [234, 234], [238, 238], [240, 240], [241, 241], [243, 243], [244, 244], [246, 246], [249, 249], [251, 251], [255, 255], [257, 257], [258, 258], [268, 268], [270, 270], [271, 271], [272, 272], [275, 275], [276, 276], [278, 278], [279, 279], [282, 282], [283, 283], [285, 285], [290, 290], [291, 291], [297, 297], [298, 298], [305, 305], [307, 307], [310, 310], [314, 314], [315, 315], [322, 322], [323, 323], [325, 325], [326, 326], [327, 327], [328, 328], [329, 329], [330, 330], [331, 331], [335, 335], [336, 336], [339, 339], [340, 340], [342, 342], [343, 343], [347, 347], [348, 348], [350, 350], [351, 351], [353, 353], [355, 355], [357, 357], [364, 364], [366, 366], [370, 370], [371, 371], [372, 372], [373, 373], [377, 377], [378, 378], [382, 382], [383, 383]], "source_code_file": "src/tac.c", "binary_file1": "tac.json", "binary_file2": "tac.json"}
{"fname": "record_or_unlink_tempfile", "lineno_map": [[422, 422]], "source_code_file": "src/tac.c", "binary_file1": "tac.json", "binary_file2": "tac.json"}
{"fname": "temp_stream", "lineno_map": [[435, 435], [437, 437], [438, 438], [439, 439], [440, 440], [442, 442], [455, 455], [456, 456], [458, 458], [463, 463], [464, 464], [466, 466], [468, 468], [469, 469], [471, 471], [472, 472], [476, 476], [480, 480], [481, 481], [482, 482], [484, 484], [490, 490], [491, 491]], "source_code_file": "src/tac.c", "binary_file1": "tac.json", "binary_file2": "tac.json"}
{"fname": "copy_to_temp", "lineno_map": [[504, 504], [505, 505], [510, 510], [511, 511], [513, 513], [515, 515], [519, 519], [521, 521], [528, 528], [531, 531], [533, 533], [537, 537], [538, 538]], "source_code_file": "src/tac.c", "binary_file1": "tac.json", "binary_file2": "tac.json"}
{"fname": "tac_nonseekable", "lineno_map": [[550, 550], [551, 551], [554, 554]], "source_code_file": "src/tac.c", "binary_file1": "tac.json", "binary_file2": "tac.json"}
{"fname": "tac_file", "lineno_map": [[568, 568], [570, 570], [572, 572], [573, 573], [574, 574], [575, 575], [579, 579], [580, 580], [582, 582], [588, 588], [590, 590], [591, 591], [592, 592], [594, 594], [596, 596], [597, 597]], "source_code_file": "src/tac.c", "binary_file1": "tac.json", "binary_file2": "tac.json"}
{"fname": "main", "lineno_map": [[616, 616], [617, 617], [618, 618], [619, 619], [621, 621], [623, 623], [624, 624], [625, 625], [627, 627], [629, 629], [632, 632], [635, 635], [638, 638], [640, 640], [641, 641], [643, 643], [647, 647], [649, 649], [650, 650], [652, 652], [653, 653], [654, 654], [655, 655], [656, 656], [658, 658], [659, 659], [662, 662], [664, 664], [665, 665], [667, 667], [668, 668], [669, 669], [671, 671], [672, 672], [673, 673], [674, 674], [675, 675], [676, 676], [678, 678], [679, 679], [683, 683], [686, 686], [687, 687], [688, 688], [690, 690], [693, 693], [694, 694], [695, 695], [699, 699], [701, 701], [703, 703], [704, 704]], "source_code_file": "src/tac.c", "binary_file1": "tac.json", "binary_file2": "tac.json"}
{"fname": "emit_stdin_note", "lineno_map": [[579, 579], [580, 580], [583, 583]], "source_code_file": "src/tail.c", "binary_file1": "tail.json", "binary_file2": "tail.json"}
{"fname": "emit_ancillary_info", "lineno_map": [[631, 631], [632, 632], [642, 642], [643, 643], [645, 645], [646, 646], [649, 649], [651, 651], [655, 655], [656, 656], [665, 665], [667, 667]], "source_code_file": "src/tail.c", "binary_file1": "tail.json", "binary_file2": "tail.json"}
{"fname": "usable_st_size", "lineno_map": [[703, 703], [704, 704], [705, 705]], "source_code_file": "src/tail.c", "binary_file1": "tail.json", "binary_file2": "tail.json"}
{"fname": "is_local_fs_type", "lineno_map": [[6, 6], [7, 7], [9, 9], [10, 10], [11, 11], [12, 12], [13, 13], [14, 14], [15, 15], [16, 16], [17, 17], [18, 18], [19, 19], [20, 20], [21, 21], [22, 22], [23, 23], [24, 24], [25, 25], [26, 26], [27, 27], [28, 28], [29, 29], [30, 30], [31, 31], [32, 32], [33, 33], [34, 34], [35, 35], [36, 36], [37, 37], [38, 38], [39, 39], [40, 40], [41, 41], [42, 42], [43, 43], [44, 44], [45, 45], [46, 46], [47, 47], [48, 48], [49, 49], [50, 50], [51, 51], [52, 52], [53, 53], [54, 54], [55, 55], [56, 56], [57, 57], [58, 58], [59, 59], [60, 60], [61, 61], [62, 62], [63, 63], [64, 64], [65, 65], [66, 66], [67, 67], [68, 68], [69, 69], [70, 70], [71, 71], [72, 72], [73, 73], [74, 74], [75, 75], [76, 76], [77, 77], [78, 78], [79, 79], [80, 80], [81, 81], [82, 82], [83, 83], [84, 84], [85, 85], [86, 86], [87, 87], [89, 89], [90, 90], [91, 91], [92, 92], [93, 93], [94, 94], [95, 95], [96, 96], [97, 97], [98, 98], [99, 99], [100, 100], [101, 101], [102, 102], [103, 103], [104, 104], [106, 106], [107, 107], [108, 108], [109, 109], [111, 111], [112, 112], [113, 113], [114, 114], [116, 116], [117, 117], [118, 118], [119, 119], [120, 120], [121, 121], [122, 122], [123, 123], [124, 124], [125, 125], [126, 126], [127, 127], [128, 128], [129, 129], [130, 130], [132, 132]], "source_code_file": "src/tail.c", "binary_file1": "tail.json", "binary_file2": "tail.json"}
{"fname": "usage", "lineno_map": [[257, 257], [258, 258], [261, 261], [265, 265], [270, 270], [271, 271], [273, 273], [277, 277], [283, 283], [296, 296], [301, 301], [308, 308], [311, 311], [312, 312], [313, 313], [320, 320], [328, 328], [330, 330]], "source_code_file": "src/tail.c", "binary_file1": "tail.json", "binary_file2": "tail.json"}
{"fname": "check_output_alive", "lineno_map": [[338, 338], [342, 342], [345, 345], [346, 346], [350, 350], [351, 351]], "source_code_file": "src/tail.c", "binary_file1": "tail.json", "binary_file2": "tail.json"}
{"fname": "record_open_fd", "lineno_map": [[375, 375], [376, 376], [377, 377], [378, 378], [379, 379], [380, 380], [381, 381], [382, 382], [383, 383]], "source_code_file": "src/tail.c", "binary_file1": "tail.json", "binary_file2": "tail.json"}
{"fname": "close_fd", "lineno_map": [[391, 391], [393, 393]], "source_code_file": "src/tail.c", "binary_file1": "tail.json", "binary_file2": "tail.json"}
{"fname": "write_header", "lineno_map": [[402, 402], [403, 403]], "source_code_file": "src/tail.c", "binary_file1": "tail.json", "binary_file2": "tail.json"}
{"fname": "xwrite_stdout", "lineno_map": [[412, 412], [414, 414], [415, 415]], "source_code_file": "src/tail.c", "binary_file1": "tail.json", "binary_file2": "tail.json"}
{"fname": "dump_remainder", "lineno_map": [[430, 430], [432, 432], [436, 436], [437, 437], [438, 438], [440, 440], [441, 441], [445, 445], [447, 447], [449, 449], [450, 450], [452, 452], [453, 453], [454, 454], [456, 456], [457, 457]], "source_code_file": "src/tail.c", "binary_file1": "tail.json", "binary_file2": "tail.json"}
{"fname": "xlseek", "lineno_map": [[473, 473], [477, 477], [480, 480], [481, 481], [484, 484], [488, 488], [492, 492], [496, 496], [499, 499]], "source_code_file": "src/tail.c", "binary_file1": "tail.json", "binary_file2": "tail.json"}
{"fname": "file_lines", "lineno_map": [[517, 517], [519, 519], [524, 524], [525, 525], [526, 526], [529, 529], [530, 530], [531, 531], [532, 532], [534, 534], [537, 537], [540, 540], [541, 541], [547, 547], [548, 548], [551, 551], [552, 552], [554, 554], [555, 555], [559, 559], [560, 560], [561, 561], [562, 562], [568, 568], [572, 572], [573, 573], [577, 577], [578, 578], [580, 580], [581, 581], [583, 583], [587, 587], [589, 589]], "source_code_file": "src/tail.c", "binary_file1": "tail.json", "binary_file2": "tail.json"}
{"fname": "pipe_lines", "lineno_map": [[612, 612], [613, 613], [616, 616], [617, 617], [618, 618], [619, 619], [624, 624], [625, 625], [627, 627], [628, 628], [629, 629], [630, 630], [634, 634], [635, 635], [636, 636], [638, 638], [639, 639], [642, 642], [647, 647], [649, 649], [650, 650], [651, 651], [660, 660], [661, 661], [663, 663], [664, 664], [665, 665], [668, 668], [672, 672], [674, 674], [676, 676], [677, 677], [682, 682], [686, 686], [690, 690], [692, 692], [693, 693], [698, 698], [699, 699], [703, 703], [704, 704], [705, 705], [710, 710], [712, 712], [713, 713], [714, 714], [718, 718], [721, 721], [722, 722], [725, 725], [727, 727], [728, 728], [729, 729]], "source_code_file": "src/tail.c", "binary_file1": "tail.json", "binary_file2": "tail.json"}
{"fname": "pipe_bytes", "lineno_map": [[751, 751], [752, 752], [755, 755], [756, 756], [757, 757], [758, 758], [763, 763], [764, 764], [766, 766], [767, 767], [768, 768], [770, 770], [774, 774], [776, 776], [777, 777], [786, 786], [787, 787], [789, 789], [790, 790], [791, 791], [795, 795], [800, 800], [802, 802], [804, 804], [805, 805], [811, 811], [812, 812], [816, 816], [817, 817], [819, 819], [820, 820], [822, 822], [823, 823], [826, 826], [828, 828], [829, 829], [830, 830]], "source_code_file": "src/tail.c", "binary_file1": "tail.json", "binary_file2": "tail.json"}
{"fname": "start_bytes", "lineno_map": [[845, 845], [847, 847], [848, 848], [850, 850], [852, 852], [855, 855], [856, 856], [857, 857], [860, 860], [861, 861], [862, 862]], "source_code_file": "src/tail.c", "binary_file1": "tail.json", "binary_file2": "tail.json"}
{"fname": "start_lines", "lineno_map": [[878, 878], [884, 884], [885, 885], [887, 887], [889, 889], [893, 893], [895, 895], [897, 897], [898, 898], [900, 900], [901, 901], [903, 903], [904, 904]], "source_code_file": "src/tail.c", "binary_file1": "tail.json", "binary_file2": "tail.json"}
{"fname": "fremote", "lineno_map": [[917, 917], [921, 921], [922, 922], [926, 926], [927, 927], [932, 932], [942, 942], [945, 945]], "source_code_file": "src/tail.c", "binary_file1": "tail.json", "binary_file2": "tail.json"}
{"fname": "recheck", "lineno_map": [[958, 958], [959, 959], [960, 960], [961, 961], [963, 963], [965, 965], [967, 967], [971, 971], [973, 973], [974, 974], [979, 979], [980, 980], [981, 981], [983, 983], [986, 986], [988, 988], [989, 989], [990, 990], [992, 992], [998, 998], [1006, 1006], [1007, 1007], [1009, 1009], [1011, 1011], [1012, 1012], [1013, 1013], [1014, 1014], [1015, 1015], [1016, 1016], [1018, 1018], [1020, 1020], [1022, 1022], [1023, 1023], [1024, 1024], [1026, 1026], [1027, 1027], [1031, 1031], [1034, 1034], [1035, 1035], [1037, 1037], [1038, 1038], [1039, 1039], [1041, 1041], [1043, 1043], [1044, 1044], [1045, 1045], [1047, 1047], [1054, 1054], [1056, 1056], [1057, 1057], [1060, 1060], [1064, 1064], [1066, 1066], [1067, 1067], [1071, 1071], [1077, 1077], [1086, 1086], [1089, 1089], [1090, 1090]], "source_code_file": "src/tail.c", "binary_file1": "tail.json", "binary_file2": "tail.json"}
{"fname": "any_live_files", "lineno_map": [[1105, 1105], [1108, 1108], [1110, 1110], [1114, 1114]], "source_code_file": "src/tail.c", "binary_file1": "tail.json", "binary_file2": "tail.json"}
{"fname": "tail_forever", "lineno_map": [[1133, 1133], [1134, 1134], [1136, 1136], [1138, 1138], [1143, 1143], [1145, 1145], [1153, 1153], [1154, 1154], [1156, 1156], [1158, 1158], [1159, 1159], [1162, 1162], [1163, 1163], [1164, 1164], [1166, 1166], [1168, 1168], [1169, 1169], [1170, 1170], [1171, 1171], [1172, 1172], [1175, 1175], [1181, 1181], [1186, 1186], [1189, 1189], [1191, 1191], [1193, 1193], [1194, 1194], [1195, 1195], [1196, 1196], [1197, 1197], [1200, 1200], [1201, 1201], [1202, 1202], [1204, 1204], [1205, 1205], [1206, 1206], [1208, 1208], [1209, 1209], [1211, 1211], [1217, 1217], [1218, 1218], [1221, 1221], [1226, 1226], [1228, 1228], [1231, 1231], [1232, 1232], [1235, 1235], [1237, 1237], [1238, 1238], [1239, 1239], [1247, 1247], [1248, 1248], [1249, 1249], [1250, 1250], [1252, 1252], [1254, 1254], [1256, 1256], [1257, 1257], [1260, 1260], [1262, 1262], [1266, 1266], [1267, 1267], [1269, 1269], [1272, 1272], [1274, 1274], [1279, 1279], [1280, 1280], [1284, 1284], [1286, 1286], [1287, 1287]], "source_code_file": "src/tail.c", "binary_file1": "tail.json", "binary_file2": "tail.json"}
{"fname": "any_remote_file", "lineno_map": [[1301, 1301], [1302, 1302]], "source_code_file": "src/tail.c", "binary_file1": "tail.json", "binary_file2": "tail.json"}
{"fname": "any_non_remote_file", "lineno_map": [[1313, 1313], [1314, 1314]], "source_code_file": "src/tail.c", "binary_file1": "tail.json", "binary_file2": "tail.json"}
{"fname": "any_symlinks", "lineno_map": [[1328, 1328], [1329, 1329]], "source_code_file": "src/tail.c", "binary_file1": "tail.json", "binary_file2": "tail.json"}
{"fname": "any_non_regular_fifo", "lineno_map": [[1342, 1342], [1343, 1343]], "source_code_file": "src/tail.c", "binary_file1": "tail.json", "binary_file2": "tail.json"}
{"fname": "tailable_stdin", "lineno_map": [[1354, 1354], [1355, 1355]], "source_code_file": "src/tail.c", "binary_file1": "tail.json", "binary_file2": "tail.json"}
{"fname": "wd_hasher", "lineno_map": [[1363, 1363]], "source_code_file": "src/tail.c", "binary_file1": "tail.json", "binary_file2": "tail.json"}
{"fname": "wd_comparator", "lineno_map": [[1370, 1370], [1371, 1371]], "source_code_file": "src/tail.c", "binary_file1": "tail.json", "binary_file2": "tail.json"}
{"fname": "check_fspec", "lineno_map": [[1383, 1383], [1386, 1386], [1388, 1388], [1390, 1390], [1391, 1391], [1392, 1392], [1401, 1401], [1403, 1403], [1404, 1404], [1405, 1405], [1407, 1407], [1408, 1408], [1411, 1411], [1413, 1413], [1415, 1415], [1417, 1417], [1419, 1419], [1420, 1420], [1421, 1421]], "source_code_file": "src/tail.c", "binary_file1": "tail.json", "binary_file2": "tail.json"}
{"fname": "tail_forever_inotify", "lineno_map": [[1437, 1437], [1442, 1442], [1443, 1443], [1444, 1444], [1445, 1445], [1446, 1446], [1448, 1448], [1450, 1450], [1451, 1451], [1453, 1453], [1454, 1454], [1455, 1455], [1458, 1458], [1461, 1461], [1462, 1462], [1468, 1468], [1470, 1470], [1472, 1472], [1473, 1473], [1474, 1474], [1476, 1476], [1478, 1478], [1480, 1480], [1481, 1481], [1482, 1482], [1484, 1484], [1488, 1488], [1493, 1493], [1495, 1495], [1497, 1497], [1498, 1498], [1499, 1499], [1501, 1501], [1502, 1502], [1509, 1509], [1511, 1511], [1513, 1513], [1514, 1514], [1515, 1515], [1517, 1517], [1518, 1518], [1521, 1521], [1522, 1522], [1523, 1523], [1526, 1526], [1527, 1527], [1529, 1529], [1538, 1538], [1539, 1539], [1541, 1541], [1543, 1543], [1546, 1546], [1549, 1549], [1553, 1553], [1555, 1555], [1558, 1558], [1559, 1559], [1560, 1560], [1568, 1568], [1569, 1569], [1571, 1571], [1572, 1572], [1573, 1573], [1575, 1575], [1581, 1581], [1585, 1585], [1586, 1586], [1600, 1600], [1601, 1601], [1602, 1602], [1604, 1604], [1610, 1610], [1614, 1614], [1616, 1616], [1617, 1617], [1619, 1619], [1621, 1621], [1622, 1622], [1625, 1625], [1626, 1626], [1631, 1631], [1632, 1632], [1633, 1633], [1634, 1634], [1636, 1636], [1637, 1637], [1639, 1639], [1641, 1641], [1642, 1642], [1644, 1644], [1648, 1648], [1654, 1654], [1656, 1656], [1657, 1657], [1661, 1661], [1662, 1662], [1664, 1664], [1665, 1665], [1666, 1666], [1667, 1667], [1670, 1670], [1671, 1671], [1674, 1674], [1675, 1675], [1676, 1676], [1682, 1682], [1684, 1684], [1686, 1686], [1688, 1688], [1689, 1689], [1690, 1690], [1691, 1691], [1697, 1697], [1700, 1700], [1704, 1704], [1705, 1705], [1710, 1710], [1711, 1711], [1713, 1713], [1715, 1715], [1716, 1716], [1718, 1718], [1721, 1721], [1724, 1724], [1726, 1726], [1728, 1728], [1729, 1729], [1730, 1730], [1736, 1736], [1743, 1743], [1745, 1745], [1747, 1747], [1749, 1749], [1750, 1750], [1753, 1753], [1755, 1755], [1756, 1756], [1761, 1761], [1762, 1762], [1764, 1764], [1765, 1765], [1766, 1766], [1767, 1767], [1770, 1770], [1771, 1771], [1774, 1774], [1775, 1775], [1780, 1780], [1781, 1781], [1784, 1784], [1785, 1785], [1787, 1787], [1793, 1793], [1795, 1795], [1796, 1796], [1807, 1807], [1809, 1809], [1811, 1811]], "source_code_file": "src/tail.c", "binary_file1": "tail.json", "binary_file2": "tail.json"}
{"fname": "tail_bytes", "lineno_map": [[1825, 1825], [1827, 1827], [1831, 1831], [1833, 1833], [1834, 1834], [1835, 1835], [1836, 1836], [1837, 1837], [1840, 1840], [1841, 1841], [1844, 1844], [1848, 1848], [1849, 1849], [1851, 1851], [1853, 1853], [1854, 1854], [1855, 1855], [1856, 1856], [1858, 1858], [1860, 1860], [1861, 1861], [1862, 1862], [1864, 1864], [1866, 1866], [1868, 1868], [1869, 1869], [1872, 1872], [1875, 1875]], "source_code_file": "src/tail.c", "binary_file1": "tail.json", "binary_file2": "tail.json"}
{"fname": "tail_lines", "lineno_map": [[1888, 1888], [1890, 1890], [1894, 1894], [1896, 1896], [1897, 1897], [1899, 1899], [1903, 1903], [1908, 1908], [1909, 1909], [1910, 1910], [1911, 1911], [1913, 1913], [1914, 1914], [1915, 1915], [1925, 1925], [1926, 1926]], "source_code_file": "src/tail.c", "binary_file1": "tail.json", "binary_file2": "tail.json"}
{"fname": "tail", "lineno_map": [[1948, 1948], [1949, 1949]], "source_code_file": "src/tail.c", "binary_file1": "tail.json", "binary_file2": "tail.json"}
{"fname": "tail_file", "lineno_map": [[1964, 1964], [1966, 1966], [1968, 1968], [1969, 1969], [1970, 1970], [1973, 1973], [1975, 1975], [1977, 1977], [1979, 1979], [1981, 1981], [1982, 1982], [1983, 1983], [1984, 1984], [1985, 1985], [1987, 1987], [1989, 1989], [1995, 1995], [1996, 1996], [1997, 1997], [1998, 1998], [2008, 2008], [2009, 2009], [2011, 2011], [2012, 2012], [2013, 2013], [2016, 2016], [2018, 2018], [2019, 2019], [2020, 2020], [2021, 2021], [2022, 2022], [2024, 2024], [2027, 2027], [2029, 2029], [2030, 2030], [2031, 2031], [2038, 2038], [2039, 2039], [2044, 2044], [2046, 2046], [2048, 2048]], "source_code_file": "src/tail.c", "binary_file1": "tail.json", "binary_file2": "tail.json"}
{"fname": "parse_obsolete_option", "lineno_map": [[2071, 2071], [2073, 2073], [2074, 2074], [2078, 2078], [2079, 2079], [2080, 2080], [2083, 2083], [2084, 2084], [2085, 2085], [2086, 2086], [2088, 2088], [2095, 2095], [2098, 2098], [2106, 2106], [2109, 2109], [2113, 2113], [2114, 2114], [2115, 2115], [2116, 2116], [2118, 2118], [2120, 2120], [2121, 2121], [2122, 2122], [2125, 2125], [2127, 2127], [2128, 2128], [2131, 2131], [2134, 2134], [2135, 2135], [2136, 2136], [2137, 2137], [2140, 2140], [2145, 2145], [2146, 2146], [2147, 2147]], "source_code_file": "src/tail.c", "binary_file1": "tail.json", "binary_file2": "tail.json"}
{"fname": "parse_options", "lineno_map": [[2159, 2159], [2163, 2163], [2166, 2166], [2167, 2167], [2168, 2168], [2173, 2173], [2174, 2174], [2175, 2175], [2176, 2176], [2177, 2177], [2179, 2179], [2187, 2187], [2188, 2188], [2189, 2189], [2191, 2191], [2196, 2196], [2201, 2201], [2202, 2202], [2203, 2203], [2207, 2207], [2211, 2211], [2215, 2215], [2219, 2219], [2225, 2225], [2226, 2226], [2228, 2228], [2233, 2233], [2237, 2237], [2240, 2240], [2242, 2242], [2246, 2246], [2249, 2249], [2253, 2253], [2255, 2255], [2257, 2257], [2258, 2258], [2261, 2261], [2262, 2262], [2265, 2265], [2266, 2266], [2267, 2267], [2268, 2268], [2270, 2270], [2271, 2271]], "source_code_file": "src/tail.c", "binary_file1": "tail.json", "binary_file2": "tail.json"}
{"fname": "ignore_fifo_and_pipe", "lineno_map": [[2284, 2284], [2286, 2286], [2288, 2288], [2289, 2289], [2290, 2290], [2291, 2291], [2292, 2292], [2294, 2294], [2296, 2296], [2297, 2297], [2300, 2300]], "source_code_file": "src/tail.c", "binary_file1": "tail.json", "binary_file2": "tail.json"}
{"fname": "main", "lineno_map": [[2309, 2309], [2310, 2310], [2314, 2314], [2324, 2324], [2327, 2327], [2328, 2328], [2329, 2329], [2330, 2330], [2332, 2332], [2334, 2334], [2336, 2336], [2337, 2337], [2338, 2338], [2339, 2339], [2340, 2340], [2341, 2341], [2342, 2342], [2347, 2347], [2349, 2349], [2350, 2350], [2355, 2355], [2357, 2357], [2358, 2358], [2363, 2363], [2364, 2364], [2368, 2368], [2370, 2370], [2371, 2371], [2372, 2372], [2375, 2375], [2376, 2376], [2382, 2382], [2386, 2386], [2387, 2387], [2388, 2388], [2390, 2390], [2391, 2391], [2397, 2397], [2400, 2400], [2401, 2401], [2402, 2402], [2404, 2404], [2405, 2405], [2406, 2406], [2408, 2408], [2410, 2410], [2411, 2411], [2413, 2413], [2419, 2419], [2420, 2420], [2421, 2421], [2422, 2422], [2466, 2466], [2467, 2467], [2468, 2468], [2469, 2469], [2470, 2470], [2471, 2471], [2472, 2472], [2474, 2474], [2476, 2476], [2477, 2477], [2482, 2482], [2483, 2483], [2485, 2485], [2488, 2488], [2493, 2493], [2497, 2497], [2498, 2498], [2499, 2499], [2500, 2500], [2504, 2504], [2505, 2505], [2510, 2510], [2511, 2511]], "source_code_file": "src/tail.c", "binary_file1": "tail.json", "binary_file2": "tail.json"}
{"fname": "emit_mandatory_arg_note", "lineno_map": [[586, 586], [587, 587], [590, 590]], "source_code_file": "src/numfmt.c", "binary_file1": "numfmt.json", "binary_file2": "numfmt.json"}
{"fname": "default_scale_base", "lineno_map": [[219, 219]], "source_code_file": "src/numfmt.c", "binary_file1": "numfmt.json", "binary_file2": "numfmt.json"}
{"fname": "suffix_power", "lineno_map": [[243, 243]], "source_code_file": "src/numfmt.c", "binary_file1": "numfmt.json", "binary_file2": "numfmt.json"}
{"fname": "suffix_power_char", "lineno_map": [[277, 277]], "source_code_file": "src/numfmt.c", "binary_file1": "numfmt.json", "binary_file2": "numfmt.json"}
{"fname": "powerld", "lineno_map": [[315, 315], [316, 316], [322, 322], [323, 323]], "source_code_file": "src/numfmt.c", "binary_file1": "numfmt.json", "binary_file2": "numfmt.json"}
{"fname": "expld", "lineno_map": [[341, 341], [343, 343], [345, 345], [347, 347], [348, 348], [351, 351], [352, 352]], "source_code_file": "src/numfmt.c", "binary_file1": "numfmt.json", "binary_file2": "numfmt.json"}
{"fname": "simple_round_ceiling", "lineno_map": [[361, 361], [362, 362], [363, 363]], "source_code_file": "src/numfmt.c", "binary_file1": "numfmt.json", "binary_file2": "numfmt.json"}
{"fname": "simple_round", "lineno_map": [[403, 403], [404, 404], [406, 406], [409, 409], [413, 413], [417, 417], [421, 421], [425, 425]], "source_code_file": "src/numfmt.c", "binary_file1": "numfmt.json", "binary_file2": "numfmt.json"}
{"fname": "simple_strtod_int", "lineno_map": [[469, 469], [471, 471], [472, 472], [473, 473], [475, 475], [477, 477], [478, 478], [481, 481], [483, 483], [484, 484], [486, 486], [488, 488], [490, 490], [491, 491], [493, 493], [494, 494], [496, 496], [499, 499], [500, 500], [502, 502], [504, 504], [505, 505], [507, 507], [508, 508], [510, 510], [511, 511]], "source_code_file": "src/numfmt.c", "binary_file1": "numfmt.json", "binary_file2": "numfmt.json"}
{"fname": "simple_strtod_float", "lineno_map": [[537, 537], [539, 539], [540, 540], [543, 543], [544, 544], [548, 548], [551, 551], [554, 554], [555, 555], [556, 556], [557, 557], [559, 559], [560, 560], [561, 561], [565, 565], [567, 567], [571, 571], [573, 573], [574, 574], [576, 576], [579, 579], [580, 580], [582, 582]], "source_code_file": "src/numfmt.c", "binary_file1": "numfmt.json", "binary_file2": "numfmt.json"}
{"fname": "simple_strtod_human", "lineno_map": [[611, 611], [613, 613], [615, 615], [622, 622], [624, 624], [627, 627], [630, 630], [635, 635], [636, 636], [638, 638], [641, 641], [644, 644], [645, 645], [647, 647], [651, 651], [652, 652], [653, 653], [657, 657], [660, 660], [662, 662], [663, 663], [668, 668], [670, 670], [673, 673], [675, 675]], "source_code_file": "src/numfmt.c", "binary_file1": "numfmt.json", "binary_file2": "numfmt.json"}
{"fname": "simple_strtod_fatal", "lineno_map": [[684, 684], [686, 686], [691, 691], [694, 694], [698, 698], [702, 702], [706, 706], [710, 710], [715, 715], [716, 716]], "source_code_file": "src/numfmt.c", "binary_file1": "numfmt.json", "binary_file2": "numfmt.json"}
{"fname": "double_to_human", "lineno_map": [[731, 731], [732, 732], [734, 734], [735, 735], [737, 737], [738, 738], [740, 740], [742, 742], [744, 744], [745, 745], [746, 746], [748, 748], [752, 752], [754, 754], [755, 755], [756, 756], [762, 762], [765, 765], [766, 766], [767, 767], [770, 770], [771, 771], [772, 772], [773, 773], [777, 777], [780, 780], [781, 781], [782, 782], [787, 787], [789, 789], [790, 790], [795, 795], [798, 798], [800, 800], [802, 802], [805, 805], [807, 807], [808, 808], [811, 811], [812, 812], [814, 814]], "source_code_file": "src/numfmt.c", "binary_file1": "numfmt.json", "binary_file2": "numfmt.json"}
{"fname": "unit_to_umax", "lineno_map": [[827, 827], [828, 828], [829, 829], [830, 830], [832, 832], [835, 835], [837, 837], [838, 838], [839, 839], [841, 841], [842, 842], [845, 845], [846, 846], [847, 847], [850, 850], [853, 853], [855, 855], [857, 857], [858, 858], [861, 861]], "source_code_file": "src/numfmt.c", "binary_file1": "numfmt.json", "binary_file2": "numfmt.json"}
{"fname": "setup_padding_buffer", "lineno_map": [[870, 870], [873, 873], [874, 874]], "source_code_file": "src/numfmt.c", "binary_file1": "numfmt.json", "binary_file2": "numfmt.json"}
{"fname": "usage", "lineno_map": [[880, 880], [881, 881], [884, 884], [887, 887], [890, 890], [891, 891], [894, 894], [897, 897], [901, 901], [905, 905], [909, 909], [912, 912], [916, 916], [920, 920], [924, 924], [931, 931], [935, 935], [939, 939], [942, 942], [945, 945], [948, 948], [949, 949], [951, 951], [954, 954], [957, 957], [963, 963], [968, 968], [973, 973], [979, 979], [989, 989], [997, 997], [1006, 1006], [1025, 1025], [1027, 1027]], "source_code_file": "src/numfmt.c", "binary_file1": "numfmt.json", "binary_file2": "numfmt.json"}
{"fname": "parse_format_string", "lineno_map": [[1049, 1049], [1051, 1051], [1052, 1052], [1053, 1053], [1055, 1055], [1057, 1057], [1058, 1058], [1060, 1060], [1063, 1063], [1066, 1066], [1067, 1067], [1068, 1068], [1070, 1070], [1071, 1071], [1073, 1073], [1075, 1075], [1076, 1076], [1078, 1078], [1082, 1082], [1083, 1083], [1084, 1084], [1085, 1085], [1088, 1088], [1090, 1090], [1091, 1091], [1093, 1093], [1095, 1095], [1096, 1096], [1100, 1100], [1101, 1101], [1103, 1103], [1107, 1107], [1109, 1109], [1110, 1110], [1112, 1112], [1114, 1114], [1115, 1115], [1116, 1116], [1117, 1117], [1118, 1118], [1125, 1125], [1128, 1128], [1131, 1131], [1132, 1132], [1135, 1135], [1136, 1136], [1138, 1138], [1139, 1139], [1140, 1140], [1143, 1143], [1144, 1144], [1145, 1145], [1146, 1146], [1148, 1148]], "source_code_file": "src/numfmt.c", "binary_file1": "numfmt.json", "binary_file2": "numfmt.json"}
{"fname": "parse_human_number", "lineno_map": [[1170, 1170], [1172, 1172], [1173, 1173], [1174, 1174], [1176, 1176], [1180, 1180], [1182, 1182], [1183, 1183], [1185, 1185]], "source_code_file": "src/numfmt.c", "binary_file1": "numfmt.json", "binary_file2": "numfmt.json"}
{"fname": "prepare_padded_number", "lineno_map": [[1199, 1199], [1203, 1203], [1205, 1205], [1206, 1206], [1208, 1208], [1210, 1210], [1211, 1211], [1212, 1212], [1215, 1215], [1216, 1216], [1222, 1222], [1224, 1224], [1225, 1225], [1230, 1230], [1232, 1232], [1233, 1233], [1235, 1235], [1238, 1238], [1240, 1240], [1241, 1241], [1244, 1244], [1248, 1248], [1249, 1249]], "source_code_file": "src/numfmt.c", "binary_file1": "numfmt.json", "binary_file2": "numfmt.json"}
{"fname": "print_padded_number", "lineno_map": [[1258, 1258], [1259, 1259], [1261, 1261], [1263, 1263], [1264, 1264]], "source_code_file": "src/numfmt.c", "binary_file1": "numfmt.json", "binary_file2": "numfmt.json"}
{"fname": "process_suffixed_number", "lineno_map": [[1273, 1273], [1275, 1275], [1277, 1277], [1280, 1280], [1281, 1281], [1284, 1284], [1288, 1288], [1289, 1289], [1290, 1290], [1291, 1291], [1294, 1294], [1296, 1296], [1298, 1298], [1299, 1299], [1303, 1303], [1305, 1305], [1308, 1308], [1309, 1309], [1310, 1310], [1311, 1311], [1314, 1314], [1315, 1315], [1317, 1317]], "source_code_file": "src/numfmt.c", "binary_file1": "numfmt.json", "binary_file2": "numfmt.json"}
{"fname": "next_field", "lineno_map": [[1327, 1327], [1328, 1328], [1330, 1330], [1332, 1332], [1334, 1334], [1335, 1335], [1342, 1342], [1343, 1343], [1345, 1345], [1346, 1346], [1349, 1349]], "source_code_file": "src/numfmt.c", "binary_file1": "numfmt.json", "binary_file2": "numfmt.json"}
{"fname": "include_field", "lineno_map": [[1356, 1356], [1357, 1357], [1360, 1360], [1362, 1362], [1364, 1364]], "source_code_file": "src/numfmt.c", "binary_file1": "numfmt.json", "binary_file2": "numfmt.json"}
{"fname": "process_field", "lineno_map": [[1374, 1374], [1375, 1375], [1376, 1376], [1378, 1378], [1380, 1380], [1381, 1381], [1383, 1383], [1384, 1384], [1386, 1386], [1387, 1387], [1389, 1389], [1392, 1392]], "source_code_file": "src/numfmt.c", "binary_file1": "numfmt.json", "binary_file2": "numfmt.json"}
{"fname": "process_line", "lineno_map": [[1403, 1403], [1404, 1404], [1407, 1407], [1408, 1408], [1410, 1410], [1413, 1413], [1415, 1415], [1416, 1416], [1418, 1418], [1420, 1420], [1425, 1425], [1426, 1426], [1432, 1432], [1433, 1433]], "source_code_file": "src/numfmt.c", "binary_file1": "numfmt.json", "binary_file2": "numfmt.json"}
{"fname": "main", "lineno_map": [[1441, 1441], [1445, 1445], [1446, 1446], [1447, 1447], [1448, 1448], [1455, 1455], [1456, 1456], [1457, 1457], [1458, 1458], [1460, 1460], [1464, 1464], [1466, 1466], [1469, 1469], [1472, 1472], [1477, 1477], [1481, 1481], [1482, 1482], [1486, 1486], [1490, 1490], [1494, 1494], [1498, 1498], [1499, 1499], [1500, 1500], [1502, 1502], [1504, 1504], [1505, 1505], [1512, 1512], [1513, 1513], [1514, 1514], [1519, 1519], [1520, 1520], [1522, 1522], [1526, 1526], [1530, 1530], [1534, 1534], [1538, 1538], [1539, 1539], [1543, 1543], [1545, 1545], [1546, 1546], [1547, 1547], [1552, 1552], [1557, 1557], [1561, 1561], [1565, 1565], [1566, 1566], [1569, 1569], [1573, 1573], [1574, 1574], [1576, 1576], [1577, 1577], [1580, 1580], [1581, 1581], [1582, 1582], [1584, 1584], [1585, 1585], [1587, 1587], [1589, 1589], [1590, 1590], [1591, 1591], [1592, 1592], [1596, 1596], [1597, 1597], [1599, 1599], [1600, 1600], [1602, 1602], [1604, 1604], [1605, 1605], [1607, 1607], [1608, 1608], [1612, 1612], [1613, 1613], [1616, 1616], [1618, 1618], [1620, 1620], [1623, 1623], [1624, 1624], [1625, 1625], [1626, 1626], [1631, 1631], [1632, 1632], [1642, 1642], [1643, 1643], [1645, 1645], [1646, 1646], [1647, 1647], [1648, 1648]], "source_code_file": "src/numfmt.c", "binary_file1": "numfmt.json", "binary_file2": "numfmt.json"}
{"fname": "operand2sig", "lineno_map": [[40, 40], [54, 54], [55, 55], [56, 56], [58, 58], [63, 63], [70, 70], [72, 72], [73, 73], [74, 74], [78, 78], [79, 79], [80, 80], [81, 81], [83, 83], [86, 86], [88, 88]], "source_code_file": "src/operand2sig.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "emit_ancillary_info", "lineno_map": [[632, 632], [642, 642], [643, 643], [645, 645], [646, 646], [648, 648], [655, 655], [665, 665], [667, 667], [669, 669]], "source_code_file": "src/factor.c", "binary_file1": "factor.json", "binary_file2": "factor.json"}
{"fname": "mod2", "lineno_map": [[419, 419], [421, 421], [423, 423], [427, 427], [428, 428], [429, 429], [430, 430], [431, 431], [433, 433], [434, 434], [435, 435], [438, 438]], "source_code_file": "src/factor.c", "binary_file1": "factor.json", "binary_file2": "factor.json"}
{"fname": "gcd_odd", "lineno_map": [[445, 445], [447, 447], [448, 448], [449, 449], [451, 451], [455, 455], [462, 462], [463, 463], [464, 464], [466, 466], [467, 467], [470, 470], [473, 473], [476, 476]], "source_code_file": "src/factor.c", "binary_file1": "factor.json", "binary_file2": "factor.json"}
{"fname": "gcd2_odd", "lineno_map": [[483, 483], [485, 485], [487, 487], [491, 491], [492, 492], [496, 496], [498, 498], [502, 502], [504, 504], [506, 506], [507, 507], [509, 509], [511, 511], [513, 513], [514, 514], [520, 520]], "source_code_file": "src/factor.c", "binary_file1": "factor.json", "binary_file2": "factor.json"}
{"fname": "factor_insert_multiplicity", "lineno_map": [[528, 528], [529, 529], [530, 530], [534, 534], [536, 536], [540, 540], [542, 542], [544, 544], [545, 545], [547, 547], [548, 548], [549, 549], [553, 553]], "source_code_file": "src/factor.c", "binary_file1": "factor.json", "binary_file2": "factor.json"}
{"fname": "factor_insert_large", "lineno_map": [[563, 563], [565, 565], [566, 566], [567, 567], [570, 570]], "source_code_file": "src/factor.c", "binary_file1": "factor.json", "binary_file2": "factor.json"}
{"fname": "factor_insert_refind", "lineno_map": [[719, 719], [720, 720], [721, 721]], "source_code_file": "src/factor.c", "binary_file1": "factor.json", "binary_file2": "factor.json"}
{"fname": "factor_using_division", "lineno_map": [[761, 761], [765, 765], [767, 767], [768, 768], [769, 769], [770, 770], [774, 774], [775, 775], [778, 778], [781, 781], [783, 783], [789, 789], [790, 790], [791, 791], [793, 793], [794, 794], [795, 795], [797, 797], [798, 798], [800, 800], [802, 802], [803, 803], [817, 817], [820, 820], [821, 821], [822, 822], [823, 823], [824, 824], [825, 825], [826, 826], [827, 827], [828, 828], [830, 830], [831, 831]], "source_code_file": "src/factor.c", "binary_file1": "factor.json", "binary_file2": "factor.json"}
{"fname": "mulredc", "lineno_map": [[979, 979], [980, 980], [981, 981], [982, 982], [983, 983], [984, 984]], "source_code_file": "src/factor.c", "binary_file1": "factor.json", "binary_file2": "factor.json"}
{"fname": "mulredc2", "lineno_map": [[998, 998], [999, 999], [1000, 1000], [1001, 1001], [1016, 1016], [1017, 1017], [1018, 1018], [1019, 1019], [1020, 1020], [1021, 1021], [1022, 1022], [1023, 1023], [1024, 1024], [1041, 1041], [1042, 1042], [1043, 1043], [1044, 1044], [1045, 1045], [1046, 1046], [1047, 1047], [1048, 1048], [1049, 1049], [1050, 1050], [1051, 1051], [1053, 1053], [1054, 1054], [1056, 1056]], "source_code_file": "src/factor.c", "binary_file1": "factor.json", "binary_file2": "factor.json"}
{"fname": "powm", "lineno_map": [[1063, 1063], [1065, 1065], [1066, 1066], [1068, 1068], [1070, 1070], [1071, 1071], [1073, 1073], [1074, 1074]], "source_code_file": "src/factor.c", "binary_file1": "factor.json", "binary_file2": "factor.json"}
{"fname": "powm2", "lineno_map": [[1089, 1089], [1090, 1090], [1091, 1091], [1092, 1092], [1094, 1094], [1095, 1095], [1097, 1097], [1099, 1099], [1101, 1101], [1102, 1102], [1104, 1104], [1105, 1105], [1107, 1107], [1109, 1109], [1111, 1111], [1112, 1112], [1114, 1114], [1115, 1115], [1117, 1117]], "source_code_file": "src/factor.c", "binary_file1": "factor.json", "binary_file2": "factor.json"}
{"fname": "millerrabin", "lineno_map": [[1125, 1125], [1127, 1127], [1129, 1129], [1132, 1132], [1134, 1134], [1136, 1136], [1138, 1138]], "source_code_file": "src/factor.c", "binary_file1": "factor.json", "binary_file2": "factor.json"}
{"fname": "millerrabin2", "lineno_map": [[1150, 1150], [1151, 1151], [1153, 1153], [1156, 1156], [1158, 1158], [1161, 1161], [1163, 1163], [1164, 1164], [1166, 1166], [1168, 1168]], "source_code_file": "src/factor.c", "binary_file1": "factor.json", "binary_file2": "factor.json"}
{"fname": "prime_p", "lineno_map": [[1206, 1206], [1210, 1210], [1214, 1214], [1215, 1215], [1216, 1216], [1218, 1218], [1219, 1219], [1220, 1220], [1221, 1221], [1224, 1224], [1227, 1227], [1230, 1230], [1235, 1235], [1237, 1237], [1239, 1239], [1240, 1240], [1243, 1243], [1249, 1249], [1252, 1252], [1255, 1255], [1262, 1262], [1263, 1263], [1264, 1264], [1268, 1268], [1272, 1272], [1276, 1276], [1277, 1277]], "source_code_file": "src/factor.c", "binary_file1": "factor.json", "binary_file2": "factor.json"}
{"fname": "prime2_p", "lineno_map": [[1291, 1291], [1294, 1294], [1295, 1295], [1296, 1296], [1298, 1298], [1300, 1300], [1301, 1301], [1302, 1302], [1306, 1306], [1307, 1307], [1310, 1310], [1311, 1311], [1312, 1312], [1313, 1313], [1316, 1316], [1317, 1317], [1319, 1319], [1322, 1322], [1325, 1325], [1330, 1330], [1335, 1335], [1337, 1337], [1338, 1338], [1341, 1341], [1342, 1342], [1343, 1343], [1344, 1344], [1345, 1345], [1347, 1347], [1352, 1352], [1353, 1353], [1355, 1355], [1356, 1356], [1357, 1357], [1363, 1363], [1366, 1366], [1369, 1369], [1370, 1370], [1372, 1372], [1376, 1376], [1377, 1377]], "source_code_file": "src/factor.c", "binary_file1": "factor.json", "binary_file2": "factor.json"}
{"fname": "factor_using_pollard_rho", "lineno_map": [[1471, 1471], [1472, 1472], [1474, 1474], [1475, 1475], [1476, 1476], [1478, 1478], [1480, 1480], [1482, 1482], [1488, 1488], [1489, 1489], [1491, 1491], [1492, 1492], [1494, 1494], [1496, 1496], [1498, 1498], [1501, 1501], [1503, 1503], [1504, 1504], [1505, 1505], [1506, 1506], [1508, 1508], [1509, 1509], [1511, 1511], [1517, 1517], [1518, 1518], [1520, 1520], [1521, 1521], [1523, 1523], [1525, 1525], [1528, 1528], [1532, 1532], [1534, 1534], [1535, 1535], [1537, 1537], [1539, 1539], [1541, 1541], [1545, 1545], [1546, 1546], [1547, 1547]], "source_code_file": "src/factor.c", "binary_file1": "factor.json", "binary_file2": "factor.json"}
{"fname": "factor_using_pollard_rho2", "lineno_map": [[1557, 1557], [1558, 1558], [1560, 1560], [1561, 1561], [1562, 1562], [1563, 1563], [1565, 1565], [1567, 1567], [1573, 1573], [1574, 1574], [1575, 1575], [1577, 1577], [1578, 1578], [1579, 1579], [1581, 1581], [1583, 1583], [1584, 1584], [1586, 1586], [1589, 1589], [1591, 1591], [1592, 1592], [1593, 1593], [1594, 1594], [1596, 1596], [1597, 1597], [1598, 1598], [1600, 1600], [1606, 1606], [1607, 1607], [1608, 1608], [1610, 1610], [1611, 1611], [1613, 1613], [1615, 1615], [1618, 1618], [1620, 1620], [1621, 1621], [1623, 1623], [1631, 1631], [1634, 1634], [1638, 1638], [1639, 1639], [1640, 1640], [1642, 1642], [1643, 1643], [1645, 1645], [1648, 1648], [1650, 1650], [1652, 1652], [1656, 1656], [1660, 1660], [1662, 1662], [1666, 1666], [1667, 1667], [1668, 1668]], "source_code_file": "src/factor.c", "binary_file1": "factor.json", "binary_file2": "factor.json"}
{"fname": "factor", "lineno_map": [[2227, 2227], [2228, 2228], [2230, 2230], [2233, 2233], [2235, 2235], [2238, 2238], [2239, 2239], [2247, 2247], [2248, 2248], [2250, 2250]], "source_code_file": "src/factor.c", "binary_file1": "factor.json", "binary_file2": "factor.json"}
{"fname": "strto2uintmax", "lineno_map": [[2282, 2282], [2284, 2284], [2289, 2289], [2290, 2290], [2291, 2291], [2292, 2292], [2294, 2294], [2302, 2302], [2305, 2305], [2306, 2306], [2309, 2309], [2311, 2311], [2315, 2315], [2318, 2318], [2320, 2320], [2321, 2321], [2324, 2324], [2326, 2326], [2328, 2328], [2331, 2331], [2333, 2333], [2334, 2334], [2336, 2336], [2337, 2337], [2339, 2339], [2340, 2340], [2341, 2341], [2343, 2343], [2348, 2348], [2349, 2349]], "source_code_file": "src/factor.c", "binary_file1": "factor.json", "binary_file2": "factor.json"}
{"fname": "lbuf_alloc", "lineno_map": [[2372, 2372], [2377, 2377], [2378, 2378]], "source_code_file": "src/factor.c", "binary_file1": "factor.json", "binary_file2": "factor.json"}
{"fname": "lbuf_flush", "lineno_map": [[2385, 2385], [2386, 2386], [2387, 2387], [2388, 2388]], "source_code_file": "src/factor.c", "binary_file1": "factor.json", "binary_file2": "factor.json"}
{"fname": "lbuf_putc", "lineno_map": [[2397, 2397], [2399, 2399], [2401, 2401], [2405, 2405], [2406, 2406], [2407, 2407], [2408, 2408], [2409, 2409], [2413, 2413], [2417, 2417], [2418, 2418], [2419, 2419], [2421, 2421], [2422, 2422], [2425, 2425], [2426, 2426]], "source_code_file": "src/factor.c", "binary_file1": "factor.json", "binary_file2": "factor.json"}
{"fname": "lbuf_putint", "lineno_map": [[2436, 2436], [2437, 2437], [2438, 2438], [2440, 2440], [2441, 2441], [2443, 2443], [2444, 2444]], "source_code_file": "src/factor.c", "binary_file1": "factor.json", "binary_file2": "factor.json"}
{"fname": "print_uintmaxes", "lineno_map": [[2452, 2452], [2453, 2453], [2458, 2458], [2459, 2459], [2460, 2460], [2461, 2461], [2462, 2462]], "source_code_file": "src/factor.c", "binary_file1": "factor.json", "binary_file2": "factor.json"}
{"fname": "print_factors_single", "lineno_map": [[2472, 2472], [2473, 2473], [2475, 2475], [2477, 2477], [2478, 2478], [2480, 2480], [2481, 2481], [2484, 2484], [2486, 2486], [2487, 2487], [2490, 2490]], "source_code_file": "src/factor.c", "binary_file1": "factor.json", "binary_file2": "factor.json"}
{"fname": "print_factors", "lineno_map": [[2507, 2507], [2509, 2509], [2512, 2512], [2514, 2514], [2515, 2515], [2525, 2525], [2549, 2549]], "source_code_file": "src/factor.c", "binary_file1": "factor.json", "binary_file2": "factor.json"}
{"fname": "usage", "lineno_map": [[2557, 2557], [2558, 2558], [2561, 2561], [2566, 2566], [2571, 2571], [2572, 2572], [2573, 2573], [2575, 2575]], "source_code_file": "src/factor.c", "binary_file1": "factor.json", "binary_file2": "factor.json"}
{"fname": "do_stdin", "lineno_map": [[2581, 2581], [2584, 2584], [2588, 2588], [2590, 2590], [2592, 2592], [2594, 2594]], "source_code_file": "src/factor.c", "binary_file1": "factor.json", "binary_file2": "factor.json"}
{"fname": "main", "lineno_map": [[2603, 2603], [2604, 2604], [2605, 2605], [2606, 2606], [2608, 2608], [2609, 2609], [2610, 2610], [2613, 2613], [2615, 2615], [2618, 2618], [2621, 2621], [2623, 2623], [2626, 2626], [2635, 2635], [2636, 2636], [2639, 2639], [2640, 2640], [2641, 2641], [2642, 2642]], "source_code_file": "src/factor.c", "binary_file1": "factor.json", "binary_file2": "factor.json"}
{"fname": "emit_mandatory_arg_note", "lineno_map": [[586, 586], [590, 590]], "source_code_file": "src/uniq.c", "binary_file1": "uniq.json", "binary_file2": "uniq.json"}
{"fname": "emit_ancillary_info", "lineno_map": [[631, 631], [632, 632], [642, 642], [643, 643], [648, 648], [649, 649], [651, 651], [655, 655], [662, 662], [665, 665], [667, 667], [669, 669]], "source_code_file": "src/uniq.c", "binary_file1": "uniq.json", "binary_file2": "uniq.json"}
{"fname": "usage", "lineno_map": [[167, 167], [168, 168], [171, 171], [175, 175], [182, 182], [184, 184], [188, 188], [194, 194], [197, 197], [201, 201], [206, 206], [209, 209], [212, 212], [213, 213], [214, 214], [219, 219], [225, 225], [227, 227]], "source_code_file": "src/uniq.c", "binary_file1": "uniq.json", "binary_file2": "uniq.json"}
{"fname": "strict_posix2", "lineno_map": [[233, 233]], "source_code_file": "src/uniq.c", "binary_file1": "uniq.json", "binary_file2": "uniq.json"}
{"fname": "size_opt", "lineno_map": [[246, 246], [253, 253]], "source_code_file": "src/uniq.c", "binary_file1": "uniq.json", "binary_file2": "uniq.json"}
{"fname": "find_field", "lineno_map": [[266, 266], [267, 267], [268, 268], [270, 270], [272, 272], [273, 273], [274, 274], [275, 275], [278, 278]], "source_code_file": "src/uniq.c", "binary_file1": "uniq.json", "binary_file2": "uniq.json"}
{"fname": "different", "lineno_map": [[291, 291], [292, 292], [293, 293], [294, 294], [296, 296], [301, 301]], "source_code_file": "src/uniq.c", "binary_file1": "uniq.json", "binary_file2": "uniq.json"}
{"fname": "writeline", "lineno_map": [[317, 317], [318, 318], [322, 322], [323, 323], [325, 325]], "source_code_file": "src/uniq.c", "binary_file1": "uniq.json", "binary_file2": "uniq.json"}
{"fname": "check_file", "lineno_map": [[337, 337], [338, 338], [339, 339], [340, 340], [342, 342], [344, 344], [345, 345], [347, 347], [348, 348], [365, 365], [369, 369], [371, 371], [377, 377], [380, 380], [381, 381], [383, 383], [384, 384], [386, 386], [387, 387], [388, 388], [389, 389], [390, 390], [392, 392], [394, 394], [397, 397], [398, 398], [399, 399], [400, 400], [403, 403], [404, 404], [410, 410], [411, 411], [413, 413], [415, 415], [416, 416], [418, 418], [423, 423], [425, 425], [429, 429], [430, 430], [431, 431], [432, 432], [434, 434], [438, 438], [441, 441], [443, 443], [445, 445], [446, 446], [448, 448], [450, 450], [451, 451], [452, 452], [453, 453], [457, 457], [459, 459], [460, 460], [461, 461], [462, 462], [463, 463], [464, 464], [468, 468], [472, 472], [473, 473], [477, 477], [478, 478]], "source_code_file": "src/uniq.c", "binary_file1": "uniq.json", "binary_file2": "uniq.json"}
{"fname": "main", "lineno_map": [[491, 491], [492, 492], [493, 493], [494, 494], [496, 496], [497, 497], [499, 499], [501, 501], [502, 502], [503, 503], [504, 504], [505, 505], [507, 507], [509, 509], [510, 510], [511, 511], [512, 512], [513, 513], [514, 514], [515, 515], [523, 523], [524, 524], [525, 525], [529, 529], [531, 531], [533, 533], [534, 534], [536, 536], [538, 538], [543, 543], [544, 544], [545, 545], [547, 547], [548, 548], [550, 550], [551, 551], [554, 554], [569, 569], [570, 570], [572, 572], [573, 573], [575, 575], [580, 580], [581, 581], [585, 585], [586, 586], [590, 590], [591, 591], [592, 592], [593, 593], [595, 595], [598, 598], [602, 602], [603, 603], [605, 605], [611, 611], [612, 612], [617, 617], [621, 621], [626, 626], [627, 627], [631, 631], [636, 636], [639, 639], [641, 641], [644, 644], [652, 652], [654, 654], [655, 655], [658, 658], [660, 660], [661, 661], [662, 662], [665, 665], [667, 667], [668, 668], [669, 669], [672, 672]], "source_code_file": "src/uniq.c", "binary_file1": "uniq.json", "binary_file2": "uniq.json"}
{"fname": "path_common_prefix", "lineno_map": [[32, 32], [33, 33], [38, 38], [41, 41], [43, 43], [45, 45], [46, 46], [47, 47], [48, 48], [49, 49], [52, 52], [53, 53], [54, 54], [55, 55]], "source_code_file": "src/relpath.c", "binary_file1": "realpath.json", "binary_file2": "realpath.json"}
{"fname": "buffer_or_output", "lineno_map": [[68, 68], [70, 70], [71, 71], [73, 73], [74, 74], [75, 75], [79, 79]], "source_code_file": "src/relpath.c", "binary_file1": "realpath.json", "binary_file2": "realpath.json"}
{"fname": "relpath", "lineno_map": [[90, 90], [93, 93], [94, 94], [97, 97], [98, 98], [101, 101], [102, 102], [103, 103], [104, 104], [108, 108], [110, 110], [111, 111], [113, 113], [114, 114], [117, 117], [119, 119], [120, 120], [125, 125], [129, 129], [130, 130]], "source_code_file": "src/relpath.c", "binary_file1": "realpath.json", "binary_file2": "realpath.json"}
{"fname": "dot_or_dotdot", "lineno_map": [[266, 266], [269, 269], [270, 270], [273, 273]], "source_code_file": "src/copy.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "ptr_align", "lineno_map": [[499, 499], [500, 500], [501, 501], [502, 502], [503, 503]], "source_code_file": "src/copy.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "is_nul", "lineno_map": [[510, 510], [511, 511], [524, 524], [525, 525], [528, 528], [544, 544], [545, 545], [546, 546], [547, 547], [549, 549], [550, 550], [553, 553], [554, 554]], "source_code_file": "src/copy.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "extent_scan_free", "lineno_map": [[67, 67], [68, 68], [69, 69], [70, 70], [71, 71]], "source_code_file": "src/copy.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "io_blksize", "lineno_map": [[76, 76], [77, 77], [78, 78]], "source_code_file": "src/copy.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "ignorable_ctx_err", "lineno_map": [[26, 26], [27, 27], [28, 28]], "source_code_file": "src/copy.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "restorecon", "lineno_map": [[41, 41]], "source_code_file": "src/copy.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "defaultcon", "lineno_map": [[45, 45]], "source_code_file": "src/copy.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "utimens_symlink", "lineno_map": [[155, 155], [159, 159], [160, 160]], "source_code_file": "src/copy.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "punch_hole", "lineno_map": [[171, 171], [175, 175], [177, 177], [178, 178]], "source_code_file": "src/copy.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "create_hole", "lineno_map": [[190, 190], [192, 192], [194, 194], [202, 202], [204, 204]], "source_code_file": "src/copy.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "sparse_copy", "lineno_map": [[230, 230], [231, 231], [232, 232], [233, 233], [235, 235], [237, 237], [238, 238], [240, 240], [241, 241], [242, 242], [245, 245], [247, 247], [248, 248], [251, 251], [252, 252], [253, 253], [255, 255], [257, 257], [258, 258], [260, 260], [261, 261], [263, 263], [264, 264], [266, 266], [268, 268], [269, 269], [271, 271], [273, 273], [275, 275], [282, 282], [286, 286], [287, 287], [289, 289], [291, 291], [292, 292], [294, 294], [295, 295], [297, 297], [302, 302], [303, 303], [306, 306], [311, 311], [312, 312], [315, 315], [325, 325]], "source_code_file": "src/copy.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "write_zeros", "lineno_map": [[357, 357], [360, 360], [361, 361], [363, 363], [364, 364], [368, 368], [370, 370], [371, 371], [373, 373]], "source_code_file": "src/copy.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "extent_copy", "lineno_map": [[394, 394], [395, 395], [399, 399], [401, 401], [403, 403], [404, 404], [407, 407], [408, 408], [410, 410], [413, 413], [415, 415], [419, 419], [424, 424], [425, 425], [431, 431], [433, 433], [434, 434], [438, 438], [439, 439], [440, 440], [450, 450], [452, 452], [453, 453], [454, 454], [457, 457], [459, 459], [461, 461], [463, 463], [465, 465], [467, 467], [471, 471], [472, 472], [474, 474], [478, 478], [485, 485], [486, 486], [487, 487], [489, 489], [491, 491], [496, 496], [500, 500], [518, 518], [519, 519], [522, 522], [528, 528], [529, 529], [530, 530], [538, 538], [540, 540], [546, 546], [549, 549], [559, 559], [560, 560], [561, 561], [562, 562], [564, 564], [568, 568], [569, 569], [571, 571]], "source_code_file": "src/copy.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "is_ancestor", "lineno_map": [[586, 586], [588, 588], [590, 590]], "source_code_file": "src/copy.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "copy_dir", "lineno_map": [[717, 717], [718, 718], [720, 720], [721, 721], [725, 725], [731, 731], [732, 732], [734, 734], [735, 735], [736, 736], [739, 739], [740, 740], [741, 741], [743, 743], [747, 747], [749, 749], [750, 750], [755, 755], [758, 758], [759, 759], [761, 761], [762, 762]], "source_code_file": "src/copy.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "set_owner", "lineno_map": [[784, 784], [785, 785], [793, 793], [795, 795], [796, 796], [797, 797], [798, 798], [800, 800], [802, 802], [803, 803], [805, 805], [806, 806], [812, 812], [814, 814], [816, 816], [820, 820], [821, 821], [822, 822], [827, 827], [829, 829], [833, 833], [834, 834], [835, 835], [839, 839], [841, 841], [843, 843]], "source_code_file": "src/copy.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "set_process_security_ctx", "lineno_map": [[896, 896], [899, 899], [900, 900], [903, 903], [905, 905], [907, 907], [908, 908], [909, 909], [911, 911], [913, 913], [917, 917], [921, 921], [923, 923], [924, 924], [927, 927], [931, 931], [935, 935], [936, 936], [938, 938], [939, 939]], "source_code_file": "src/copy.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "set_file_security_ctx", "lineno_map": [[958, 958], [959, 959], [960, 960], [962, 962], [964, 964], [965, 965]], "source_code_file": "src/copy.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "fchmod_or_lchmod", "lineno_map": [[980, 980]], "source_code_file": "src/copy.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "is_probably_sparse", "lineno_map": [[998, 998], [999, 999]], "source_code_file": "src/copy.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "copy_reg", "lineno_map": [[1022, 1022], [1023, 1023], [1027, 1027], [1030, 1030], [1031, 1031], [1033, 1033], [1035, 1035], [1036, 1036], [1038, 1038], [1042, 1042], [1044, 1044], [1051, 1051], [1053, 1053], [1054, 1054], [1062, 1062], [1064, 1064], [1065, 1065], [1066, 1066], [1067, 1067], [1076, 1076], [1077, 1077], [1079, 1079], [1082, 1082], [1090, 1090], [1092, 1092], [1094, 1094], [1098, 1098], [1099, 1099], [1102, 1102], [1106, 1106], [1108, 1108], [1118, 1118], [1122, 1122], [1123, 1123], [1124, 1124], [1125, 1125], [1137, 1137], [1140, 1140], [1141, 1141], [1143, 1143], [1145, 1145], [1146, 1146], [1147, 1147], [1151, 1151], [1161, 1161], [1162, 1162], [1163, 1163], [1167, 1167], [1170, 1170], [1182, 1182], [1184, 1184], [1189, 1189], [1195, 1195], [1197, 1197], [1203, 1203], [1205, 1205], [1206, 1206], [1208, 1208], [1210, 1210], [1215, 1215], [1219, 1219], [1222, 1222], [1223, 1223], [1224, 1224], [1226, 1226], [1229, 1229], [1230, 1230], [1232, 1232], [1236, 1236], [1237, 1237], [1243, 1243], [1244, 1244], [1249, 1249], [1253, 1253], [1254, 1254], [1259, 1259], [1260, 1260], [1265, 1265], [1266, 1266], [1267, 1267], [1268, 1268], [1271, 1271], [1272, 1272], [1274, 1274], [1282, 1282], [1288, 1288], [1297, 1297], [1299, 1299], [1306, 1306], [1308, 1308], [1315, 1315], [1318, 1318], [1319, 1319], [1321, 1321], [1323, 1323], [1324, 1324], [1334, 1334], [1336, 1336], [1343, 1343], [1351, 1351], [1353, 1353], [1355, 1355], [1357, 1357], [1361, 1361], [1362, 1362], [1365, 1365], [1366, 1366], [1369, 1369], [1371, 1371], [1373, 1373], [1374, 1374], [1377, 1377], [1379, 1379], [1382, 1382], [1384, 1384], [1387, 1387], [1389, 1389], [1390, 1390], [1391, 1391], [1393, 1393], [1395, 1395], [1401, 1401], [1403, 1403], [1407, 1407], [1409, 1409], [1413, 1413], [1414, 1414]], "source_code_file": "src/copy.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "same_file_ok", "lineno_map": [[1438, 1438], [1440, 1440], [1447, 1447], [1449, 1449], [1453, 1453], [1455, 1455], [1460, 1460], [1462, 1462], [1463, 1463], [1466, 1466], [1473, 1473], [1475, 1475], [1483, 1483], [1484, 1484], [1488, 1488], [1491, 1491], [1492, 1492], [1495, 1495], [1496, 1496], [1498, 1498], [1505, 1505], [1506, 1506], [1515, 1515], [1517, 1517], [1535, 1535], [1536, 1536], [1537, 1537], [1538, 1538], [1565, 1565], [1571, 1571], [1576, 1576], [1577, 1577], [1578, 1578], [1584, 1584], [1586, 1586], [1590, 1590], [1592, 1592], [1617, 1617], [1618, 1618], [1619, 1619], [1621, 1621], [1622, 1622], [1624, 1624], [1625, 1625], [1631, 1631], [1634, 1634], [1636, 1636], [1637, 1637], [1638, 1638], [1641, 1641], [1642, 1642], [1643, 1643], [1646, 1646], [1649, 1649], [1655, 1655]], "source_code_file": "src/copy.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "writable_destination", "lineno_map": [[1669, 1669], [1670, 1670]], "source_code_file": "src/copy.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "overwrite_ok", "lineno_map": [[1677, 1677], [1680, 1680], [1681, 1681], [1682, 1682], [1683, 1683], [1684, 1684], [1688, 1688], [1693, 1693]], "source_code_file": "src/copy.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "dest_info_init", "lineno_map": [[1706, 1706]], "source_code_file": "src/copy.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "src_info_init", "lineno_map": [[1728, 1728]], "source_code_file": "src/copy.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "abandon_move", "lineno_map": [[1746, 1746], [1748, 1748], [1749, 1749], [1750, 1750], [1751, 1751], [1752, 1752]], "source_code_file": "src/copy.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "emit_verbose", "lineno_map": [[1761, 1761], [1762, 1762], [1763, 1763], [1764, 1764]], "source_code_file": "src/copy.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "restore_default_fscreatecon_or_die", "lineno_map": [[1771, 1771], [1772, 1772]], "source_code_file": "src/copy.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "create_hard_link", "lineno_map": [[1786, 1786], [1789, 1789], [1791, 1791], [1795, 1795], [1796, 1796]], "source_code_file": "src/copy.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "should_dereference", "lineno_map": [[1807, 1807], [1808, 1808]], "source_code_file": "src/copy.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "source_is_dst_backup", "lineno_map": [[1817, 1817], [1818, 1818], [1819, 1819], [1820, 1820], [1821, 1821], [1822, 1822], [1823, 1823], [1825, 1825], [1826, 1826], [1827, 1827], [1829, 1829], [1830, 1830]], "source_code_file": "src/copy.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "copy_internal", "lineno_map": [[1862, 1862], [1863, 1863], [1864, 1864], [1866, 1866], [1867, 1867], [1868, 1868], [1870, 1870], [1872, 1872], [1873, 1873], [1875, 1875], [1876, 1876], [1878, 1878], [1879, 1879], [1880, 1880], [1881, 1881], [1884, 1884], [1885, 1885], [1886, 1886], [1888, 1888], [1889, 1889], [1891, 1891], [1895, 1895], [1897, 1897], [1899, 1899], [1918, 1918], [1920, 1920], [1921, 1921], [1922, 1922], [1924, 1924], [1929, 1929], [1932, 1932], [1934, 1934], [1936, 1936], [1944, 1944], [1945, 1945], [1946, 1946], [1947, 1947], [1948, 1948], [1949, 1949], [1950, 1950], [1951, 1951], [1952, 1952], [1954, 1954], [1955, 1955], [1959, 1959], [1961, 1961], [1963, 1963], [1967, 1967], [1971, 1971], [1973, 1973], [1975, 1975], [1976, 1976], [1979, 1979], [1984, 1984], [1990, 1990], [1991, 1991], [1992, 1992], [1994, 1994], [1996, 1996], [2002, 2002], [2003, 2003], [2010, 2010], [2012, 2012], [2016, 2016], [2034, 2034], [2036, 2036], [2040, 2040], [2041, 2041], [2047, 2047], [2048, 2048], [2049, 2049], [2050, 2050], [2054, 2054], [2057, 2057], [2059, 2059], [2061, 2061], [2068, 2068], [2069, 2069], [2082, 2082], [2083, 2083], [2084, 2084], [2086, 2086], [2087, 2087], [2093, 2093], [2095, 2095], [2097, 2097], [2104, 2104], [2105, 2105], [2112, 2112], [2115, 2115], [2116, 2116], [2118, 2118], [2119, 2119], [2126, 2126], [2129, 2129], [2135, 2135], [2141, 2141], [2142, 2142], [2145, 2145], [2148, 2148], [2154, 2154], [2161, 2161], [2163, 2163], [2164, 2164], [2166, 2166], [2168, 2168], [2171, 2171], [2173, 2173], [2175, 2175], [2176, 2176], [2177, 2177], [2178, 2178], [2179, 2179], [2182, 2182], [2184, 2184], [2187, 2187], [2188, 2188], [2189, 2189], [2196, 2196], [2197, 2197], [2198, 2198], [2199, 2199], [2201, 2201], [2207, 2207], [2208, 2208], [2211, 2211], [2212, 2212], [2214, 2214], [2218, 2218], [2219, 2219], [2220, 2220], [2222, 2222], [2223, 2223], [2233, 2233], [2234, 2234], [2266, 2266], [2267, 2267], [2268, 2268], [2270, 2270], [2271, 2271], [2273, 2273], [2275, 2275], [2277, 2277], [2279, 2279], [2280, 2280], [2281, 2281], [2282, 2282], [2283, 2283], [2284, 2284], [2286, 2286], [2292, 2292], [2297, 2297], [2301, 2301], [2303, 2303], [2306, 2306], [2309, 2309], [2311, 2311], [2318, 2318], [2319, 2319], [2324, 2324], [2325, 2325], [2326, 2326], [2337, 2337], [2344, 2344], [2352, 2352], [2354, 2354], [2355, 2355], [2357, 2357], [2359, 2359], [2361, 2361], [2362, 2362], [2365, 2365], [2368, 2368], [2371, 2371], [2372, 2372], [2374, 2374], [2383, 2383], [2394, 2394], [2399, 2399], [2407, 2407], [2429, 2429], [2441, 2441], [2442, 2442], [2444, 2444], [2454, 2454], [2455, 2455], [2457, 2457], [2458, 2458], [2460, 2460], [2464, 2464], [2466, 2466], [2467, 2467], [2469, 2469], [2476, 2476], [2477, 2477], [2479, 2479], [2480, 2480], [2483, 2483], [2489, 2489], [2492, 2492], [2501, 2501], [2503, 2503], [2510, 2510], [2511, 2511], [2512, 2512], [2513, 2513], [2515, 2515], [2521, 2521], [2523, 2523], [2532, 2532], [2534, 2534], [2537, 2537], [2541, 2541], [2542, 2542], [2544, 2544], [2546, 2546], [2556, 2556], [2558, 2558], [2559, 2559], [2562, 2562], [2564, 2564], [2565, 2565], [2567, 2567], [2572, 2572], [2577, 2577], [2578, 2578], [2581, 2581], [2587, 2587], [2598, 2598], [2603, 2603], [2605, 2605], [2606, 2606], [2614, 2614], [2616, 2616], [2620, 2620], [2621, 2621], [2622, 2622], [2623, 2623], [2625, 2625], [2627, 2627], [2628, 2628], [2633, 2633], [2637, 2637], [2656, 2656], [2660, 2660], [2665, 2665], [2666, 2666], [2668, 2668], [2678, 2678], [2682, 2682], [2688, 2688], [2689, 2689], [2691, 2691], [2695, 2695], [2697, 2697], [2700, 2700], [2705, 2705], [2707, 2707], [2708, 2708], [2709, 2709], [2711, 2711], [2716, 2716], [2718, 2718], [2719, 2719], [2720, 2720], [2726, 2726], [2727, 2727], [2728, 2728], [2730, 2730], [2731, 2731], [2732, 2732], [2735, 2735], [2736, 2736], [2738, 2738], [2743, 2743], [2744, 2744], [2746, 2746], [2750, 2750], [2751, 2751], [2752, 2752], [2754, 2754], [2756, 2756], [2770, 2770], [2776, 2776], [2777, 2777], [2779, 2779], [2782, 2782], [2787, 2787], [2792, 2792], [2793, 2793], [2798, 2798], [2799, 2799], [2803, 2803], [2818, 2818], [2821, 2821], [2822, 2822], [2824, 2824], [2825, 2825], [2826, 2826], [2827, 2827], [2829, 2829], [2830, 2830], [2836, 2836], [2837, 2837], [2839, 2839], [2845, 2845], [2851, 2851], [2852, 2852], [2856, 2856], [2859, 2859], [2861, 2861], [2863, 2863], [2864, 2864], [2867, 2867], [2869, 2869], [2872, 2872], [2874, 2874], [2875, 2875], [2876, 2876], [2881, 2881], [2883, 2883], [2885, 2885], [2893, 2893], [2895, 2895], [2898, 2898], [2899, 2899], [2900, 2900], [2904, 2904], [2906, 2906], [2908, 2908], [2910, 2910], [2920, 2920], [2921, 2921], [2929, 2929], [2930, 2930], [2932, 2932], [2934, 2934], [2935, 2935], [2938, 2938], [2939, 2939]], "source_code_file": "src/copy.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "valid_options", "lineno_map": [[2949, 2949], [2950, 2950], [2951, 2951], [2952, 2952], [2953, 2953], [2954, 2954]], "source_code_file": "src/copy.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "copy", "lineno_map": [[2974, 2974], [2983, 2983], [2984, 2984], [2986, 2986]], "source_code_file": "src/copy.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "cp_options_default", "lineno_map": [[2998, 2998], [3012, 3012], [3014, 3014]], "source_code_file": "src/copy.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "cached_umask", "lineno_map": [[3051, 3051], [3053, 3053], [3054, 3054]], "source_code_file": "src/copy.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "mode_changed", "lineno_map": [[117, 117], [124, 124], [126, 126], [127, 127], [132, 132]], "source_code_file": "src/chmod.c", "binary_file1": "chmod.json", "binary_file2": "chmod.json"}
{"fname": "describe_change", "lineno_map": [[149, 149], [151, 151], [156, 156], [157, 157], [159, 159], [160, 160], [162, 162], [165, 165], [168, 168], [171, 171], [172, 172], [176, 176], [178, 178]], "source_code_file": "src/chmod.c", "binary_file1": "chmod.json", "binary_file2": "chmod.json"}
{"fname": "process_file", "lineno_map": [[190, 190], [191, 191], [192, 192], [195, 195], [196, 196], [198, 198], [211, 211], [213, 213], [214, 214], [217, 217], [218, 218], [220, 220], [224, 224], [225, 225], [226, 226], [230, 230], [231, 231], [233, 233], [237, 237], [238, 238], [240, 240], [244, 244], [246, 246], [255, 255], [257, 257], [259, 259], [261, 261], [265, 265], [267, 267], [268, 268], [271, 271], [273, 273], [274, 274], [277, 277], [278, 278], [280, 280], [285, 285], [287, 287], [288, 288], [291, 291], [293, 293], [294, 294], [295, 295], [296, 296], [298, 298], [302, 302], [304, 304], [305, 305], [306, 306], [310, 310], [311, 311], [312, 312], [313, 313], [314, 314], [317, 317], [321, 321], [322, 322]], "source_code_file": "src/chmod.c", "binary_file1": "chmod.json", "binary_file2": "chmod.json"}
{"fname": "process_files", "lineno_map": [[334, 334], [336, 336], [342, 342], [343, 343], [345, 345], [348, 348], [349, 349], [350, 350], [355, 355], [358, 358], [360, 360], [361, 361]], "source_code_file": "src/chmod.c", "binary_file1": "chmod.json", "binary_file2": "chmod.json"}
{"fname": "usage", "lineno_map": [[370, 370], [371, 371], [374, 374], [380, 380], [385, 385], [390, 390], [394, 394], [397, 397], [400, 400], [401, 401], [402, 402], [406, 406], [408, 408]], "source_code_file": "src/chmod.c", "binary_file1": "chmod.json", "binary_file2": "chmod.json"}
{"fname": "main", "lineno_map": [[417, 417], [418, 418], [419, 419], [421, 421], [422, 422], [426, 426], [427, 427], [428, 428], [429, 429], [431, 431], [433, 433], [435, 435], [441, 441], [468, 468], [469, 469], [470, 470], [471, 471], [472, 472], [474, 474], [475, 475], [477, 477], [478, 478], [479, 479], [481, 481], [485, 485], [488, 488], [491, 491], [494, 494], [497, 497], [500, 500], [503, 503], [505, 505], [506, 506], [508, 508], [512, 512], [514, 514], [516, 516], [517, 517], [522, 522], [523, 523], [526, 526], [528, 528], [529, 529], [531, 531], [532, 532], [535, 535], [537, 537], [538, 538], [539, 539], [544, 544], [545, 545], [547, 547], [548, 548], [550, 550], [553, 553], [556, 556], [557, 557], [558, 558], [563, 563], [566, 566]], "source_code_file": "src/chmod.c", "binary_file1": "chmod.json", "binary_file2": "chmod.json"}
{"fname": "usage", "lineno_map": [[108, 108], [109, 109], [112, 112], [116, 116], [119, 119], [123, 123], [129, 129], [135, 135], [141, 141], [144, 144], [147, 147], [150, 150], [151, 151], [152, 152], [156, 156], [163, 163], [165, 165]], "source_code_file": "src/comm.c", "binary_file1": "comm.json", "binary_file2": "comm.json"}
{"fname": "writeline", "lineno_map": [[176, 176], [179, 179], [184, 184], [186, 186], [187, 187], [191, 191], [193, 193], [194, 194], [195, 195], [196, 196], [200, 200]], "source_code_file": "src/comm.c", "binary_file1": "comm.json", "binary_file2": "comm.json"}
{"fname": "check_order", "lineno_map": [[220, 220], [221, 221], [223, 223], [227, 227], [228, 228], [229, 229], [231, 231], [232, 232], [234, 234], [236, 236], [238, 238], [242, 242]], "source_code_file": "src/comm.c", "binary_file1": "comm.json", "binary_file2": "comm.json"}
{"fname": "compare_files", "lineno_map": [[275, 275], [280, 280], [282, 282], [284, 284], [285, 285], [287, 287], [288, 288], [289, 289], [290, 290], [291, 291], [292, 292], [294, 294], [296, 296], [298, 298], [299, 299], [302, 302], [305, 305], [309, 309], [310, 310], [311, 311], [312, 312], [315, 315], [316, 316], [317, 317], [320, 320], [321, 321], [322, 322], [323, 323], [325, 325], [330, 330], [333, 333], [334, 334], [338, 338], [339, 339], [342, 342], [343, 343], [348, 348], [349, 349], [355, 355], [356, 356], [357, 357], [358, 358], [360, 360], [361, 361], [364, 364], [365, 365], [366, 366], [368, 368], [371, 371], [372, 372], [377, 377], [378, 378], [379, 379], [381, 381], [382, 382], [384, 384], [388, 388], [389, 389], [390, 390], [392, 392], [398, 398]], "source_code_file": "src/comm.c", "binary_file1": "comm.json", "binary_file2": "comm.json"}
{"fname": "main", "lineno_map": [[412, 412], [413, 413], [414, 414], [415, 415], [416, 416], [418, 418], [420, 420], [421, 421], [422, 422], [424, 424], [425, 425], [426, 426], [427, 427], [429, 429], [430, 430], [433, 433], [437, 437], [441, 441], [445, 445], [449, 449], [453, 453], [457, 457], [458, 458], [459, 459], [460, 460], [464, 464], [467, 467], [469, 469], [472, 472], [475, 475], [476, 476], [478, 478], [480, 480], [481, 481], [483, 483], [484, 484], [487, 487], [489, 489], [490, 490], [493, 493], [495, 495]], "source_code_file": "src/comm.c", "binary_file1": "comm.json", "binary_file2": "comm.json"}
{"fname": "to_uchar", "lineno_map": [[156, 156]], "source_code_file": "src/cut.c", "binary_file1": "cut.json", "binary_file2": "cut.json"}
{"fname": "emit_mandatory_arg_note", "lineno_map": [[586, 586], [587, 587], [590, 590]], "source_code_file": "src/cut.c", "binary_file1": "cut.json", "binary_file2": "cut.json"}
{"fname": "usage", "lineno_map": [[143, 143], [144, 144], [147, 147], [151, 151], [155, 155], [156, 156], [158, 158], [163, 163], [169, 169], [173, 173], [178, 178], [181, 181], [182, 182], [183, 183], [189, 189], [197, 197], [199, 199]], "source_code_file": "src/cut.c", "binary_file1": "cut.json", "binary_file2": "cut.json"}
{"fname": "next_item", "lineno_map": [[209, 209], [210, 210], [211, 211]], "source_code_file": "src/cut.c", "binary_file1": "cut.json", "binary_file2": "cut.json"}
{"fname": "cut_bytes", "lineno_map": [[240, 240], [241, 241], [242, 242], [247, 247], [249, 249], [251, 251], [252, 252], [253, 253], [254, 254], [256, 256], [258, 258], [259, 259], [264, 264], [265, 265], [267, 267], [269, 269], [271, 271], [274, 274], [277, 277]], "source_code_file": "src/cut.c", "binary_file1": "cut.json", "binary_file2": "cut.json"}
{"fname": "cut_fields", "lineno_map": [[289, 289], [290, 290], [293, 293], [295, 295], [296, 296], [299, 299], [300, 300], [308, 308], [312, 312], [317, 317], [319, 319], [321, 321], [322, 322], [323, 323], [325, 325], [328, 328], [329, 329], [331, 331], [336, 336], [338, 338], [344, 344], [346, 346], [347, 347], [348, 348], [350, 350], [352, 352], [355, 355], [358, 358], [360, 360], [361, 361], [363, 363], [364, 364], [368, 368], [370, 370], [373, 373], [375, 375], [377, 377], [379, 379], [382, 382], [384, 384], [386, 386], [387, 387], [392, 392], [394, 394], [399, 399], [401, 401], [402, 402], [403, 403], [405, 405], [408, 408], [409, 409], [410, 410], [412, 412], [413, 413], [415, 415], [416, 416], [417, 417], [419, 419], [421, 421], [422, 422], [423, 423]], "source_code_file": "src/cut.c", "binary_file1": "cut.json", "binary_file2": "cut.json"}
{"fname": "cut_stream", "lineno_map": [[431, 431], [432, 432], [434, 434]], "source_code_file": "src/cut.c", "binary_file1": "cut.json", "binary_file2": "cut.json"}
{"fname": "cut_file", "lineno_map": [[445, 445], [447, 447], [448, 448], [452, 452], [453, 453], [455, 455], [460, 460], [462, 462], [464, 464], [466, 466], [469, 469], [470, 470], [471, 471], [473, 473]], "source_code_file": "src/cut.c", "binary_file1": "cut.json", "binary_file2": "cut.json"}
{"fname": "main", "lineno_map": [[484, 484], [488, 488], [489, 489], [490, 490], [491, 491], [493, 493], [495, 495], [498, 498], [500, 500], [501, 501], [503, 503], [505, 505], [510, 510], [511, 511], [512, 512], [513, 513], [518, 518], [519, 519], [520, 520], [521, 521], [527, 527], [528, 528], [529, 529], [530, 530], [534, 534], [537, 537], [538, 538], [539, 539], [546, 546], [550, 550], [554, 554], [557, 557], [559, 559], [562, 562], [566, 566], [567, 567], [569, 569], [570, 570], [573, 573], [574, 574], [577, 577], [578, 578], [579, 579], [581, 581], [582, 582], [584, 584], [587, 587], [588, 588], [589, 589], [590, 590], [593, 593], [594, 594], [596, 596], [597, 597], [600, 600], [602, 602], [603, 603]], "source_code_file": "src/cut.c", "binary_file1": "cut.json", "binary_file2": "cut.json"}
{"fname": "to_uchar", "lineno_map": [[156, 156]], "source_code_file": "src/wc.c", "binary_file1": "wc.json", "binary_file2": "wc.json"}
{"fname": "emit_stdin_note", "lineno_map": [[580, 580], [583, 583]], "source_code_file": "src/wc.c", "binary_file1": "wc.json", "binary_file2": "wc.json"}
{"fname": "emit_ancillary_info", "lineno_map": [[631, 631], [632, 632], [642, 642], [645, 645], [646, 646], [649, 649], [651, 651], [655, 655], [665, 665], [667, 667], [669, 669]], "source_code_file": "src/wc.c", "binary_file1": "wc.json", "binary_file2": "wc.json"}
{"fname": "usable_st_size", "lineno_map": [[702, 702], [703, 703], [704, 704]], "source_code_file": "src/wc.c", "binary_file1": "wc.json", "binary_file2": "wc.json"}
{"fname": "usage", "lineno_map": [[111, 111], [112, 112], [115, 115], [120, 120], [126, 126], [128, 128], [136, 136], [143, 143], [144, 144], [145, 145], [147, 147]], "source_code_file": "src/wc.c", "binary_file1": "wc.json", "binary_file2": "wc.json"}
{"fname": "write_counts", "lineno_map": [[161, 161], [164, 164], [166, 166], [167, 167], [169, 169], [171, 171], [172, 172], [174, 174], [176, 176], [177, 177], [179, 179], [181, 181], [182, 182], [184, 184], [186, 186], [188, 188], [189, 189], [190, 190]], "source_code_file": "src/wc.c", "binary_file1": "wc.json", "binary_file2": "wc.json"}
{"fname": "wc", "lineno_map": [[200, 200], [205, 205], [207, 207], [212, 212], [214, 214], [215, 215], [220, 220], [221, 221], [223, 223], [226, 226], [227, 227], [239, 239], [241, 241], [243, 243], [244, 244], [249, 249], [250, 250], [252, 252], [253, 253], [254, 254], [256, 256], [266, 266], [267, 267], [271, 271], [272, 272], [273, 273], [274, 274], [278, 278], [280, 280], [281, 281], [283, 283], [285, 285], [286, 286], [289, 289], [293, 293], [297, 297], [298, 298], [300, 300], [302, 302], [303, 303], [307, 307], [309, 309], [310, 310], [311, 311], [313, 313], [316, 316], [317, 317], [322, 322], [324, 324], [325, 325], [335, 335], [336, 336], [338, 338], [343, 343], [345, 345], [346, 346], [347, 347], [348, 348], [357, 357], [362, 362], [368, 368], [370, 370], [371, 371], [375, 375], [376, 376], [377, 377], [382, 382], [384, 384], [388, 388], [389, 389], [390, 390], [394, 394], [396, 396], [398, 398], [399, 399], [402, 402], [406, 406], [412, 412], [413, 413], [416, 416], [417, 417], [418, 418], [420, 420], [421, 421], [425, 425], [428, 428], [432, 432], [433, 433], [434, 434], [437, 437], [440, 440], [444, 444], [445, 445], [448, 448], [452, 452], [454, 454], [455, 455], [456, 456], [458, 458], [460, 460], [462, 462], [464, 464], [465, 465], [467, 467], [472, 472], [473, 473], [474, 474], [476, 476], [479, 479], [481, 481], [484, 484], [485, 485], [487, 487], [489, 489], [492, 492], [493, 493], [494, 494], [499, 499], [500, 500], [502, 502], [504, 504], [505, 505], [507, 507], [508, 508], [512, 512], [515, 515], [518, 518], [522, 522], [523, 523], [524, 524], [527, 527], [530, 530], [534, 534], [535, 535], [538, 538], [540, 540], [541, 541], [543, 543], [548, 548], [550, 550], [551, 551], [552, 552], [555, 555], [556, 556], [558, 558], [559, 559], [560, 560], [561, 561], [562, 562], [563, 563], [564, 564]], "source_code_file": "src/wc.c", "binary_file1": "wc.json", "binary_file2": "wc.json"}
{"fname": "wc_file", "lineno_map": [[572, 572], [574, 574], [575, 575], [580, 580], [581, 581], [583, 583], [588, 588], [589, 589], [591, 591]], "source_code_file": "src/wc.c", "binary_file1": "wc.json", "binary_file2": "wc.json"}
{"fname": "get_input_fstatus", "lineno_map": [[608, 608], [610, 610], [611, 611], [612, 612], [613, 613], [615, 615], [618, 618], [619, 619], [620, 620], [621, 621]], "source_code_file": "src/wc.c", "binary_file1": "wc.json", "binary_file2": "wc.json"}
{"fname": "compute_number_width", "lineno_map": [[634, 634], [636, 636], [638, 638], [639, 639], [641, 641], [642, 642], [644, 644], [645, 645], [647, 647], [650, 650], [651, 651], [652, 652], [653, 653]], "source_code_file": "src/wc.c", "binary_file1": "wc.json", "binary_file2": "wc.json"}
{"fname": "main", "lineno_map": [[667, 667], [672, 672], [673, 673], [674, 674], [675, 675], [677, 677], [679, 679], [682, 682], [684, 684], [685, 685], [686, 686], [688, 688], [689, 689], [692, 692], [696, 696], [700, 700], [704, 704], [708, 708], [712, 712], [715, 715], [717, 717], [720, 720], [723, 723], [724, 724], [725, 725], [727, 727], [729, 729], [735, 735], [737, 737], [738, 738], [740, 740], [743, 743], [744, 744], [747, 747], [748, 748], [749, 749], [756, 756], [757, 757], [758, 758], [760, 760], [761, 761], [762, 762], [763, 763], [765, 765], [766, 766], [767, 767], [771, 771], [772, 772], [773, 773], [779, 779], [780, 780], [781, 781], [784, 784], [785, 785], [787, 787], [788, 788], [790, 790], [791, 791], [793, 793], [795, 795], [796, 796], [798, 798], [803, 803], [805, 805], [808, 808], [810, 810], [813, 813], [817, 817], [820, 820], [823, 823], [829, 829], [830, 830], [836, 836], [837, 837], [840, 840], [843, 843], [844, 844], [846, 846], [848, 848], [849, 849], [856, 856], [857, 857], [859, 859], [860, 860], [862, 862], [863, 863], [864, 864], [866, 866], [868, 868], [870, 870], [871, 871]], "source_code_file": "src/wc.c", "binary_file1": "wc.json", "binary_file2": "wc.json"}
{"fname": "to_uchar", "lineno_map": [[156, 156]], "source_code_file": "src/df.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "emit_mandatory_arg_note", "lineno_map": [[586, 586], [587, 587], [590, 590]], "source_code_file": "src/df.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "emit_size_note", "lineno_map": [[594, 594], [595, 595]], "source_code_file": "src/df.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "emit_ancillary_info", "lineno_map": [[631, 631], [642, 642], [643, 643], [645, 645], [646, 646], [648, 648], [649, 649], [651, 651], [655, 655], [656, 656], [662, 662], [665, 665], [667, 667]], "source_code_file": "src/df.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "hide_problematic_chars", "lineno_map": [[281, 281], [282, 282], [284, 284], [285, 285], [286, 286]], "source_code_file": "src/df.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "alloc_table_row", "lineno_map": [[297, 297], [298, 298], [299, 299]], "source_code_file": "src/df.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "print_table", "lineno_map": [[310, 310], [313, 313], [315, 315], [321, 321], [322, 322], [324, 324], [325, 325], [326, 326], [328, 328], [329, 329], [331, 331], [332, 332], [336, 336]], "source_code_file": "src/df.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "alloc_field", "lineno_map": [[349, 349], [350, 350], [351, 351], [352, 352], [353, 353], [355, 355], [356, 356], [359, 359]], "source_code_file": "src/df.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "decode_output_arg", "lineno_map": [[368, 368], [369, 369], [373, 373], [376, 376], [377, 377], [380, 380], [381, 381], [383, 383], [385, 385], [389, 389], [391, 391], [392, 392], [395, 395], [398, 398], [400, 400], [403, 403], [415, 415], [419, 419], [423, 423], [427, 427], [429, 429], [431, 431], [433, 433]], "source_code_file": "src/df.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "get_field_list", "lineno_map": [[440, 440], [443, 443], [444, 444], [445, 445], [446, 446], [447, 447], [448, 448], [449, 449], [450, 450], [454, 454], [455, 455], [456, 456], [458, 458], [459, 459], [460, 460], [461, 461], [462, 462], [466, 466], [467, 467], [468, 468], [469, 469], [470, 470], [471, 471], [472, 472], [473, 473], [477, 477], [478, 478], [479, 479], [480, 480], [481, 481], [482, 482], [483, 483], [484, 484], [488, 488], [491, 491], [496, 496]], "source_code_file": "src/df.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "get_header", "lineno_map": [[507, 507], [509, 509], [511, 511], [512, 512], [514, 514], [515, 515], [516, 516], [517, 517], [521, 521], [524, 524], [529, 529], [530, 530], [536, 536], [537, 537], [539, 539], [541, 541], [542, 542], [543, 543], [544, 544], [545, 545], [546, 546], [548, 548], [551, 551], [554, 554], [555, 555], [557, 557], [560, 560], [563, 563], [564, 564], [567, 567], [569, 569], [570, 570], [572, 572], [574, 574], [576, 576]], "source_code_file": "src/df.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "selected_fstype", "lineno_map": [[587, 587], [589, 589], [590, 590]], "source_code_file": "src/df.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "excluded_fstype", "lineno_map": [[602, 602], [604, 604], [605, 605]], "source_code_file": "src/df.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "devlist_hash", "lineno_map": [[613, 613]], "source_code_file": "src/df.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "devlist_compare", "lineno_map": [[620, 620], [621, 621]], "source_code_file": "src/df.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "devlist_for_dev", "lineno_map": [[628, 628], [631, 631]], "source_code_file": "src/df.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "devlist_free", "lineno_map": [[638, 638]], "source_code_file": "src/df.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "filter_mount_list", "lineno_map": [[654, 654], [655, 655], [657, 657], [658, 658], [660, 660], [664, 664], [665, 665], [668, 668], [671, 671], [676, 676], [677, 677], [678, 678], [679, 679], [684, 684], [689, 689], [691, 691], [693, 693], [694, 694], [696, 696], [697, 697], [698, 698], [699, 699], [700, 700], [701, 701], [702, 702], [709, 709], [711, 711], [713, 713], [715, 715], [720, 720], [724, 724], [725, 725], [730, 730], [736, 736], [738, 738], [739, 739], [740, 740], [745, 745], [746, 746], [747, 747], [748, 748], [749, 749], [750, 750], [751, 751], [753, 753], [758, 758], [759, 759], [760, 760], [763, 763], [764, 764], [765, 765], [766, 766], [769, 769], [770, 770]], "source_code_file": "src/df.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "me_for_dev", "lineno_map": [[781, 781], [782, 782]], "source_code_file": "src/df.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "df_readable", "lineno_map": [[809, 809], [813, 813], [815, 815], [816, 816]], "source_code_file": "src/df.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "add_uint_with_neg_flag", "lineno_map": [[832, 832], [834, 834], [838, 838], [839, 839], [841, 841], [842, 842], [844, 844], [845, 845], [848, 848], [849, 849], [852, 852], [853, 853]], "source_code_file": "src/df.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "has_uuid_suffix", "lineno_map": [[862, 862], [864, 864]], "source_code_file": "src/df.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "get_field_values", "lineno_map": [[875, 875], [876, 876], [877, 877], [878, 878], [880, 880], [881, 881], [882, 882], [884, 884], [885, 885], [889, 889], [890, 890], [891, 891], [892, 892], [893, 893], [894, 894], [895, 895], [897, 897], [898, 898], [899, 899], [901, 901], [902, 902]], "source_code_file": "src/df.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "add_to_grand_total", "lineno_map": [[910, 910], [911, 911], [912, 912], [913, 913], [915, 915], [916, 916], [917, 917], [918, 918], [919, 919], [920, 920], [922, 922]], "source_code_file": "src/df.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "get_dev", "lineno_map": [[948, 948], [951, 951], [954, 954], [959, 959], [966, 966], [967, 967], [970, 970], [971, 971], [972, 972], [977, 977], [979, 979], [982, 982], [983, 983], [984, 984], [985, 985], [989, 989], [990, 990], [994, 994], [1001, 1001], [1003, 1003], [1004, 1004], [1005, 1005], [1007, 1007], [1008, 1008], [1009, 1009], [1010, 1010], [1015, 1015], [1018, 1018], [1019, 1019], [1021, 1021], [1023, 1023], [1024, 1024], [1026, 1026], [1027, 1027], [1029, 1029], [1038, 1038], [1039, 1039], [1040, 1040], [1042, 1042], [1043, 1043], [1046, 1046], [1047, 1047], [1051, 1051], [1054, 1054], [1055, 1055], [1058, 1058], [1064, 1064], [1067, 1067], [1070, 1070], [1073, 1073], [1076, 1076], [1077, 1077], [1080, 1080], [1083, 1083], [1087, 1087], [1092, 1092], [1098, 1098], [1104, 1104], [1111, 1111], [1112, 1112], [1114, 1114], [1115, 1115], [1116, 1116], [1117, 1117], [1118, 1118], [1120, 1120], [1121, 1121], [1122, 1122], [1131, 1131], [1132, 1132], [1133, 1133], [1134, 1134], [1135, 1135], [1137, 1137], [1138, 1138], [1142, 1142], [1143, 1143], [1147, 1147], [1149, 1149], [1150, 1150], [1153, 1153], [1155, 1155], [1156, 1156], [1162, 1162], [1175, 1175], [1179, 1179], [1182, 1182], [1183, 1183], [1185, 1185], [1186, 1186], [1187, 1187], [1189, 1189]], "source_code_file": "src/df.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "last_device_for_mount", "lineno_map": [[1198, 1198], [1200, 1200], [1202, 1202], [1203, 1203], [1206, 1206], [1208, 1208], [1209, 1209], [1210, 1210], [1212, 1212]], "source_code_file": "src/df.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "get_disk", "lineno_map": [[1225, 1225], [1226, 1226], [1227, 1227], [1228, 1228], [1230, 1230], [1231, 1231], [1232, 1232], [1234, 1234], [1235, 1235], [1238, 1238], [1239, 1239], [1240, 1240], [1241, 1241], [1243, 1243], [1245, 1245], [1246, 1246], [1247, 1247], [1249, 1249], [1250, 1250], [1253, 1253], [1255, 1255], [1256, 1256], [1258, 1258], [1259, 1259], [1261, 1261], [1262, 1262], [1264, 1264], [1265, 1265], [1269, 1269], [1273, 1273], [1276, 1276], [1279, 1279], [1281, 1281], [1283, 1283], [1284, 1284], [1285, 1285], [1288, 1288], [1290, 1290], [1292, 1292]], "source_code_file": "src/df.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "get_point", "lineno_map": [[1307, 1307], [1312, 1312], [1313, 1313], [1315, 1315], [1316, 1316], [1318, 1318], [1320, 1320], [1321, 1321], [1323, 1323], [1324, 1324], [1325, 1325], [1326, 1326], [1327, 1327], [1329, 1329], [1330, 1330], [1335, 1335], [1336, 1336], [1337, 1337], [1338, 1338], [1339, 1339], [1341, 1341], [1342, 1342], [1344, 1344], [1346, 1346], [1347, 1347], [1353, 1353], [1355, 1355], [1356, 1356], [1360, 1360], [1364, 1364], [1365, 1365], [1366, 1366], [1369, 1369], [1370, 1370], [1371, 1371], [1373, 1373], [1377, 1377], [1378, 1378], [1379, 1379], [1388, 1388], [1389, 1389], [1391, 1391], [1392, 1392]], "source_code_file": "src/df.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "get_entry", "lineno_map": [[1403, 1403], [1404, 1404], [1407, 1407]], "source_code_file": "src/df.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "get_all_entries", "lineno_map": [[1418, 1418], [1420, 1420], [1421, 1421], [1422, 1422]], "source_code_file": "src/df.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "add_fs_type", "lineno_map": [[1432, 1432], [1433, 1433], [1434, 1434], [1435, 1435]], "source_code_file": "src/df.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "add_excluded_fs_type", "lineno_map": [[1445, 1445], [1446, 1446], [1447, 1447], [1448, 1448]], "source_code_file": "src/df.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "usage", "lineno_map": [[1454, 1454], [1455, 1455], [1458, 1458], [1459, 1459], [1464, 1464], [1468, 1468], [1476, 1476], [1483, 1483], [1489, 1489], [1493, 1493], [1499, 1499], [1500, 1500], [1501, 1501], [1502, 1502], [1503, 1503], [1508, 1508], [1510, 1510]], "source_code_file": "src/df.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "main", "lineno_map": [[1519, 1519], [1520, 1520], [1521, 1521], [1522, 1522], [1524, 1524], [1526, 1526], [1527, 1527], [1528, 1528], [1529, 1529], [1530, 1530], [1531, 1531], [1532, 1532], [1533, 1533], [1534, 1534], [1535, 1535], [1538, 1538], [1540, 1540], [1544, 1544], [1545, 1545], [1547, 1547], [1550, 1550], [1553, 1553], [1557, 1557], [1559, 1559], [1560, 1560], [1564, 1564], [1566, 1566], [1567, 1567], [1569, 1569], [1572, 1572], [1573, 1573], [1576, 1576], [1577, 1577], [1580, 1580], [1581, 1581], [1584, 1584], [1587, 1587], [1588, 1588], [1591, 1591], [1593, 1593], [1594, 1594], [1596, 1596], [1599, 1599], [1601, 1601], [1602, 1602], [1604, 1604], [1607, 1607], [1610, 1610], [1616, 1616], [1623, 1623], [1627, 1627], [1629, 1629], [1630, 1630], [1632, 1632], [1634, 1634], [1635, 1635], [1637, 1637], [1639, 1639], [1640, 1640], [1642, 1642], [1643, 1643], [1644, 1644], [1648, 1648], [1651, 1651], [1652, 1652], [1655, 1655], [1659, 1659], [1661, 1661], [1663, 1663], [1664, 1664], [1667, 1667], [1671, 1671], [1673, 1673], [1674, 1674], [1675, 1675], [1676, 1676], [1680, 1680], [1682, 1682], [1685, 1685], [1687, 1687], [1689, 1689], [1690, 1690], [1691, 1691], [1692, 1692], [1697, 1697], [1701, 1701], [1703, 1703], [1708, 1708], [1709, 1709], [1711, 1711], [1713, 1713], [1714, 1714], [1715, 1715], [1717, 1717], [1720, 1720], [1721, 1721], [1722, 1722], [1727, 1727], [1728, 1728], [1729, 1729], [1730, 1730], [1731, 1731], [1732, 1732], [1734, 1734], [1740, 1740], [1741, 1741], [1742, 1742], [1743, 1743], [1744, 1744], [1745, 1745], [1747, 1747], [1749, 1749], [1750, 1750], [1754, 1754], [1755, 1755], [1757, 1757], [1758, 1758], [1760, 1760], [1763, 1763], [1765, 1765], [1766, 1766], [1767, 1767], [1772, 1772], [1774, 1774], [1776, 1776], [1777, 1777], [1778, 1778], [1781, 1781], [1787, 1787], [1788, 1788]], "source_code_file": "src/df.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "emit_mandatory_arg_note", "lineno_map": [[586, 586], [587, 587], [590, 590]], "source_code_file": "src/nl.c", "binary_file1": "nl.json", "binary_file2": "nl.json"}
{"fname": "usage", "lineno_map": [[172, 172], [173, 173], [176, 176], [180, 180], [184, 184], [185, 185], [187, 187], [192, 192], [200, 200], [204, 204], [205, 205], [206, 206], [213, 213], [223, 223], [232, 232], [234, 234]], "source_code_file": "src/nl.c", "binary_file1": "nl.json", "binary_file2": "nl.json"}
{"fname": "build_type_arg", "lineno_map": [[245, 245], [247, 247], [252, 252], [255, 255], [256, 256], [257, 257], [258, 258], [259, 259], [260, 260], [262, 262], [263, 263], [264, 264], [267, 267]], "source_code_file": "src/nl.c", "binary_file1": "nl.json", "binary_file2": "nl.json"}
{"fname": "print_lineno", "lineno_map": [[280, 280], [282, 282], [283, 283], [284, 284], [285, 285]], "source_code_file": "src/nl.c", "binary_file1": "nl.json", "binary_file2": "nl.json"}
{"fname": "proc_header", "lineno_map": [[293, 293], [294, 294], [295, 295], [296, 296], [297, 297]], "source_code_file": "src/nl.c", "binary_file1": "nl.json", "binary_file2": "nl.json"}
{"fname": "proc_body", "lineno_map": [[305, 305], [306, 306], [307, 307], [308, 308], [309, 309]], "source_code_file": "src/nl.c", "binary_file1": "nl.json", "binary_file2": "nl.json"}
{"fname": "proc_footer", "lineno_map": [[317, 317], [318, 318], [319, 319], [320, 320], [321, 321]], "source_code_file": "src/nl.c", "binary_file1": "nl.json", "binary_file2": "nl.json"}
{"fname": "proc_text", "lineno_map": [[331, 331], [334, 334], [336, 336], [338, 338], [339, 339], [342, 342], [345, 345], [348, 348], [349, 349], [351, 351], [354, 354], [357, 357], [358, 358], [361, 361], [364, 364], [368, 368], [372, 372]], "source_code_file": "src/nl.c", "binary_file1": "nl.json", "binary_file2": "nl.json"}
{"fname": "check_section", "lineno_map": [[380, 380], [382, 382], [384, 384], [385, 385], [387, 387], [388, 388], [390, 390], [391, 391]], "source_code_file": "src/nl.c", "binary_file1": "nl.json", "binary_file2": "nl.json"}
{"fname": "process_file", "lineno_map": [[401, 401], [403, 403], [406, 406], [409, 409], [412, 412], [415, 415]], "source_code_file": "src/nl.c", "binary_file1": "nl.json", "binary_file2": "nl.json"}
{"fname": "nl_file", "lineno_map": [[429, 429], [431, 431], [432, 432], [436, 436], [437, 437], [439, 439], [444, 444], [446, 446], [448, 448], [450, 450], [453, 453], [454, 454], [455, 455], [457, 457]], "source_code_file": "src/nl.c", "binary_file1": "nl.json", "binary_file2": "nl.json"}
{"fname": "main", "lineno_map": [[468, 468], [471, 471], [472, 472], [473, 473], [474, 474], [476, 476], [478, 478], [480, 480], [483, 483], [486, 486], [488, 488], [490, 490], [494, 494], [496, 496], [498, 498], [502, 502], [504, 504], [506, 506], [510, 510], [511, 511], [515, 515], [516, 516], [519, 519], [522, 522], [523, 523], [526, 526], [529, 529], [530, 530], [533, 533], [534, 534], [535, 535], [536, 536], [537, 537], [538, 538], [541, 541], [543, 543], [547, 547], [549, 549], [550, 550], [552, 552], [557, 557], [558, 558], [561, 561], [563, 563], [564, 564], [565, 565], [567, 567], [568, 568], [569, 569], [571, 571], [572, 572], [573, 573], [576, 576], [579, 579], [580, 580], [581, 581], [582, 582], [584, 584], [585, 585], [586, 586], [590, 590], [591, 591], [593, 593], [594, 594], [596, 596], [597, 597]], "source_code_file": "src/nl.c", "binary_file1": "nl.json", "binary_file2": "nl.json"}
{"fname": "select_plural", "lineno_map": [[184, 184], [188, 188], [189, 189]], "source_code_file": "src/md5sum.c", "binary_file1": "sha384sum.json", "binary_file2": "sha384sum.json"}
{"fname": "ptr_align", "lineno_map": [[499, 499], [500, 500], [501, 501], [503, 503]], "source_code_file": "src/md5sum.c", "binary_file1": "sha384sum.json", "binary_file2": "sha384sum.json"}
{"fname": "emit_stdin_note", "lineno_map": [[579, 579], [580, 580], [583, 583]], "source_code_file": "src/md5sum.c", "binary_file1": "sha384sum.json", "binary_file2": "sha384sum.json"}
{"fname": "emit_ancillary_info", "lineno_map": [[631, 631], [632, 632], [642, 642], [651, 651], [655, 655], [656, 656], [662, 662], [665, 665], [667, 667], [669, 669]], "source_code_file": "src/md5sum.c", "binary_file1": "sha384sum.json", "binary_file2": "sha384sum.json"}
{"fname": "bad_cast", "lineno_map": [[695, 695], [696, 696], [697, 697]], "source_code_file": "src/md5sum.c", "binary_file1": "sha384sum.json", "binary_file2": "sha384sum.json"}
{"fname": "usage", "lineno_map": [[225, 225], [226, 226], [229, 229], [237, 237], [244, 244], [249, 249], [258, 258], [266, 266], [269, 269], [273, 273], [283, 283], [284, 284], [285, 285], [292, 292], [295, 295]], "source_code_file": "src/md5sum.c", "binary_file1": "sha384sum.json", "binary_file2": "sha384sum.json"}
{"fname": "filename_unescape", "lineno_map": [[311, 311], [313, 313], [315, 315], [318, 318], [323, 323], [324, 324], [327, 327], [330, 330], [343, 343], [347, 347], [348, 348]], "source_code_file": "src/md5sum.c", "binary_file1": "sha384sum.json", "binary_file2": "sha384sum.json"}
{"fname": "hex_digits", "lineno_map": [[358, 358], [360, 360], [362, 362]], "source_code_file": "src/md5sum.c", "binary_file1": "sha384sum.json", "binary_file2": "sha384sum.json"}
{"fname": "bsd_split_3", "lineno_map": [[377, 377], [381, 381], [382, 382], [383, 383], [385, 385], [388, 388], [390, 390], [393, 393], [395, 395], [396, 396], [398, 398], [401, 401], [403, 403], [404, 404], [406, 406]], "source_code_file": "src/md5sum.c", "binary_file1": "sha384sum.json", "binary_file2": "sha384sum.json"}
{"fname": "split_3", "lineno_map": [[419, 419], [422, 422], [423, 423], [424, 424], [426, 426], [428, 428], [429, 429], [434, 434], [435, 435], [437, 437], [473, 473], [474, 474], [475, 475], [477, 477], [478, 478], [489, 489], [492, 492], [509, 509], [510, 510], [513, 513], [515, 515], [519, 519], [527, 527], [529, 529], [531, 531], [533, 533], [534, 534], [539, 539], [541, 541]], "source_code_file": "src/md5sum.c", "binary_file1": "sha384sum.json", "binary_file2": "sha384sum.json"}
{"fname": "print_filename", "lineno_map": [[552, 552], [554, 554], [558, 558], [560, 560], [563, 563], [567, 567], [571, 571], [574, 574]], "source_code_file": "src/md5sum.c", "binary_file1": "sha384sum.json", "binary_file2": "sha384sum.json"}
{"fname": "digest_file", "lineno_map": [[596, 596], [598, 598], [600, 600], [602, 602], [603, 603], [614, 614], [615, 615], [617, 617], [619, 619], [622, 622], [627, 627], [632, 632], [634, 634], [636, 636], [637, 637], [638, 638], [642, 642], [644, 644]], "source_code_file": "src/md5sum.c", "binary_file1": "sha384sum.json", "binary_file2": "sha384sum.json"}
{"fname": "digest_check", "lineno_map": [[655, 655], [656, 656], [657, 657], [658, 658], [659, 659], [660, 660], [663, 663], [667, 667], [669, 669], [671, 671], [672, 672], [673, 673], [677, 677], [678, 678], [680, 680], [685, 685], [686, 686], [687, 687], [695, 695], [696, 696], [697, 697], [700, 700], [701, 701], [705, 705], [706, 706], [709, 709], [710, 710], [712, 712], [713, 713], [715, 715], [717, 717], [719, 719], [720, 720], [726, 726], [738, 738], [740, 740], [742, 742], [744, 744], [746, 746], [747, 747], [749, 749], [750, 750], [751, 751], [752, 752], [755, 755], [762, 762], [767, 767], [769, 769], [770, 770], [771, 771], [772, 772], [775, 775], [776, 776], [778, 778], [780, 780], [782, 782], [784, 784], [785, 785], [786, 786], [789, 789], [790, 790], [791, 791], [792, 792], [797, 797], [799, 799], [801, 801], [803, 803], [807, 807], [809, 809], [813, 813], [816, 816], [821, 821], [823, 823], [824, 824], [825, 825], [831, 831], [832, 832], [833, 833], [839, 839], [840, 840], [841, 841], [847, 847], [848, 848], [854, 854], [855, 855], [856, 856], [857, 857]], "source_code_file": "src/md5sum.c", "binary_file1": "sha384sum.json", "binary_file2": "sha384sum.json"}
{"fname": "main", "lineno_map": [[865, 865], [866, 866], [868, 868], [869, 869], [870, 870], [874, 874], [875, 875], [876, 876], [877, 877], [879, 879], [883, 883], [889, 889], [892, 892], [893, 893], [908, 908], [911, 911], [914, 914], [915, 915], [916, 916], [919, 919], [922, 922], [923, 923], [924, 924], [927, 927], [930, 930], [931, 931], [932, 932], [935, 935], [938, 938], [939, 939], [942, 942], [944, 944], [945, 945], [947, 947], [950, 950], [964, 964], [967, 967], [974, 974], [975, 975], [978, 978], [980, 980], [982, 982], [985, 985], [987, 987], [989, 989], [992, 992], [994, 994], [996, 996], [999, 999], [1001, 1001], [1002, 1002], [1004, 1004], [1007, 1007], [1009, 1009], [1010, 1010], [1011, 1011], [1014, 1014], [1016, 1016], [1017, 1017], [1018, 1018], [1021, 1021], [1023, 1023], [1024, 1024], [1025, 1025], [1028, 1028], [1030, 1030], [1031, 1031], [1032, 1032], [1035, 1035], [1036, 1036], [1038, 1038], [1039, 1039], [1040, 1040], [1042, 1042], [1044, 1044], [1046, 1046], [1047, 1047], [1050, 1050], [1053, 1053], [1054, 1054], [1064, 1064], [1065, 1065], [1067, 1067], [1069, 1069], [1070, 1070], [1077, 1077], [1079, 1079], [1080, 1080], [1081, 1081], [1086, 1086], [1087, 1087], [1089, 1089], [1090, 1090], [1092, 1092], [1094, 1094], [1096, 1096], [1098, 1098], [1101, 1101], [1106, 1106], [1107, 1107]], "source_code_file": "src/md5sum.c", "binary_file1": "sha384sum.json", "binary_file2": "sha384sum.json"}
{"fname": "usage", "lineno_map": [[53, 53], [54, 54], [57, 57], [58, 58], [63, 63], [68, 68], [69, 69], [70, 70], [72, 72]], "source_code_file": "src/nproc.c", "binary_file1": "nproc.json", "binary_file2": "nproc.json"}
{"fname": "main", "lineno_map": [[78, 78], [80, 80], [81, 81], [82, 82], [83, 83], [85, 85], [87, 87], [91, 91], [92, 92], [94, 94], [96, 96], [98, 98], [101, 101], [105, 105], [109, 109], [113, 113], [115, 115], [116, 116], [119, 119], [121, 121], [122, 122], [124, 124], [126, 126]], "source_code_file": "src/nproc.c", "binary_file1": "nproc.json", "binary_file2": "nproc.json"}
{"fname": "print_group_list", "lineno_map": [[40, 40], [41, 41], [43, 43], [45, 45], [46, 46], [47, 47], [50, 50], [51, 51], [53, 53], [55, 55], [56, 56], [57, 57], [63, 63], [64, 64], [66, 66], [68, 68], [73, 73], [78, 78], [79, 79], [81, 81], [82, 82], [83, 83], [85, 85]], "source_code_file": "src/group-list.c", "binary_file1": "groups.json", "binary_file2": "groups.json"}
{"fname": "print_group", "lineno_map": [[105, 105], [106, 106], [108, 108], [110, 110], [111, 111], [113, 113], [115, 115], [119, 119], [120, 120]], "source_code_file": "src/group-list.c", "binary_file1": "groups.json", "binary_file2": "groups.json"}
{"fname": "usage", "lineno_map": [[61, 61], [62, 62], [65, 65], [66, 66], [71, 71], [72, 72], [73, 73], [75, 75]], "source_code_file": "src/tty.c", "binary_file1": "tty.json", "binary_file2": "tty.json"}
{"fname": "main", "lineno_map": [[84, 84], [85, 85], [86, 86], [87, 87], [89, 89], [90, 90], [92, 92], [94, 94], [96, 96], [99, 99], [102, 102], [104, 104], [107, 107], [111, 111], [113, 113], [114, 114], [117, 117], [119, 119], [122, 122], [123, 123], [125, 125], [127, 127], [128, 128], [131, 131]], "source_code_file": "src/tty.c", "binary_file1": "tty.json", "binary_file2": "tty.json"}
{"fname": "usage", "lineno_map": [[84, 84], [85, 85], [88, 88], [89, 89], [96, 96], [97, 97], [98, 98], [100, 100]], "source_code_file": "src/pathchk.c", "binary_file1": "pathchk.json", "binary_file2": "pathchk.json"}
{"fname": "main", "lineno_map": [[106, 106], [107, 107], [108, 108], [112, 112], [113, 113], [114, 114], [115, 115], [117, 117], [119, 119], [121, 121], [124, 124], [125, 125], [129, 129], [133, 133], [136, 136], [138, 138], [141, 141], [145, 145], [147, 147], [148, 148], [151, 151], [152, 152]], "source_code_file": "src/pathchk.c", "binary_file1": "pathchk.json", "binary_file2": "pathchk.json"}
{"fname": "no_leading_hyphen", "lineno_map": [[166, 166], [167, 167], [169, 169]], "source_code_file": "src/pathchk.c", "binary_file1": "pathchk.json", "binary_file2": "pathchk.json"}
{"fname": "portable_chars_only", "lineno_map": [[183, 183], [188, 188], [190, 190], [192, 192], [193, 193], [194, 194], [195, 195]], "source_code_file": "src/pathchk.c", "binary_file1": "pathchk.json", "binary_file2": "pathchk.json"}
{"fname": "component_start", "lineno_map": [[210, 210], [211, 211]], "source_code_file": "src/pathchk.c", "binary_file1": "pathchk.json", "binary_file2": "pathchk.json"}
{"fname": "component_len", "lineno_map": [[221, 221]], "source_code_file": "src/pathchk.c", "binary_file1": "pathchk.json", "binary_file2": "pathchk.json"}
{"fname": "validate_file_name", "lineno_map": [[250, 250], [259, 259], [261, 261], [264, 264], [265, 265], [271, 271], [275, 275], [277, 277], [288, 288], [289, 289], [290, 290], [292, 292], [297, 297], [298, 298], [302, 302], [303, 303], [307, 307], [308, 308], [309, 309], [310, 310], [312, 312], [313, 313], [317, 317], [320, 320], [322, 322], [323, 323], [324, 324], [335, 335], [336, 336], [338, 338], [340, 340], [342, 342], [344, 344], [348, 348], [352, 352], [358, 358], [361, 361], [363, 363], [367, 367], [368, 368], [372, 372], [373, 373], [374, 374], [375, 375], [376, 376], [377, 377], [378, 378], [379, 379], [381, 381], [385, 385], [390, 390], [394, 394], [395, 395], [396, 396], [401, 401], [403, 403], [405, 405], [406, 406], [407, 407], [408, 408], [409, 409], [410, 410], [413, 413], [417, 417]], "source_code_file": "src/pathchk.c", "binary_file1": "pathchk.json", "binary_file2": "pathchk.json"}
{"fname": "to_uchar", "lineno_map": [[156, 156]], "source_code_file": "src/dd.c", "binary_file1": "dd.json", "binary_file2": "dd.json"}
{"fname": "select_plural", "lineno_map": [[184, 184], [188, 188], [189, 189]], "source_code_file": "src/dd.c", "binary_file1": "dd.json", "binary_file2": "dd.json"}
{"fname": "ptr_align", "lineno_map": [[499, 499], [500, 500], [501, 501], [502, 502], [503, 503]], "source_code_file": "src/dd.c", "binary_file1": "dd.json", "binary_file2": "dd.json"}
{"fname": "usable_st_size", "lineno_map": [[702, 702], [704, 704], [705, 705]], "source_code_file": "src/dd.c", "binary_file1": "dd.json", "binary_file2": "dd.json"}
{"fname": "maybe_close_stdout", "lineno_map": [[532, 532], [533, 533], [534, 534], [535, 535]], "source_code_file": "src/dd.c", "binary_file1": "dd.json", "binary_file2": "dd.json"}
{"fname": "nl_error", "lineno_map": [[543, 543], [545, 545], [546, 546], [550, 550], [551, 551]], "source_code_file": "src/dd.c", "binary_file1": "dd.json", "binary_file2": "dd.json"}
{"fname": "usage", "lineno_map": [[560, 560], [561, 561], [564, 564], [569, 569], [579, 579], [592, 592], [601, 601], [614, 614], [622, 622], [631, 631], [633, 633], [635, 635], [637, 637], [638, 638], [641, 641], [643, 643], [646, 646], [650, 650], [661, 661], [664, 664], [667, 667], [671, 671], [681, 681], [682, 682], [683, 683], [685, 685]], "source_code_file": "src/dd.c", "binary_file1": "dd.json", "binary_file2": "dd.json"}
{"fname": "alloc_ibuf", "lineno_map": [[698, 698], [701, 701], [702, 702], [704, 704], [706, 706], [713, 713], [715, 715]], "source_code_file": "src/dd.c", "binary_file1": "dd.json", "binary_file2": "dd.json"}
{"fname": "alloc_obuf", "lineno_map": [[723, 723], [726, 726], [729, 729], [730, 730], [732, 732], [734, 734], [741, 741], [745, 745], [746, 746]], "source_code_file": "src/dd.c", "binary_file1": "dd.json", "binary_file2": "dd.json"}
{"fname": "translate_charset", "lineno_map": [[753, 753], [754, 754], [755, 755]], "source_code_file": "src/dd.c", "binary_file1": "dd.json", "binary_file2": "dd.json"}
{"fname": "print_xfer_stats", "lineno_map": [[777, 777], [782, 782], [783, 783], [788, 788], [789, 789], [790, 790], [792, 792], [793, 793], [794, 794], [795, 795], [796, 796], [798, 798], [802, 802], [803, 803], [804, 804], [807, 807], [808, 808], [816, 816], [819, 819], [820, 820], [821, 821], [822, 822], [826, 826], [827, 827], [828, 828], [830, 830], [831, 831], [834, 834], [842, 842], [843, 843], [844, 844], [847, 847]], "source_code_file": "src/dd.c", "binary_file1": "dd.json", "binary_file2": "dd.json"}
{"fname": "print_stats", "lineno_map": [[853, 853], [856, 856], [858, 858], [859, 859], [862, 862], [863, 863], [867, 867], [868, 868], [869, 869], [874, 874], [877, 877]], "source_code_file": "src/dd.c", "binary_file1": "dd.json", "binary_file2": "dd.json"}
{"fname": "interrupt_handler", "lineno_map": [[887, 887]], "source_code_file": "src/dd.c", "binary_file1": "dd.json", "binary_file2": "dd.json"}
{"fname": "siginfo_handler", "lineno_map": [[897, 897]], "source_code_file": "src/dd.c", "binary_file1": "dd.json", "binary_file2": "dd.json"}
{"fname": "install_signal_handlers", "lineno_map": [[905, 905], [910, 910], [911, 911], [912, 912], [913, 913], [914, 914], [915, 915], [916, 916], [918, 918], [920, 920], [924, 924], [925, 925], [928, 928], [930, 930], [931, 931], [932, 932]], "source_code_file": "src/dd.c", "binary_file1": "dd.json", "binary_file2": "dd.json"}
{"fname": "cleanup", "lineno_map": [[953, 953], [954, 954], [959, 959], [960, 960]], "source_code_file": "src/dd.c", "binary_file1": "dd.json", "binary_file2": "dd.json"}
{"fname": "process_signals", "lineno_map": [[971, 971], [977, 977], [981, 981], [982, 982], [984, 984], [985, 985], [987, 987], [989, 989], [990, 990], [991, 991], [992, 992], [993, 993]], "source_code_file": "src/dd.c", "binary_file1": "dd.json", "binary_file2": "dd.json"}
{"fname": "finish_up", "lineno_map": [[1000, 1000], [1001, 1001], [1002, 1002]], "source_code_file": "src/dd.c", "binary_file1": "dd.json", "binary_file2": "dd.json"}
{"fname": "quit", "lineno_map": [[1008, 1008], [1009, 1009]], "source_code_file": "src/dd.c", "binary_file1": "dd.json", "binary_file2": "dd.json"}
{"fname": "cache_round", "lineno_map": [[1021, 1021], [1023, 1023], [1025, 1025], [1026, 1026], [1027, 1027], [1028, 1028], [1030, 1030], [1033, 1033]], "source_code_file": "src/dd.c", "binary_file1": "dd.json", "binary_file2": "dd.json"}
{"fname": "invalidate_cache", "lineno_map": [[1045, 1045], [1047, 1047], [1050, 1050], [1051, 1051], [1053, 1053], [1055, 1055], [1057, 1057], [1059, 1059], [1060, 1060], [1063, 1063], [1064, 1064], [1071, 1071], [1073, 1073], [1074, 1074], [1075, 1075], [1076, 1076], [1079, 1079], [1082, 1082], [1084, 1084], [1086, 1086], [1087, 1087], [1095, 1095], [1097, 1097], [1098, 1098], [1099, 1099]], "source_code_file": "src/dd.c", "binary_file1": "dd.json", "binary_file2": "dd.json"}
{"fname": "iread", "lineno_map": [[1120, 1120], [1121, 1121], [1124, 1124], [1125, 1125], [1126, 1126], [1128, 1128], [1129, 1129], [1132, 1132], [1135, 1135], [1136, 1136], [1138, 1138], [1140, 1140], [1142, 1142], [1143, 1143], [1144, 1144], [1150, 1150], [1154, 1154]], "source_code_file": "src/dd.c", "binary_file1": "dd.json", "binary_file2": "dd.json"}
{"fname": "iread_fullblock", "lineno_map": [[1162, 1162], [1164, 1164], [1166, 1166], [1167, 1167], [1169, 1169], [1171, 1171], [1172, 1172], [1173, 1173]], "source_code_file": "src/dd.c", "binary_file1": "dd.json", "binary_file2": "dd.json"}
{"fname": "iwrite", "lineno_map": [[1187, 1187], [1189, 1189], [1191, 1191], [1192, 1192], [1193, 1193], [1194, 1194], [1202, 1202], [1203, 1203], [1207, 1207], [1213, 1213], [1215, 1215], [1216, 1216], [1219, 1219], [1220, 1220], [1222, 1222], [1224, 1224], [1229, 1229], [1230, 1230], [1234, 1234], [1235, 1235], [1237, 1237], [1239, 1239], [1242, 1242], [1247, 1247], [1251, 1251], [1254, 1254], [1255, 1255]], "source_code_file": "src/dd.c", "binary_file1": "dd.json", "binary_file2": "dd.json"}
{"fname": "write_output", "lineno_map": [[1265, 1265], [1266, 1266], [1267, 1267], [1269, 1269], [1270, 1270], [1271, 1271], [1272, 1272], [1275, 1275], [1276, 1276]], "source_code_file": "src/dd.c", "binary_file1": "dd.json", "binary_file2": "dd.json"}
{"fname": "ifd_reopen", "lineno_map": [[1288, 1288], [1289, 1289], [1291, 1291]], "source_code_file": "src/dd.c", "binary_file1": "dd.json", "binary_file2": "dd.json"}
{"fname": "iftruncate", "lineno_map": [[1305, 1305], [1306, 1306], [1308, 1308]], "source_code_file": "src/dd.c", "binary_file1": "dd.json", "binary_file2": "dd.json"}
{"fname": "operand_matches", "lineno_map": [[1318, 1318], [1319, 1319]], "source_code_file": "src/dd.c", "binary_file1": "dd.json", "binary_file2": "dd.json"}
{"fname": "parse_symbols", "lineno_map": [[1332, 1332], [1336, 1336], [1339, 1339], [1340, 1340], [1341, 1341], [1343, 1343], [1345, 1345], [1346, 1346], [1348, 1348], [1352, 1352], [1353, 1353], [1355, 1355], [1356, 1356], [1358, 1358]], "source_code_file": "src/dd.c", "binary_file1": "dd.json", "binary_file2": "dd.json"}
{"fname": "parse_integer", "lineno_map": [[1374, 1374], [1376, 1376], [1378, 1378], [1380, 1380], [1382, 1382], [1386, 1386], [1387, 1387], [1388, 1388], [1392, 1392], [1394, 1394], [1396, 1396]], "source_code_file": "src/dd.c", "binary_file1": "dd.json", "binary_file2": "dd.json"}
{"fname": "scanargs", "lineno_map": [[1414, 1414], [1415, 1415], [1416, 1416], [1417, 1417], [1419, 1419], [1421, 1421], [1422, 1422], [1424, 1424], [1426, 1426], [1428, 1428], [1430, 1430], [1432, 1432], [1433, 1433], [1434, 1434], [1435, 1435], [1436, 1436], [1437, 1437], [1439, 1439], [1440, 1440], [1442, 1442], [1443, 1443], [1445, 1445], [1446, 1446], [1450, 1450], [1451, 1451], [1452, 1452], [1453, 1453], [1455, 1455], [1457, 1457], [1458, 1458], [1459, 1459], [1461, 1461], [1463, 1463], [1464, 1464], [1465, 1465], [1467, 1467], [1469, 1469], [1470, 1470], [1471, 1471], [1473, 1473], [1475, 1475], [1476, 1476], [1477, 1477], [1479, 1479], [1480, 1480], [1481, 1481], [1482, 1482], [1483, 1483], [1484, 1484], [1487, 1487], [1489, 1489], [1492, 1492], [1493, 1493], [1494, 1494], [1495, 1495], [1497, 1497], [1498, 1498], [1503, 1503], [1504, 1504], [1509, 1509], [1512, 1512], [1513, 1513], [1514, 1514], [1515, 1515], [1516, 1516], [1517, 1517], [1519, 1519], [1520, 1520], [1522, 1522], [1524, 1524], [1525, 1525], [1528, 1528], [1530, 1530], [1531, 1531], [1534, 1534], [1536, 1536], [1537, 1537], [1539, 1539], [1542, 1542], [1544, 1544], [1545, 1545], [1547, 1547], [1548, 1548], [1550, 1550], [1552, 1552], [1553, 1553], [1555, 1555], [1556, 1556], [1558, 1558], [1560, 1560], [1561, 1561], [1563, 1563], [1564, 1564], [1570, 1570], [1571, 1571], [1572, 1572], [1573, 1573], [1574, 1574], [1576, 1576], [1578, 1578], [1579, 1579], [1581, 1581], [1582, 1582], [1583, 1583], [1584, 1584], [1585, 1585], [1586, 1586], [1587, 1587], [1588, 1588], [1589, 1589], [1590, 1590], [1591, 1591], [1593, 1593], [1595, 1595], [1596, 1596], [1597, 1597], [1599, 1599], [1601, 1601], [1602, 1602], [1603, 1603]], "source_code_file": "src/dd.c", "binary_file1": "dd.json", "binary_file2": "dd.json"}
{"fname": "apply_translations", "lineno_map": [[1614, 1614], [1615, 1615], [1617, 1617], [1619, 1619], [1620, 1620], [1621, 1621], [1623, 1623], [1625, 1625], [1626, 1626], [1627, 1627], [1630, 1630], [1632, 1632], [1633, 1633], [1634, 1634], [1636, 1636], [1638, 1638], [1639, 1639], [1640, 1640]], "source_code_file": "src/dd.c", "binary_file1": "dd.json", "binary_file2": "dd.json"}
{"fname": "translate_buffer", "lineno_map": [[1652, 1652], [1653, 1653]], "source_code_file": "src/dd.c", "binary_file1": "dd.json", "binary_file2": "dd.json"}
{"fname": "swab_buffer", "lineno_map": [[1670, 1670], [1673, 1673], [1675, 1675], [1676, 1676], [1677, 1677], [1680, 1680], [1683, 1683], [1684, 1684], [1691, 1691], [1692, 1692], [1693, 1693]], "source_code_file": "src/dd.c", "binary_file1": "dd.json", "binary_file2": "dd.json"}
{"fname": "advance_input_offset", "lineno_map": [[1704, 1704], [1705, 1705], [1706, 1706]], "source_code_file": "src/dd.c", "binary_file1": "dd.json", "binary_file2": "dd.json"}
{"fname": "skip_via_lseek", "lineno_map": [[1737, 1737], [1741, 1741], [1742, 1742], [1743, 1743], [1744, 1744], [1745, 1745], [1747, 1747], [1748, 1748], [1751, 1751], [1752, 1752], [1753, 1753]], "source_code_file": "src/dd.c", "binary_file1": "dd.json", "binary_file2": "dd.json"}
{"fname": "skip", "lineno_map": [[1775, 1775], [1781, 1781], [1782, 1782], [1783, 1783], [1785, 1785], [1788, 1788], [1789, 1789], [1790, 1790], [1795, 1795], [1796, 1796], [1799, 1799], [1800, 1800], [1804, 1804], [1805, 1805], [1811, 1811], [1818, 1818], [1823, 1823], [1832, 1832], [1835, 1835], [1836, 1836], [1838, 1838], [1841, 1841], [1846, 1846], [1848, 1848], [1849, 1849], [1853, 1853], [1854, 1854], [1859, 1859], [1860, 1860], [1862, 1862], [1864, 1864], [1865, 1865], [1866, 1866], [1869, 1869], [1870, 1870], [1872, 1872], [1874, 1874], [1875, 1875], [1877, 1877], [1878, 1878], [1880, 1880], [1882, 1882]], "source_code_file": "src/dd.c", "binary_file1": "dd.json", "binary_file2": "dd.json"}
{"fname": "advance_input_after_read_error", "lineno_map": [[1897, 1897], [1899, 1899], [1901, 1901], [1906, 1906], [1907, 1907], [1908, 1908], [1910, 1910], [1914, 1914], [1915, 1915], [1918, 1918], [1920, 1920], [1921, 1921], [1922, 1922], [1923, 1923], [1925, 1925], [1926, 1926], [1930, 1930]], "source_code_file": "src/dd.c", "binary_file1": "dd.json", "binary_file2": "dd.json"}
{"fname": "copy_simple", "lineno_map": [[1939, 1939], [1943, 1943], [1945, 1945], [1947, 1947], [1948, 1948], [1949, 1949], [1950, 1950], [1951, 1951], [1953, 1953]], "source_code_file": "src/dd.c", "binary_file1": "dd.json", "binary_file2": "dd.json"}
{"fname": "copy_with_block", "lineno_map": [[1963, 1963], [1965, 1965], [1967, 1967], [1970, 1970], [1971, 1971], [1973, 1973], [1977, 1977], [1978, 1978], [1979, 1979], [1980, 1980], [1981, 1981]], "source_code_file": "src/dd.c", "binary_file1": "dd.json", "binary_file2": "dd.json"}
{"fname": "to_uchar", "lineno_map": [[156, 156]], "source_code_file": "src/pinky.c", "binary_file1": "pinky.json", "binary_file2": "pinky.json"}
{"fname": "count_ampersands", "lineno_map": [[87, 87], [90, 90], [91, 91], [92, 92]], "source_code_file": "src/pinky.c", "binary_file1": "pinky.json", "binary_file2": "pinky.json"}
{"fname": "create_fullname", "lineno_map": [[105, 105], [108, 108], [110, 110], [112, 112], [113, 113], [114, 114], [115, 115], [116, 116], [119, 119], [121, 121], [123, 123], [125, 125], [126, 126], [127, 127], [128, 128], [129, 129], [133, 133], [136, 136], [138, 138]], "source_code_file": "src/pinky.c", "binary_file1": "pinky.json", "binary_file2": "pinky.json"}
{"fname": "idle_string", "lineno_map": [[153, 153], [154, 154], [156, 156], [157, 157], [159, 159], [161, 161], [162, 162], [163, 163], [167, 167], [168, 168]], "source_code_file": "src/pinky.c", "binary_file1": "pinky.json", "binary_file2": "pinky.json"}
{"fname": "time_string", "lineno_map": [[185, 185], [186, 186], [188, 188], [190, 190]], "source_code_file": "src/pinky.c", "binary_file1": "pinky.json", "binary_file2": "pinky.json"}
{"fname": "print_entry", "lineno_map": [[210, 210], [215, 215], [216, 216], [217, 217], [219, 219], [221, 221], [222, 222], [226, 226], [227, 227], [230, 230], [232, 232], [237, 237], [238, 238], [239, 239], [241, 241], [244, 244], [247, 247], [248, 248], [250, 250], [251, 251], [252, 252], [256, 256], [257, 257], [259, 259], [261, 261], [262, 262], [265, 265], [268, 268], [271, 271], [274, 274], [275, 275], [278, 278], [281, 281], [282, 282], [283, 283], [285, 285], [287, 287], [288, 288], [289, 289], [291, 291], [292, 292], [294, 294], [296, 296], [297, 297], [301, 301]], "source_code_file": "src/pinky.c", "binary_file1": "pinky.json", "binary_file2": "pinky.json"}
{"fname": "print_long_entry", "lineno_map": [[311, 311], [313, 313], [314, 314], [316, 316], [317, 317], [320, 320], [325, 325], [328, 328], [329, 329], [331, 331], [332, 332], [333, 333], [336, 336], [338, 338], [340, 340], [341, 341], [342, 342], [343, 343], [344, 344], [347, 347], [351, 351], [352, 352], [353, 353], [354, 354], [356, 356], [357, 357], [361, 361], [363, 363], [364, 364], [365, 365], [368, 368], [371, 371], [375, 375], [376, 376], [377, 377], [378, 378], [380, 380], [381, 381], [385, 385], [387, 387], [388, 388], [389, 389], [392, 392], [395, 395]], "source_code_file": "src/pinky.c", "binary_file1": "pinky.json", "binary_file2": "pinky.json"}
{"fname": "print_heading", "lineno_map": [[404, 404], [405, 405], [406, 406], [407, 407], [408, 408], [409, 409], [410, 410], [412, 412], [413, 413], [415, 415]], "source_code_file": "src/pinky.c", "binary_file1": "pinky.json", "binary_file2": "pinky.json"}
{"fname": "scan_entries", "lineno_map": [[424, 424], [426, 426], [427, 427], [431, 431], [432, 432], [435, 435], [436, 436], [438, 438], [440, 440], [442, 442], [444, 444], [445, 445], [447, 447], [452, 452], [454, 454]], "source_code_file": "src/pinky.c", "binary_file1": "pinky.json", "binary_file2": "pinky.json"}
{"fname": "short_pinky", "lineno_map": [[465, 465], [467, 467], [468, 468], [470, 470]], "source_code_file": "src/pinky.c", "binary_file1": "pinky.json", "binary_file2": "pinky.json"}
{"fname": "long_pinky", "lineno_map": [[478, 478], [479, 479]], "source_code_file": "src/pinky.c", "binary_file1": "pinky.json", "binary_file2": "pinky.json"}
{"fname": "usage", "lineno_map": [[485, 485], [486, 486], [489, 489], [490, 490], [498, 498], [505, 505], [506, 506], [507, 507], [512, 512], [514, 514]], "source_code_file": "src/pinky.c", "binary_file1": "pinky.json", "binary_file2": "pinky.json"}
{"fname": "main", "lineno_map": [[524, 524], [525, 525], [526, 526], [527, 527], [529, 529], [531, 531], [533, 533], [536, 536], [540, 540], [544, 544], [548, 548], [552, 552], [554, 554], [559, 559], [561, 561], [563, 563], [567, 567], [571, 571], [575, 575], [578, 578], [580, 580], [583, 583], [587, 587], [589, 589], [591, 591], [593, 593], [596, 596], [597, 597], [599, 599]], "source_code_file": "src/pinky.c", "binary_file1": "pinky.json", "binary_file2": "pinky.json"}
{"fname": "ptr_align", "lineno_map": [[500, 500], [501, 501], [502, 502]], "source_code_file": "src/shred.c", "binary_file1": "shred.json", "binary_file2": "shred.json"}
{"fname": "emit_mandatory_arg_note", "lineno_map": [[586, 586], [587, 587], [590, 590]], "source_code_file": "src/shred.c", "binary_file1": "shred.json", "binary_file2": "shred.json"}
{"fname": "emit_ancillary_info", "lineno_map": [[631, 631], [632, 632], [645, 645], [646, 646], [648, 648], [655, 655], [656, 656], [662, 662], [665, 665], [667, 667], [669, 669]], "source_code_file": "src/shred.c", "binary_file1": "shred.json", "binary_file2": "shred.json"}
{"fname": "randint_choose", "lineno_map": [[45, 45], [46, 46], [47, 47]], "source_code_file": "src/shred.c", "binary_file1": "shred.json", "binary_file2": "shred.json"}
{"fname": "usage", "lineno_map": [[166, 166], [167, 167], [170, 170], [171, 171], [175, 175], [180, 180], [182, 182], [188, 188], [196, 196], [197, 197], [198, 198], [210, 210], [218, 218], [228, 228], [235, 235], [245, 245], [250, 250], [252, 252]], "source_code_file": "src/shred.c", "binary_file1": "shred.json", "binary_file2": "shred.json"}
{"fname": "periodic_pattern", "lineno_map": [[261, 261], [265, 265], [267, 267], [268, 268], [269, 269], [270, 270]], "source_code_file": "src/shred.c", "binary_file1": "shred.json", "binary_file2": "shred.json"}
{"fname": "fillpattern", "lineno_map": [[285, 285], [287, 287], [288, 288], [289, 289], [290, 290], [291, 291], [292, 292], [293, 293], [294, 294], [297, 297], [298, 298], [299, 299]], "source_code_file": "src/shred.c", "binary_file1": "shred.json", "binary_file2": "shred.json"}
{"fname": "passname", "lineno_map": [[310, 310], [311, 311], [313, 313]], "source_code_file": "src/shred.c", "binary_file1": "shred.json", "binary_file2": "shred.json"}
{"fname": "ignorable_sync_errno", "lineno_map": [[322, 322], [324, 324]], "source_code_file": "src/shred.c", "binary_file1": "shred.json", "binary_file2": "shred.json"}
{"fname": "dosync", "lineno_map": [[339, 339], [341, 341], [342, 342], [344, 344], [345, 345], [350, 350], [352, 352], [353, 353], [355, 355], [356, 356], [360, 360]], "source_code_file": "src/shred.c", "binary_file1": "shred.json", "binary_file2": "shred.json"}
{"fname": "direct_mode", "lineno_map": [[371, 371], [372, 372], [374, 374], [376, 376], [377, 377], [378, 378]], "source_code_file": "src/shred.c", "binary_file1": "shred.json", "binary_file2": "shred.json"}
{"fname": "dorewind", "lineno_map": [[392, 392], [399, 399], [400, 400], [401, 401], [405, 405], [406, 406], [407, 407]], "source_code_file": "src/shred.c", "binary_file1": "shred.json", "binary_file2": "shred.json"}
{"fname": "dopass", "lineno_map": [[434, 434], [437, 437], [443, 443], [447, 447], [452, 452], [453, 453], [456, 456], [457, 457], [466, 466], [467, 467], [468, 468], [470, 470], [472, 472], [473, 473], [478, 478], [480, 480], [481, 481], [482, 482], [486, 486], [490, 490], [492, 492], [493, 493], [494, 494], [497, 497], [501, 501], [502, 502], [504, 504], [506, 506], [507, 507], [510, 510], [511, 511], [513, 513], [515, 515], [516, 516], [517, 517], [520, 520], [523, 523], [524, 524], [529, 529], [536, 536], [538, 538], [539, 539], [540, 540], [541, 541], [543, 543], [553, 553], [554, 554], [556, 556], [557, 557], [560, 560], [561, 561], [562, 562], [564, 564], [566, 566], [574, 574], [576, 576], [577, 577], [581, 581], [583, 583], [586, 586], [587, 587], [591, 591], [593, 593], [594, 594], [597, 597], [599, 599], [600, 600], [604, 604], [605, 605], [608, 608], [609, 609], [610, 610], [611, 611], [614, 614], [615, 615], [616, 616], [621, 621], [622, 622], [623, 623], [632, 632], [634, 634], [636, 636], [639, 639], [646, 646], [648, 648], [650, 650], [653, 653], [657, 657]], "source_code_file": "src/shred.c", "binary_file1": "shred.json", "binary_file2": "shred.json"}
{"fname": "genpattern", "lineno_map": [[751, 751], [755, 755], [756, 756], [757, 757], [758, 758], [762, 762], [763, 763], [765, 765], [767, 767], [769, 769], [770, 770], [772, 772], [775, 775], [776, 776], [778, 778], [780, 780], [781, 781], [782, 782], [783, 783], [785, 785], [787, 787], [794, 794], [796, 796], [797, 797], [799, 799], [800, 800], [802, 802], [806, 806], [829, 829], [830, 830], [831, 831], [833, 833], [835, 835], [836, 836], [837, 837], [841, 841], [842, 842], [843, 843], [844, 844], [846, 846]], "source_code_file": "src/shred.c", "binary_file1": "shred.json", "binary_file2": "shred.json"}
{"fname": "do_wipefd", "lineno_map": [[862, 862], [865, 865], [868, 868], [869, 869], [870, 870], [872, 872], [874, 874], [881, 881], [882, 882], [883, 883], [885, 885], [888, 888], [890, 890], [895, 895], [897, 897], [898, 898], [900, 900], [902, 902], [904, 904], [907, 907], [908, 908], [909, 909], [910, 910], [912, 912], [913, 913], [922, 922], [923, 923], [927, 927], [931, 931], [932, 932], [933, 933], [936, 936], [938, 938], [943, 943], [945, 945], [947, 947], [948, 948], [949, 949], [951, 951], [953, 953], [954, 954], [962, 962], [964, 964], [965, 965], [967, 967], [969, 969], [971, 971], [972, 972], [981, 981], [982, 982], [984, 984], [985, 985], [990, 990]], "source_code_file": "src/shred.c", "binary_file1": "shred.json", "binary_file2": "shred.json"}
{"fname": "wipefd", "lineno_map": [[999, 999], [1001, 1001], [1003, 1003], [1006, 1006], [1008, 1008]], "source_code_file": "src/shred.c", "binary_file1": "shred.json", "binary_file2": "shred.json"}
{"fname": "incname", "lineno_map": [[1028, 1028], [1030, 1030], [1034, 1034], [1037, 1037], [1039, 1039], [1044, 1044]], "source_code_file": "src/shred.c", "binary_file1": "shred.json", "binary_file2": "shred.json"}
{"fname": "wipename", "lineno_map": [[1079, 1079], [1080, 1080], [1081, 1081], [1082, 1082], [1083, 1083], [1084, 1084], [1085, 1085], [1087, 1087], [1088, 1088], [1090, 1090], [1091, 1091], [1093, 1093], [1094, 1094], [1096, 1096], [1097, 1097], [1099, 1099], [1102, 1102], [1103, 1103], [1104, 1104], [1106, 1106], [1107, 1107], [1108, 1108], [1114, 1114], [1115, 1115], [1116, 1116], [1117, 1117], [1119, 1119], [1123, 1123], [1125, 1125], [1126, 1126], [1128, 1128], [1129, 1129], [1130, 1130], [1132, 1132], [1133, 1133], [1134, 1134], [1136, 1136], [1137, 1137], [1140, 1140], [1141, 1141], [1142, 1142]], "source_code_file": "src/shred.c", "binary_file1": "shred.json", "binary_file2": "shred.json"}
{"fname": "wipefile", "lineno_map": [[1165, 1165], [1166, 1166], [1167, 1167], [1168, 1168], [1169, 1169], [1170, 1170], [1172, 1172], [1176, 1176], [1177, 1177], [1179, 1179], [1180, 1180], [1182, 1182], [1183, 1183]], "source_code_file": "src/shred.c", "binary_file1": "shred.json", "binary_file2": "shred.json"}
{"fname": "clear_random_data", "lineno_map": [[1197, 1197]], "source_code_file": "src/shred.c", "binary_file1": "shred.json", "binary_file2": "shred.json"}
{"fname": "main", "lineno_map": [[1204, 1204], [1205, 1205], [1210, 1210], [1213, 1213], [1214, 1214], [1215, 1215], [1216, 1216], [1218, 1218], [1220, 1220], [1221, 1221], [1223, 1223], [1225, 1225], [1228, 1228], [1232, 1232], [1235, 1235], [1239, 1239], [1240, 1240], [1241, 1241], [1245, 1245], [1246, 1246], [1248, 1248], [1253, 1253], [1254, 1254], [1258, 1258], [1262, 1262], [1266, 1266], [1269, 1269], [1271, 1271], [1274, 1274], [1278, 1278], [1279, 1279], [1281, 1281], [1283, 1283], [1284, 1284], [1287, 1287], [1288, 1288], [1289, 1289], [1290, 1290], [1292, 1292], [1294, 1294], [1295, 1295], [1297, 1297], [1302, 1302], [1304, 1304]], "source_code_file": "src/shred.c", "binary_file1": "shred.json", "binary_file2": "shred.json"}
{"fname": "usage", "lineno_map": [[47, 47], [48, 48], [51, 51], [54, 54], [56, 56], [57, 57], [58, 58], [60, 60]], "source_code_file": "src/unlink.c", "binary_file1": "unlink.json", "binary_file2": "unlink.json"}
{"fname": "main", "lineno_map": [[67, 67], [68, 68], [69, 69], [70, 70], [72, 72], [74, 74], [76, 76], [77, 77], [79, 79], [81, 81], [82, 82], [85, 85], [87, 87], [88, 88], [91, 91], [92, 92]], "source_code_file": "src/unlink.c", "binary_file1": "unlink.json", "binary_file2": "unlink.json"}
{"fname": "extent_scan_init", "lineno_map": [[71, 71], [72, 72], [73, 73], [74, 74], [75, 75], [76, 76], [77, 77]], "source_code_file": "src/extent-scan.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "extent_scan_read", "lineno_map": [[89, 89], [90, 90], [95, 95], [96, 96], [103, 103], [105, 105], [106, 106], [107, 107], [108, 108], [112, 112], [114, 114], [115, 115], [120, 120], [122, 122], [126, 126], [127, 127], [131, 131], [132, 132], [134, 134], [137, 137], [138, 138], [140, 140], [145, 145], [146, 146], [147, 147], [148, 148], [151, 151], [153, 153], [155, 155], [156, 156], [157, 157], [165, 165], [166, 166], [171, 171], [173, 173], [175, 175], [177, 177], [178, 178], [181, 181], [182, 182], [184, 184], [185, 185], [189, 189], [190, 190], [191, 191], [192, 192], [193, 193], [197, 197], [198, 198], [202, 202], [203, 203], [206, 206], [208, 208], [211, 211], [213, 213]], "source_code_file": "src/extent-scan.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "ignorable_ctx_err", "lineno_map": [[26, 26], [27, 27], [28, 28]], "source_code_file": "src/mkdir.c", "binary_file1": "mkdir.json", "binary_file2": "mkdir.json"}
{"fname": "restorecon", "lineno_map": [[41, 41]], "source_code_file": "src/mkdir.c", "binary_file1": "mkdir.json", "binary_file2": "mkdir.json"}
{"fname": "defaultcon", "lineno_map": [[45, 45]], "source_code_file": "src/mkdir.c", "binary_file1": "mkdir.json", "binary_file2": "mkdir.json"}
{"fname": "is_smack_enabled", "lineno_map": [[40, 40], [44, 44], [46, 46]], "source_code_file": "src/mkdir.c", "binary_file1": "mkdir.json", "binary_file2": "mkdir.json"}
{"fname": "usage", "lineno_map": [[55, 55], [56, 56], [59, 59], [60, 60], [64, 64], [66, 66], [71, 71], [77, 77], [78, 78], [79, 79], [81, 81]], "source_code_file": "src/mkdir.c", "binary_file1": "mkdir.json", "binary_file2": "mkdir.json"}
{"fname": "announce_mkdir", "lineno_map": [[111, 111], [112, 112], [113, 113]], "source_code_file": "src/mkdir.c", "binary_file1": "mkdir.json", "binary_file2": "mkdir.json"}
{"fname": "make_ancestor", "lineno_map": [[124, 124], [126, 126], [127, 127], [128, 128], [131, 131], [132, 132], [133, 133], [134, 134], [135, 135], [136, 136], [138, 138], [139, 139], [140, 140], [142, 142], [144, 144], [145, 145]], "source_code_file": "src/mkdir.c", "binary_file1": "mkdir.json", "binary_file2": "mkdir.json"}
{"fname": "process_dir", "lineno_map": [[154, 154], [157, 157], [159, 159], [160, 160], [161, 161], [165, 165], [169, 169], [176, 176], [177, 177], [179, 179], [180, 180], [181, 181]], "source_code_file": "src/mkdir.c", "binary_file1": "mkdir.json", "binary_file2": "mkdir.json"}
{"fname": "main", "lineno_map": [[191, 191], [193, 193], [196, 196], [197, 197], [198, 198], [199, 199], [200, 200], [203, 203], [204, 204], [205, 205], [206, 206], [208, 208], [210, 210], [212, 212], [215, 215], [218, 218], [221, 221], [224, 224], [227, 227], [236, 236], [238, 238], [239, 239], [243, 243], [244, 244], [246, 246], [250, 250], [252, 252], [253, 253], [259, 259], [261, 261], [262, 262], [263, 263], [265, 265], [267, 267], [268, 268], [274, 274], [276, 276], [277, 277], [278, 278], [280, 280], [282, 282], [283, 283], [284, 284], [286, 286], [288, 288], [291, 291]], "source_code_file": "src/mkdir.c", "binary_file1": "mkdir.json", "binary_file2": "mkdir.json"}
{"fname": "emit_mandatory_arg_note", "lineno_map": [[586, 586], [590, 590]], "source_code_file": "src/date.c", "binary_file1": "date.json", "binary_file2": "date.json"}
{"fname": "usage", "lineno_map": [[126, 126], [127, 127], [130, 130], [135, 135], [139, 139], [141, 141], [144, 144], [148, 148], [151, 151], [158, 158], [162, 162], [168, 168], [171, 171], [175, 175], [176, 176], [177, 177], [184, 184], [190, 190], [196, 196], [201, 201], [207, 207], [213, 213], [223, 223], [229, 229], [235, 235], [241, 241], [250, 250], [259, 259], [266, 266], [278, 278], [280, 280]], "source_code_file": "src/date.c", "binary_file1": "date.json", "binary_file2": "date.json"}
{"fname": "batch_convert", "lineno_map": [[298, 298], [300, 300], [301, 301], [305, 305], [306, 306], [308, 308], [312, 312], [313, 313], [314, 314], [317, 317], [318, 318], [324, 324], [327, 327], [328, 328], [329, 329], [330, 330], [334, 334], [338, 338], [339, 339], [341, 341]], "source_code_file": "src/date.c", "binary_file1": "date.json", "binary_file2": "date.json"}
{"fname": "main", "lineno_map": [[350, 350], [351, 351], [353, 353], [354, 354], [355, 355], [356, 356], [362, 362], [363, 363], [364, 364], [365, 365], [367, 367], [369, 369], [372, 372], [374, 374], [377, 377], [380, 380], [383, 383], [393, 393], [394, 394], [396, 396], [409, 409], [411, 411], [412, 412], [413, 413], [417, 417], [420, 420], [423, 423], [424, 424], [430, 430], [431, 431], [434, 434], [435, 435], [437, 437], [440, 440], [442, 442], [443, 443], [444, 444], [448, 448], [449, 449], [450, 450], [452, 452], [454, 454], [455, 455], [456, 456], [459, 459], [461, 461], [462, 462], [463, 463], [466, 466], [468, 468], [470, 470], [471, 471], [474, 474], [476, 476], [477, 477], [478, 478], [480, 480], [482, 482], [483, 483], [486, 486], [487, 487], [491, 491], [493, 493], [494, 494], [503, 503], [507, 507], [508, 508], [510, 510], [511, 511], [514, 514], [515, 515], [517, 517], [519, 519], [523, 523], [524, 524], [525, 525], [529, 529], [534, 534], [540, 540], [542, 542], [543, 543], [544, 544], [548, 548], [549, 549], [550, 550], [556, 556], [557, 557], [559, 559], [563, 563], [565, 565], [566, 566], [570, 570]], "source_code_file": "src/date.c", "binary_file1": "date.json", "binary_file2": "date.json"}
{"fname": "show_date", "lineno_map": [[586, 586], [588, 588], [589, 589], [590, 590], [591, 591], [592, 592], [593, 593], [599, 599], [600, 600]], "source_code_file": "src/date.c", "binary_file1": "date.json", "binary_file2": "date.json"}
{"fname": "initialize_exit_failure", "lineno_map": [[100, 100], [101, 101], [102, 102], [103, 103]], "source_code_file": "src/stdbuf.c", "binary_file1": "stdbuf.json", "binary_file2": "stdbuf.json"}
{"fname": "parse_size", "lineno_map": [[69, 69], [73, 73], [75, 75], [76, 76], [80, 80]], "source_code_file": "src/stdbuf.c", "binary_file1": "stdbuf.json", "binary_file2": "stdbuf.json"}
{"fname": "usage", "lineno_map": [[87, 87], [88, 88], [91, 91], [92, 92], [96, 96], [98, 98], [103, 103], [104, 104], [105, 105], [108, 108], [111, 111], [117, 117], [123, 123], [125, 125]], "source_code_file": "src/stdbuf.c", "binary_file1": "stdbuf.json", "binary_file2": "stdbuf.json"}
{"fname": "set_program_path", "lineno_map": [[137, 137], [139, 139], [143, 143], [144, 144], [145, 145], [146, 146], [149, 149], [150, 150], [152, 152], [153, 153], [155, 155], [156, 156], [159, 159], [162, 162]], "source_code_file": "src/stdbuf.c", "binary_file1": "stdbuf.json", "binary_file2": "stdbuf.json"}
{"fname": "optc_to_fileno", "lineno_map": [[169, 169], [171, 171], [174, 174], [177, 177], [180, 180]], "source_code_file": "src/stdbuf.c", "binary_file1": "stdbuf.json", "binary_file2": "stdbuf.json"}
{"fname": "set_LD_PRELOAD", "lineno_map": [[194, 194], [196, 196], [215, 215], [221, 221], [228, 228], [230, 230], [233, 233], [234, 234], [235, 235], [236, 236], [238, 238], [240, 240], [241, 241], [242, 242], [247, 247], [248, 248], [250, 250], [252, 252], [253, 253], [255, 255], [257, 257], [263, 263], [265, 265]], "source_code_file": "src/stdbuf.c", "binary_file1": "stdbuf.json", "binary_file2": "stdbuf.json"}
{"fname": "set_libstdbuf_options", "lineno_map": [[277, 277], [279, 279], [281, 281], [286, 286], [287, 287], [290, 290], [292, 292], [293, 293], [294, 294], [296, 296], [298, 298], [303, 303]], "source_code_file": "src/stdbuf.c", "binary_file1": "stdbuf.json", "binary_file2": "stdbuf.json"}
{"fname": "main", "lineno_map": [[316, 316], [317, 317], [318, 318], [319, 319], [321, 321], [322, 322], [324, 324], [328, 328], [334, 334], [335, 335], [336, 336], [337, 337], [338, 338], [339, 339], [340, 340], [345, 345], [346, 346], [349, 349], [350, 350], [351, 351], [355, 355], [357, 357], [360, 360], [364, 364], [365, 365], [368, 368], [370, 370], [371, 371], [374, 374], [376, 376], [377, 377], [382, 382], [383, 383], [384, 384], [385, 385], [386, 386], [388, 388], [390, 390], [391, 391]], "source_code_file": "src/stdbuf.c", "binary_file1": "stdbuf.json", "binary_file2": "stdbuf.json"}
{"fname": "emit_mandatory_arg_note", "lineno_map": [[586, 586], [587, 587], [590, 590]], "source_code_file": "src/seq.c", "binary_file1": "seq.json", "binary_file2": "seq.json"}
{"fname": "usage", "lineno_map": [[68, 68], [69, 69], [72, 72], [77, 77], [81, 81], [83, 83], [88, 88], [89, 89], [90, 90], [101, 101], [106, 106], [108, 108]], "source_code_file": "src/seq.c", "binary_file1": "seq.json", "binary_file2": "seq.json"}
{"fname": "scan_arg", "lineno_map": [[145, 145], [147, 147], [148, 148], [151, 151], [153, 153], [155, 155], [159, 159], [160, 160], [163, 163], [164, 164], [167, 167], [168, 168], [169, 169], [172, 172], [174, 174], [175, 175], [177, 177], [179, 179], [180, 180], [181, 181], [182, 182], [185, 185], [187, 187], [188, 188], [189, 189], [190, 190], [192, 192], [193, 193], [194, 194], [196, 196], [198, 198], [200, 200], [202, 202], [203, 203], [206, 206], [207, 207], [211, 211], [212, 212], [213, 213], [215, 215]], "source_code_file": "src/seq.c", "binary_file1": "seq.json", "binary_file2": "seq.json"}
{"fname": "long_double_format", "lineno_map": [[231, 231], [232, 232], [236, 236], [238, 238], [239, 239], [241, 241], [244, 244], [245, 245], [246, 246], [247, 247], [249, 249], [250, 250], [253, 253], [254, 254], [255, 255], [256, 256], [257, 257], [258, 258], [259, 259], [262, 262], [263, 263], [264, 264], [266, 266], [267, 267], [270, 270], [271, 271], [272, 272], [273, 273], [274, 274], [275, 275], [276, 276], [277, 277]], "source_code_file": "src/seq.c", "binary_file1": "seq.json", "binary_file2": "seq.json"}
{"fname": "print_numbers", "lineno_map": [[297, 297], [299, 299], [301, 301], [304, 304], [306, 306], [307, 307], [308, 308], [309, 309], [311, 311], [312, 312], [314, 314], [323, 323], [327, 327], [328, 328], [329, 329], [330, 330], [331, 331], [332, 332], [334, 334], [335, 335], [337, 337], [338, 338], [339, 339], [340, 340], [341, 341], [344, 344], [345, 345], [349, 349], [350, 350], [353, 353], [354, 354]], "source_code_file": "src/seq.c", "binary_file1": "seq.json", "binary_file2": "seq.json"}
{"fname": "get_default_format", "lineno_map": [[364, 364], [366, 366], [368, 368], [371, 371], [373, 373], [374, 374], [375, 375], [376, 376], [377, 377], [378, 378], [379, 379], [380, 380], [381, 381], [383, 383], [384, 384], [390, 390]], "source_code_file": "src/seq.c", "binary_file1": "seq.json", "binary_file2": "seq.json"}
{"fname": "incr", "lineno_map": [[404, 404], [405, 405], [409, 409], [411, 411], [413, 413], [414, 414], [415, 415]], "source_code_file": "src/seq.c", "binary_file1": "seq.json", "binary_file2": "seq.json"}
{"fname": "cmp", "lineno_map": [[423, 423], [425, 425]], "source_code_file": "src/seq.c", "binary_file1": "seq.json", "binary_file2": "seq.json"}
{"fname": "trim_leading_zeros", "lineno_map": [[435, 435], [436, 436], [437, 437], [440, 440], [441, 441]], "source_code_file": "src/seq.c", "binary_file1": "seq.json", "binary_file2": "seq.json"}
{"fname": "seq_fast", "lineno_map": [[451, 451], [455, 455], [456, 456], [458, 458], [459, 459], [463, 463], [466, 466], [467, 467], [470, 470], [472, 472], [473, 473], [476, 476], [478, 478], [479, 479], [484, 484], [485, 485], [486, 486], [488, 488], [491, 491], [494, 494], [496, 496], [497, 497], [500, 500], [502, 502], [503, 503], [504, 504], [506, 506], [508, 508], [509, 509], [510, 510], [511, 511], [512, 512], [516, 516], [519, 519], [521, 521], [522, 522], [523, 523], [528, 528], [529, 529], [530, 530], [535, 535], [536, 536]], "source_code_file": "src/seq.c", "binary_file1": "seq.json", "binary_file2": "seq.json"}
{"fname": "all_digits_p", "lineno_map": [[544, 544]], "source_code_file": "src/seq.c", "binary_file1": "seq.json", "binary_file2": "seq.json"}
{"fname": "main", "lineno_map": [[552, 552], [553, 553], [555, 555], [558, 558], [561, 561], [562, 562], [563, 563], [564, 564], [566, 566], [568, 568], [569, 569], [574, 574], [576, 576], [577, 577], [583, 583], [584, 584], [587, 587], [590, 590], [594, 594], [598, 598], [601, 601], [603, 603], [606, 606], [610, 610], [611, 611], [613, 613], [614, 614], [617, 617], [619, 619], [620, 620], [623, 623], [624, 624], [626, 626], [628, 628], [630, 630], [639, 639], [640, 640], [641, 641], [642, 642], [643, 643], [645, 645], [646, 646], [647, 647], [653, 653], [655, 655], [657, 657], [658, 658], [660, 660], [662, 662], [663, 663], [665, 665], [666, 666], [667, 667], [670, 670], [674, 674], [675, 675], [676, 676], [677, 677], [681, 681], [682, 682], [683, 683], [684, 684], [685, 685], [686, 686], [688, 688], [695, 695], [696, 696], [700, 700], [701, 701], [703, 703]], "source_code_file": "src/seq.c", "binary_file1": "seq.json", "binary_file2": "seq.json"}
{"fname": "initialize_exit_failure", "lineno_map": [[100, 100], [101, 101], [102, 102], [103, 103]], "source_code_file": "src/chroot.c", "binary_file1": "chroot.json", "binary_file2": "chroot.json"}
{"fname": "uid_unset", "lineno_map": [[45, 45]], "source_code_file": "src/chroot.c", "binary_file1": "chroot.json", "binary_file2": "chroot.json"}
{"fname": "gid_unset", "lineno_map": [[46, 46]], "source_code_file": "src/chroot.c", "binary_file1": "chroot.json", "binary_file2": "chroot.json"}
{"fname": "parse_additional_groups", "lineno_map": [[99, 99], [100, 100], [101, 101], [102, 102], [104, 104], [106, 106], [111, 111], [113, 113], [114, 114], [115, 115], [118, 118], [119, 119], [120, 120], [123, 123], [127, 127], [128, 128], [129, 129], [132, 132], [134, 134], [136, 136], [138, 138], [145, 145], [146, 146], [147, 147], [150, 150], [152, 152], [153, 153], [154, 154], [157, 157], [159, 159], [160, 160], [162, 162]], "source_code_file": "src/chroot.c", "binary_file1": "chroot.json", "binary_file2": "chroot.json"}
{"fname": "is_root", "lineno_map": [[173, 173], [174, 174], [175, 175]], "source_code_file": "src/chroot.c", "binary_file1": "chroot.json", "binary_file2": "chroot.json"}
{"fname": "usage", "lineno_map": [[182, 182], [183, 183], [186, 186], [191, 191], [196, 196], [199, 199], [202, 202], [206, 206], [207, 207], [208, 208], [212, 212], [214, 214]], "source_code_file": "src/chroot.c", "binary_file1": "chroot.json", "binary_file2": "chroot.json"}
{"fname": "main", "lineno_map": [[223, 223], [224, 224], [225, 225], [226, 226], [229, 229], [230, 230], [231, 231], [232, 232], [235, 235], [236, 236], [237, 237], [238, 238], [240, 240], [241, 241], [243, 243], [245, 245], [249, 249], [253, 253], [254, 254], [255, 255], [260, 260], [264, 264], [267, 267], [269, 269], [272, 272], [276, 276], [278, 278], [279, 279], [282, 282], [283, 283], [285, 285], [287, 287], [289, 289], [292, 292], [300, 300], [301, 301], [305, 305], [308, 308], [310, 310], [311, 311], [312, 312], [316, 316], [317, 317], [320, 320], [322, 322], [323, 323], [324, 324], [329, 329], [330, 330], [333, 333], [334, 334], [336, 336], [339, 339], [340, 340], [341, 341], [342, 342], [343, 343], [344, 344], [349, 349], [354, 354], [356, 356], [358, 358], [359, 359], [364, 364], [367, 367], [369, 369], [370, 370], [371, 371], [373, 373], [375, 375], [380, 380], [381, 381], [382, 382], [384, 384], [386, 386], [391, 391], [394, 394], [396, 396], [397, 397], [399, 399], [400, 400], [406, 406], [407, 407], [412, 412], [413, 413], [415, 415], [416, 416], [418, 418], [419, 419], [421, 421], [422, 422], [425, 425], [427, 427], [428, 428]], "source_code_file": "src/chroot.c", "binary_file1": "chroot.json", "binary_file2": "chroot.json"}
{"fname": "to_uchar", "lineno_map": [[156, 156]], "source_code_file": "src/fold.c", "binary_file1": "fold.json", "binary_file2": "fold.json"}
{"fname": "usage", "lineno_map": [[62, 62], [63, 63], [66, 66], [70, 70], [74, 74], [75, 75], [77, 77], [82, 82], [83, 83], [84, 84], [86, 86]], "source_code_file": "src/fold.c", "binary_file1": "fold.json", "binary_file2": "fold.json"}
{"fname": "adjust_column", "lineno_map": [[96, 96], [98, 98], [100, 100], [101, 101], [103, 103], [104, 104], [105, 105], [106, 106], [108, 108], [111, 111]], "source_code_file": "src/fold.c", "binary_file1": "fold.json", "binary_file2": "fold.json"}
{"fname": "fold_file", "lineno_map": [[124, 124], [125, 125], [130, 130], [132, 132], [133, 133], [136, 136], [138, 138], [140, 140], [144, 144], [146, 146], [148, 148], [149, 149], [151, 151], [153, 153], [154, 154], [155, 155], [156, 156], [160, 160], [162, 162], [167, 167], [169, 169], [170, 170], [173, 173], [175, 175], [176, 176], [178, 178], [183, 183], [188, 188], [189, 189], [191, 191], [194, 194], [196, 196], [197, 197], [198, 198], [203, 203], [205, 205], [206, 206], [209, 209], [210, 210], [211, 211], [215, 215], [218, 218], [220, 220], [221, 221], [223, 223], [225, 225], [226, 226], [227, 227], [230, 230], [232, 232]], "source_code_file": "src/fold.c", "binary_file1": "fold.json", "binary_file2": "fold.json"}
{"fname": "main", "lineno_map": [[242, 242], [248, 248], [249, 249], [250, 250], [251, 251], [253, 253], [255, 255], [257, 257], [261, 261], [264, 264], [268, 268], [273, 273], [274, 274], [277, 277], [278, 278], [279, 279], [283, 283], [284, 284], [287, 287], [289, 289], [292, 292], [296, 296], [297, 297], [300, 300], [301, 301], [302, 302], [305, 305], [306, 306]], "source_code_file": "src/fold.c", "binary_file1": "fold.json", "binary_file2": "fold.json"}
{"fname": "defaultcon", "lineno_map": [[45, 45]], "source_code_file": "src/mkfifo.c", "binary_file1": "mkfifo.json", "binary_file2": "mkfifo.json"}
{"fname": "usage", "lineno_map": [[50, 50], [51, 51], [54, 54], [55, 55], [59, 59], [61, 61], [64, 64], [69, 69], [70, 70], [71, 71], [73, 73]], "source_code_file": "src/mkfifo.c", "binary_file1": "mkfifo.json", "binary_file2": "mkfifo.json"}
{"fname": "main", "lineno_map": [[80, 80], [81, 81], [83, 83], [84, 84], [87, 87], [88, 88], [89, 89], [90, 90], [92, 92], [94, 94], [96, 96], [99, 99], [102, 102], [105, 105], [114, 114], [116, 116], [117, 117], [121, 121], [122, 122], [124, 124], [128, 128], [130, 130], [131, 131], [134, 134], [136, 136], [137, 137], [138, 138], [140, 140], [142, 142], [143, 143], [148, 148], [149, 149], [152, 152], [153, 153], [154, 154], [155, 155], [156, 156], [157, 157], [158, 158], [159, 159], [160, 160], [164, 164], [166, 166], [167, 167], [168, 168], [170, 170], [171, 171], [173, 173], [175, 175], [176, 176], [177, 177]], "source_code_file": "src/mkfifo.c", "binary_file1": "mkfifo.json", "binary_file2": "mkfifo.json"}
{"fname": "select_plural", "lineno_map": [[184, 184], [188, 188], [189, 189]], "source_code_file": "src/uptime.c", "binary_file1": "uptime.json", "binary_file2": "uptime.json"}
{"fname": "print_uptime", "lineno_map": [[58, 58], [59, 59], [61, 61], [113, 113], [115, 115], [116, 116], [117, 117], [118, 118], [125, 125], [130, 130], [131, 131], [132, 132], [134, 134], [135, 135], [136, 136], [137, 137], [140, 140], [142, 142], [144, 144], [145, 145], [146, 146], [149, 149], [150, 150], [155, 155], [157, 157], [160, 160], [162, 162], [163, 163], [166, 166], [167, 167], [168, 168], [169, 169], [170, 170], [171, 171], [172, 172], [173, 173]], "source_code_file": "src/uptime.c", "binary_file1": "uptime.json", "binary_file2": "uptime.json"}
{"fname": "uptime", "lineno_map": [[185, 185], [188, 188], [189, 189], [192, 192]], "source_code_file": "src/uptime.c", "binary_file1": "uptime.json", "binary_file2": "uptime.json"}
{"fname": "usage", "lineno_map": [[200, 200], [201, 201], [204, 204], [205, 205], [214, 214], [220, 220], [224, 224], [225, 225], [226, 226], [228, 228]], "source_code_file": "src/uptime.c", "binary_file1": "uptime.json", "binary_file2": "uptime.json"}
{"fname": "main", "lineno_map": [[235, 235], [236, 236], [237, 237], [238, 238], [240, 240], [242, 242], [244, 244], [245, 245], [247, 247], [250, 250], [254, 254], [258, 258], [259, 259]], "source_code_file": "src/uptime.c", "binary_file1": "uptime.json", "binary_file2": "uptime.json"}
{"fname": "usage", "lineno_map": [[74, 74], [75, 75], [78, 78], [82, 82], [87, 87], [89, 89], [98, 98], [99, 99], [100, 100], [102, 102]], "source_code_file": "src/runcon.c", "binary_file1": "runcon.json", "binary_file2": "runcon.json"}
{"fname": "main", "lineno_map": [[108, 108], [109, 109], [110, 110], [111, 111], [112, 112], [113, 113], [114, 114], [115, 115], [116, 116], [121, 121], [122, 122], [123, 123], [124, 124], [126, 126], [130, 130], [131, 131], [133, 133], [135, 135], [138, 138], [139, 139], [140, 140], [143, 143], [144, 144], [145, 145], [148, 148], [149, 149], [150, 150], [153, 153], [154, 154], [155, 155], [158, 158], [161, 161], [162, 162], [164, 164], [169, 169], [171, 171], [172, 172], [173, 173], [174, 174], [178, 178], [180, 180], [182, 182], [183, 183], [185, 185], [188, 188], [190, 190], [191, 191], [195, 195]], "source_code_file": "src/runcon.c", "binary_file1": "runcon.json", "binary_file2": "runcon.json"}
{"fname": "usage", "lineno_map": [[67, 67], [68, 68], [71, 71], [72, 72], [77, 77], [90, 90], [91, 91], [92, 92], [94, 94]], "source_code_file": "src/realpath.c", "binary_file1": "realpath.json", "binary_file2": "realpath.json"}
{"fname": "realpath_canon", "lineno_map": [[102, 102], [103, 103], [105, 105], [106, 106], [107, 107]], "source_code_file": "src/realpath.c", "binary_file1": "realpath.json", "binary_file2": "realpath.json"}
{"fname": "path_prefix", "lineno_map": [[118, 118], [119, 119], [123, 123], [127, 127], [131, 131], [133, 133], [135, 135], [136, 136]], "source_code_file": "src/realpath.c", "binary_file1": "realpath.json", "binary_file2": "realpath.json"}
{"fname": "isdir", "lineno_map": [[145, 145], [146, 146]], "source_code_file": "src/realpath.c", "binary_file1": "realpath.json", "binary_file2": "realpath.json"}
{"fname": "process_path", "lineno_map": [[153, 153], [154, 154], [156, 156], [157, 157], [161, 161], [162, 162], [163, 163], [164, 164], [166, 166], [168, 168]], "source_code_file": "src/realpath.c", "binary_file1": "realpath.json", "binary_file2": "realpath.json"}
{"fname": "main", "lineno_map": [[176, 176], [177, 177], [178, 178], [179, 179], [182, 182], [183, 183], [184, 184], [185, 185], [187, 187], [191, 191], [192, 192], [194, 194], [197, 197], [201, 201], [202, 202], [205, 205], [206, 206], [209, 209], [210, 210], [213, 213], [214, 214], [217, 217], [220, 220], [223, 223], [226, 226], [228, 228], [229, 229], [231, 231], [235, 235], [237, 237], [238, 238], [241, 241], [242, 242], [244, 244], [245, 245], [247, 247], [248, 248], [249, 249], [250, 250], [251, 251], [253, 253], [254, 254], [255, 255], [257, 257], [258, 258], [259, 259], [260, 260], [261, 261], [264, 264], [265, 265], [268, 268], [269, 269], [270, 270], [274, 274], [275, 275]], "source_code_file": "src/realpath.c", "binary_file1": "realpath.json", "binary_file2": "realpath.json"}
{"fname": "cksum", "lineno_map": [[186, 186], [187, 187], [193, 193], [195, 195], [196, 196], [197, 197], [201, 201], [202, 202], [204, 204], [209, 209], [211, 211], [213, 213], [215, 215], [216, 216], [217, 217], [218, 218], [219, 219], [220, 220], [224, 224], [226, 226], [227, 227], [228, 228], [232, 232], [234, 234], [238, 238], [240, 240], [241, 241], [243, 243], [245, 245], [246, 246], [248, 248], [250, 250], [251, 251]], "source_code_file": "src/cksum.c", "binary_file1": "cksum.json", "binary_file2": "cksum.json"}
{"fname": "usage", "lineno_map": [[259, 259], [260, 260], [263, 263], [268, 268], [272, 272], [273, 273], [274, 274], [276, 276]], "source_code_file": "src/cksum.c", "binary_file1": "cksum.json", "binary_file2": "cksum.json"}
{"fname": "main", "lineno_map": [[286, 286], [287, 287], [288, 288], [289, 289], [291, 291], [295, 295], [297, 297], [299, 299], [300, 300], [302, 302], [304, 304], [305, 305], [308, 308], [309, 309], [310, 310], [313, 313], [314, 314]], "source_code_file": "src/cksum.c", "binary_file1": "cksum.json", "binary_file2": "cksum.json"}
{"fname": "to_uchar", "lineno_map": [[156, 156]], "source_code_file": "src/tr.c", "binary_file1": "tr.json", "binary_file2": "tr.json"}
{"fname": "emit_ancillary_info", "lineno_map": [[632, 632], [643, 643], [645, 645], [646, 646], [648, 648], [649, 649], [651, 651], [655, 655], [656, 656], [662, 662], [665, 665], [667, 667], [669, 669]], "source_code_file": "src/tr.c", "binary_file1": "tr.json", "binary_file2": "tr.json"}
{"fname": "usage", "lineno_map": [[283, 283], [284, 284], [287, 287], [291, 291], [302, 302], [303, 303], [304, 304], [318, 318], [329, 329], [339, 339], [349, 349], [351, 351]], "source_code_file": "src/tr.c", "binary_file1": "tr.json", "binary_file2": "tr.json"}
{"fname": "is_char_class_member", "lineno_map": [[371, 371], [374, 374], [377, 377], [380, 380], [383, 383], [386, 386], [389, 389], [392, 392], [395, 395], [398, 398], [401, 401], [404, 404], [407, 407], [410, 410]], "source_code_file": "src/tr.c", "binary_file1": "tr.json", "binary_file2": "tr.json"}
{"fname": "es_free", "lineno_map": [[419, 419], [420, 420]], "source_code_file": "src/tr.c", "binary_file1": "tr.json", "binary_file2": "tr.json"}
{"fname": "unquote", "lineno_map": [[434, 434], [436, 436], [437, 437], [439, 439], [440, 440], [445, 445], [448, 448], [449, 449], [452, 452], [455, 455], [458, 458], [461, 461], [464, 464], [467, 467], [470, 470], [473, 473], [483, 483], [484, 484], [485, 485], [487, 487], [488, 488], [489, 489], [490, 490], [492, 492], [494, 494], [495, 495], [507, 507], [509, 509], [510, 510], [516, 516], [519, 519], [520, 520], [521, 521], [524, 524], [527, 527], [528, 528], [531, 531], [535, 535]], "source_code_file": "src/tr.c", "binary_file1": "tr.json", "binary_file2": "tr.json"}
{"fname": "look_up_char_class", "lineno_map": [[547, 547], [548, 548], [549, 549]], "source_code_file": "src/tr.c", "binary_file1": "tr.json", "binary_file2": "tr.json"}
{"fname": "make_printable_char", "lineno_map": [[560, 560], [562, 562], [564, 564], [565, 565], [569, 569]], "source_code_file": "src/tr.c", "binary_file1": "tr.json", "binary_file2": "tr.json"}
{"fname": "make_printable_str", "lineno_map": [[586, 586], [587, 587], [589, 589], [592, 592], [593, 593], [595, 595], [598, 598], [601, 601], [604, 604], [607, 607], [610, 610], [613, 613], [616, 616], [619, 619], [622, 622], [624, 624], [625, 625], [628, 628], [629, 629], [632, 632]], "source_code_file": "src/tr.c", "binary_file1": "tr.json", "binary_file2": "tr.json"}
{"fname": "append_normal_char", "lineno_map": [[643, 643], [644, 644], [645, 645], [646, 646], [647, 647], [648, 648], [649, 649]], "source_code_file": "src/tr.c", "binary_file1": "tr.json", "binary_file2": "tr.json"}
{"fname": "append_range", "lineno_map": [[660, 660], [662, 662], [663, 663], [665, 665], [666, 666], [668, 668], [669, 669], [672, 672], [673, 673], [674, 674], [675, 675], [676, 676], [677, 677], [678, 678], [679, 679]], "source_code_file": "src/tr.c", "binary_file1": "tr.json", "binary_file2": "tr.json"}
{"fname": "append_char_class", "lineno_map": [[692, 692], [693, 693], [695, 695], [696, 696], [697, 697], [698, 698], [699, 699], [700, 700], [701, 701]], "source_code_file": "src/tr.c", "binary_file1": "tr.json", "binary_file2": "tr.json"}
{"fname": "append_repeated_char", "lineno_map": [[714, 714], [715, 715], [716, 716], [717, 717], [718, 718], [719, 719], [720, 720], [721, 721]], "source_code_file": "src/tr.c", "binary_file1": "tr.json", "binary_file2": "tr.json"}
{"fname": "append_equiv_class", "lineno_map": [[734, 734], [737, 737], [738, 738], [739, 739], [740, 740], [741, 741], [742, 742], [743, 743]], "source_code_file": "src/tr.c", "binary_file1": "tr.json", "binary_file2": "tr.json"}
{"fname": "find_closing_delim", "lineno_map": [[757, 757], [758, 758], [759, 759], [761, 761]], "source_code_file": "src/tr.c", "binary_file1": "tr.json", "binary_file2": "tr.json"}
{"fname": "find_bracketed_repeat", "lineno_map": [[782, 782], [783, 783], [786, 786], [788, 788], [790, 790], [792, 792], [793, 793], [796, 796], [802, 802], [804, 804], [807, 807], [808, 808], [810, 810], [811, 811], [812, 812], [814, 814], [818, 818]], "source_code_file": "src/tr.c", "binary_file1": "tr.json", "binary_file2": "tr.json"}
{"fname": "star_digits_closebracket", "lineno_map": [[832, 832], [835, 835], [836, 836]], "source_code_file": "src/tr.c", "binary_file1": "tr.json", "binary_file2": "tr.json"}
{"fname": "build_spec_list", "lineno_map": [[856, 856], [865, 865], [867, 867], [875, 875], [876, 876], [880, 880], [882, 882], [883, 883], [885, 885], [887, 887], [888, 888], [890, 890], [891, 891], [895, 895], [898, 898], [900, 900], [904, 904], [906, 906], [908, 908], [916, 916], [918, 918], [922, 922], [924, 924], [925, 925], [927, 927], [933, 933], [943, 943], [946, 946], [948, 948], [949, 949], [951, 951], [953, 953], [962, 962], [963, 963], [971, 971], [973, 973], [975, 975], [979, 979], [980, 980], [985, 985], [986, 986]], "source_code_file": "src/tr.c", "binary_file1": "tr.json", "binary_file2": "tr.json"}
{"fname": "skip_construct", "lineno_map": [[996, 996], [997, 997]], "source_code_file": "src/tr.c", "binary_file1": "tr.json", "binary_file2": "tr.json"}
{"fname": "get_next", "lineno_map": [[1021, 1021], [1022, 1022], [1024, 1024], [1026, 1026], [1027, 1027], [1030, 1030], [1031, 1031], [1034, 1034], [1038, 1038], [1039, 1039], [1043, 1043], [1044, 1044], [1046, 1046], [1048, 1048], [1050, 1050], [1051, 1051], [1056, 1056], [1058, 1058], [1061, 1061], [1064, 1064], [1071, 1071], [1073, 1073], [1074, 1074], [1076, 1076], [1077, 1077], [1079, 1079], [1081, 1081], [1082, 1082], [1084, 1084], [1085, 1085], [1088, 1088], [1089, 1089], [1100, 1100], [1101, 1101], [1106, 1106], [1108, 1108], [1109, 1109], [1114, 1114], [1116, 1116], [1118, 1118], [1120, 1120], [1122, 1122], [1123, 1123], [1129, 1129]], "source_code_file": "src/tr.c", "binary_file1": "tr.json", "binary_file2": "tr.json"}
{"fname": "card_of_complement", "lineno_map": [[1144, 1144], [1145, 1145], [1147, 1147], [1148, 1148], [1150, 1150], [1151, 1151]], "source_code_file": "src/tr.c", "binary_file1": "tr.json", "binary_file2": "tr.json"}
{"fname": "validate_case_classes", "lineno_map": [[1168, 1168], [1169, 1169], [1170, 1170], [1171, 1171], [1172, 1172], [1173, 1173], [1174, 1174], [1175, 1175], [1176, 1176], [1177, 1177], [1179, 1179], [1182, 1182], [1184, 1184], [1185, 1185], [1186, 1186], [1187, 1187], [1190, 1190], [1191, 1191], [1193, 1193], [1197, 1197], [1198, 1198], [1202, 1202], [1203, 1203], [1204, 1204], [1208, 1208], [1210, 1210], [1211, 1211], [1213, 1213], [1214, 1214], [1217, 1217], [1218, 1218], [1221, 1221], [1223, 1223], [1224, 1224]], "source_code_file": "src/tr.c", "binary_file1": "tr.json", "binary_file2": "tr.json"}
{"fname": "get_spec_stats", "lineno_map": [[1244, 1244], [1246, 1246], [1247, 1247], [1248, 1248], [1249, 1249], [1250, 1250], [1252, 1252], [1255, 1255], [1258, 1258], [1262, 1262], [1263, 1263], [1267, 1267], [1268, 1268], [1269, 1269], [1270, 1270], [1271, 1271], [1277, 1277], [1283, 1283], [1284, 1284], [1285, 1285], [1286, 1286], [1290, 1290], [1291, 1291], [1294, 1294], [1295, 1295], [1300, 1300], [1307, 1307], [1308, 1308], [1309, 1309], [1310, 1310], [1313, 1313]], "source_code_file": "src/tr.c", "binary_file1": "tr.json", "binary_file2": "tr.json"}
{"fname": "get_s1_spec_stats", "lineno_map": [[1319, 1319], [1320, 1320], [1321, 1321]], "source_code_file": "src/tr.c", "binary_file1": "tr.json", "binary_file2": "tr.json"}
{"fname": "get_s2_spec_stats", "lineno_map": [[1327, 1327], [1328, 1328], [1330, 1330], [1331, 1331], [1332, 1332]], "source_code_file": "src/tr.c", "binary_file1": "tr.json", "binary_file2": "tr.json"}
{"fname": "spec_init", "lineno_map": [[1339, 1339], [1340, 1340], [1341, 1341]], "source_code_file": "src/tr.c", "binary_file1": "tr.json", "binary_file2": "tr.json"}
{"fname": "parse_str", "lineno_map": [[1354, 1354], [1355, 1355]], "source_code_file": "src/tr.c", "binary_file1": "tr.json", "binary_file2": "tr.json"}
{"fname": "string2_extend", "lineno_map": [[1374, 1374], [1375, 1375], [1376, 1376], [1378, 1378], [1379, 1379], [1382, 1382], [1385, 1385], [1392, 1392], [1397, 1397], [1403, 1403], [1406, 1406], [1409, 1409], [1410, 1410]], "source_code_file": "src/tr.c", "binary_file1": "tr.json", "binary_file2": "tr.json"}
{"fname": "homogeneous_spec_list", "lineno_map": [[1422, 1422], [1424, 1424], [1427, 1427], [1428, 1428]], "source_code_file": "src/tr.c", "binary_file1": "tr.json", "binary_file2": "tr.json"}
{"fname": "validate", "lineno_map": [[1445, 1445], [1446, 1446], [1448, 1448], [1452, 1452], [1454, 1454], [1456, 1456], [1458, 1458], [1462, 1462], [1464, 1464], [1466, 1466], [1471, 1471], [1473, 1473], [1478, 1478], [1480, 1480], [1482, 1482], [1487, 1487], [1488, 1488], [1490, 1490], [1494, 1494], [1495, 1495], [1497, 1497], [1505, 1505], [1506, 1506]], "source_code_file": "src/tr.c", "binary_file1": "tr.json", "binary_file2": "tr.json"}
{"fname": "squeeze_filter", "lineno_map": [[1526, 1526], [1528, 1528], [1529, 1529], [1530, 1530], [1534, 1534], [1536, 1536], [1537, 1537], [1539, 1539], [1542, 1542], [1544, 1544], [1558, 1558], [1564, 1564], [1565, 1565], [1567, 1567], [1568, 1568], [1571, 1571], [1573, 1573], [1577, 1577], [1578, 1578], [1583, 1583], [1585, 1585], [1586, 1586], [1587, 1587], [1590, 1590], [1595, 1595], [1597, 1597], [1598, 1598]], "source_code_file": "src/tr.c", "binary_file1": "tr.json", "binary_file2": "tr.json"}
{"fname": "plain_read", "lineno_map": [[1609, 1609], [1610, 1610], [1611, 1611]], "source_code_file": "src/tr.c", "binary_file1": "tr.json", "binary_file2": "tr.json"}
{"fname": "read_and_delete", "lineno_map": [[1631, 1631], [1633, 1633], [1642, 1642], [1644, 1644], [1646, 1646], [1647, 1647], [1648, 1648], [1650, 1650]], "source_code_file": "src/tr.c", "binary_file1": "tr.json", "binary_file2": "tr.json"}
{"fname": "read_and_xlate", "lineno_map": [[1662, 1662], [1664, 1664], [1665, 1665]], "source_code_file": "src/tr.c", "binary_file1": "tr.json", "binary_file2": "tr.json"}
{"fname": "set_initialize", "lineno_map": [[1681, 1681], [1682, 1682], [1683, 1683], [1684, 1684], [1685, 1685], [1686, 1686]], "source_code_file": "src/tr.c", "binary_file1": "tr.json", "binary_file2": "tr.json"}
{"fname": "main", "lineno_map": [[1697, 1697], [1698, 1698], [1701, 1701], [1702, 1702], [1703, 1703], [1704, 1704], [1706, 1706], [1708, 1708], [1710, 1710], [1714, 1714], [1715, 1715], [1720, 1720], [1724, 1724], [1728, 1728], [1732, 1732], [1735, 1735], [1737, 1737], [1740, 1740], [1745, 1745], [1746, 1746], [1747, 1747], [1748, 1748], [1750, 1750], [1752, 1752], [1753, 1753], [1756, 1756], [1757, 1757], [1763, 1763], [1766, 1766], [1768, 1768], [1769, 1769], [1770, 1770], [1773, 1773], [1776, 1776], [1777, 1777], [1780, 1780], [1782, 1782], [1783, 1783], [1787, 1787], [1789, 1789], [1794, 1794], [1795, 1795], [1796, 1796], [1798, 1798], [1800, 1800], [1801, 1801], [1803, 1803], [1805, 1805], [1809, 1809], [1810, 1810], [1812, 1812], [1813, 1813], [1816, 1816], [1818, 1818], [1819, 1819], [1820, 1820], [1822, 1822], [1824, 1824], [1826, 1826], [1828, 1828], [1829, 1829], [1830, 1830], [1831, 1831], [1832, 1832], [1834, 1834], [1836, 1836], [1837, 1837], [1838, 1838], [1844, 1844], [1854, 1854], [1855, 1855], [1856, 1856], [1857, 1857], [1860, 1860], [1861, 1861], [1863, 1863], [1865, 1865], [1866, 1866], [1867, 1867], [1869, 1869], [1871, 1871], [1872, 1872], [1873, 1873], [1878, 1878], [1880, 1880], [1884, 1884], [1886, 1886], [1887, 1887], [1890, 1890], [1892, 1892], [1894, 1894], [1895, 1895], [1901, 1901], [1902, 1902], [1904, 1904], [1905, 1905], [1910, 1910], [1911, 1911]], "source_code_file": "src/tr.c", "binary_file1": "tr.json", "binary_file2": "tr.json"}
{"fname": "errno_may_be_empty", "lineno_map": [[84, 84]], "source_code_file": "src/rmdir.c", "binary_file1": "rmdir.json", "binary_file2": "rmdir.json"}
{"fname": "ignorable_failure", "lineno_map": [[103, 103], [104, 104], [105, 105]], "source_code_file": "src/rmdir.c", "binary_file1": "rmdir.json", "binary_file2": "rmdir.json"}
{"fname": "remove_parents", "lineno_map": [[117, 117], [119, 119], [122, 122], [123, 123], [127, 127], [128, 128], [129, 129], [132, 132], [133, 133], [135, 135], [137, 137], [140, 140], [142, 142], [147, 147]], "source_code_file": "src/rmdir.c", "binary_file1": "rmdir.json", "binary_file2": "rmdir.json"}
{"fname": "usage", "lineno_map": [[159, 159], [160, 160], [163, 163], [164, 164], [171, 171], [177, 177], [178, 178], [179, 179], [181, 181]], "source_code_file": "src/rmdir.c", "binary_file1": "rmdir.json", "binary_file2": "rmdir.json"}
{"fname": "main", "lineno_map": [[187, 187], [191, 191], [192, 192], [193, 193], [194, 194], [196, 196], [198, 198], [200, 200], [202, 202], [205, 205], [208, 208], [211, 211], [213, 213], [214, 214], [216, 216], [220, 220], [222, 222], [223, 223], [226, 226], [228, 228], [231, 231], [232, 232], [234, 234], [236, 236], [237, 237], [241, 241], [242, 242], [244, 244], [246, 246]], "source_code_file": "src/rmdir.c", "binary_file1": "rmdir.json", "binary_file2": "rmdir.json"}
{"fname": "lcm", "lineno_map": [[488, 488], [490, 490]], "source_code_file": "src/od.c", "binary_file1": "od.json", "binary_file2": "od.json"}
{"fname": "emit_stdin_note", "lineno_map": [[579, 579], [583, 583]], "source_code_file": "src/od.c", "binary_file1": "od.json", "binary_file2": "od.json"}
{"fname": "emit_mandatory_arg_note", "lineno_map": [[586, 586], [587, 587], [590, 590]], "source_code_file": "src/od.c", "binary_file1": "od.json", "binary_file2": "od.json"}
{"fname": "emit_ancillary_info", "lineno_map": [[631, 631], [632, 632], [642, 642], [643, 643], [645, 645], [646, 646], [649, 649], [651, 651], [655, 655], [662, 662], [667, 667], [669, 669]], "source_code_file": "src/od.c", "binary_file1": "od.json", "binary_file2": "od.json"}
{"fname": "usable_st_size", "lineno_map": [[702, 702], [703, 703], [704, 704], [705, 705]], "source_code_file": "src/od.c", "binary_file1": "od.json", "binary_file2": "od.json"}
{"fname": "usage", "lineno_map": [[318, 318], [319, 319], [322, 322], [328, 328], [334, 334], [336, 336], [346, 346], [348, 348], [354, 354], [365, 365], [366, 366], [367, 367], [376, 376], [384, 384], [391, 391], [398, 398], [405, 405], [410, 410], [421, 421], [423, 423]], "source_code_file": "src/od.c", "binary_file1": "od.json", "binary_file2": "od.json"}
{"fname": "print_s_char", "lineno_map": [[469, 469]], "source_code_file": "src/od.c", "binary_file1": "od.json", "binary_file2": "od.json"}
{"fname": "print_char", "lineno_map": [[470, 470]], "source_code_file": "src/od.c", "binary_file1": "od.json", "binary_file2": "od.json"}
{"fname": "print_s_short", "lineno_map": [[471, 471]], "source_code_file": "src/od.c", "binary_file1": "od.json", "binary_file2": "od.json"}
{"fname": "print_short", "lineno_map": [[472, 472]], "source_code_file": "src/od.c", "binary_file1": "od.json", "binary_file2": "od.json"}
{"fname": "print_int", "lineno_map": [[473, 473]], "source_code_file": "src/od.c", "binary_file1": "od.json", "binary_file2": "od.json"}
{"fname": "print_long", "lineno_map": [[474, 474]], "source_code_file": "src/od.c", "binary_file1": "od.json", "binary_file2": "od.json"}
{"fname": "print_long_long", "lineno_map": [[475, 475]], "source_code_file": "src/od.c", "binary_file1": "od.json", "binary_file2": "od.json"}
{"fname": "print_float", "lineno_map": [[477, 477]], "source_code_file": "src/od.c", "binary_file1": "od.json", "binary_file2": "od.json"}
{"fname": "print_double", "lineno_map": [[478, 478]], "source_code_file": "src/od.c", "binary_file1": "od.json", "binary_file2": "od.json"}
{"fname": "print_long_double", "lineno_map": [[479, 479]], "source_code_file": "src/od.c", "binary_file1": "od.json", "binary_file2": "od.json"}
{"fname": "dump_hexl_mode_trailer", "lineno_map": [[487, 487], [488, 488], [490, 490], [491, 491], [492, 492], [494, 494]], "source_code_file": "src/od.c", "binary_file1": "od.json", "binary_file2": "od.json"}
{"fname": "print_named_ascii", "lineno_map": [[502, 502], [504, 504], [505, 505], [507, 507], [508, 508], [512, 512], [513, 513], [514, 514], [515, 515], [518, 518], [519, 519], [520, 520], [523, 523], [524, 524]], "source_code_file": "src/od.c", "binary_file1": "od.json", "binary_file2": "od.json"}
{"fname": "print_ascii", "lineno_map": [[533, 533], [535, 535], [536, 536], [538, 538], [539, 539], [543, 543], [546, 546], [550, 550], [554, 554], [558, 558], [562, 562], [566, 566], [570, 570], [574, 574], [578, 578], [579, 579], [582, 582], [583, 583]], "source_code_file": "src/od.c", "binary_file1": "od.json", "binary_file2": "od.json"}
{"fname": "simple_strtoul", "lineno_map": [[600, 600], [601, 601], [603, 603], [604, 604], [606, 606], [608, 608], [609, 609]], "source_code_file": "src/od.c", "binary_file1": "od.json", "binary_file2": "od.json"}
{"fname": "decode_one_format", "lineno_map": [[645, 645], [647, 647], [653, 653], [654, 654], [655, 655], [658, 658], [659, 659], [663, 663], [664, 664], [668, 668], [669, 669], [673, 673], [674, 674], [678, 678], [683, 683], [686, 686], [687, 687], [690, 690], [691, 691], [693, 693], [698, 698], [708, 708], [710, 710], [713, 713], [714, 714], [715, 715], [716, 716], [720, 720], [721, 721], [722, 722], [723, 723], [727, 727], [728, 728], [729, 729], [730, 730], [734, 734], [735, 735], [736, 736], [737, 737], [741, 741], [744, 744], [746, 746], [749, 749], [751, 751], [755, 755], [757, 757], [761, 761], [765, 765], [769, 769], [773, 773], [778, 778], [779, 779], [780, 780], [783, 783], [784, 784], [788, 788], [789, 789], [793, 793], [794, 794], [798, 798], [803, 803], [806, 806], [807, 807], [810, 810], [811, 811], [813, 813], [814, 814], [820, 820], [824, 824], [827, 827], [828, 828], [829, 829], [831, 831], [834, 834], [835, 835], [839, 839], [840, 840], [844, 844], [845, 845], [849, 849], [856, 856], [857, 857], [858, 858], [859, 859], [860, 860], [864, 864], [865, 865], [866, 866], [867, 867], [868, 868], [872, 872], [873, 873], [877, 877], [878, 878], [879, 879], [881, 881], [882, 882], [883, 883], [884, 884], [886, 886], [887, 887]], "source_code_file": "src/od.c", "binary_file1": "od.json", "binary_file2": "od.json"}
{"fname": "open_next_file", "lineno_map": [[902, 902], [906, 906], [907, 907], [909, 909], [911, 911], [913, 913], [914, 914], [915, 915], [916, 916], [920, 920], [921, 921], [923, 923], [924, 924], [928, 928], [930, 930], [931, 931]], "source_code_file": "src/od.c", "binary_file1": "od.json", "binary_file2": "od.json"}
{"fname": "check_and_close", "lineno_map": [[946, 946], [948, 948], [950, 950], [952, 952], [953, 953], [954, 954], [955, 955], [957, 957], [959, 959], [960, 960], [963, 963], [966, 966], [968, 968], [969, 969]], "source_code_file": "src/od.c", "binary_file1": "od.json", "binary_file2": "od.json"}
{"fname": "decode_format_string", "lineno_map": [[982, 982], [983, 983], [985, 985], [989, 989], [990, 990], [992, 992], [995, 995], [996, 996], [997, 997]], "source_code_file": "src/od.c", "binary_file1": "od.json", "binary_file2": "od.json"}
{"fname": "skip", "lineno_map": [[1013, 1013], [1014, 1014], [1016, 1016], [1019, 1019], [1033, 1033], [1042, 1042], [1043, 1043], [1045, 1045], [1046, 1046], [1049, 1049], [1051, 1051], [1052, 1052], [1054, 1054], [1065, 1065], [1067, 1067], [1069, 1069], [1070, 1070], [1071, 1071], [1072, 1072], [1073, 1073], [1075, 1075], [1077, 1077], [1078, 1078], [1079, 1079], [1082, 1082], [1088, 1088], [1094, 1094], [1095, 1095], [1098, 1098], [1100, 1100], [1103, 1103], [1104, 1104]], "source_code_file": "src/od.c", "binary_file1": "od.json", "binary_file2": "od.json"}
{"fname": "format_address_std", "lineno_map": [[1119, 1119], [1122, 1122], [1123, 1123], [1124, 1124], [1128, 1128], [1132, 1132], [1133, 1133], [1138, 1138], [1139, 1139], [1144, 1144], [1145, 1145], [1149, 1149], [1150, 1150], [1152, 1152]], "source_code_file": "src/od.c", "binary_file1": "od.json", "binary_file2": "od.json"}
{"fname": "format_address_paren", "lineno_map": [[1158, 1158], [1159, 1159], [1160, 1160], [1161, 1161]], "source_code_file": "src/od.c", "binary_file1": "od.json", "binary_file2": "od.json"}
{"fname": "format_address_label", "lineno_map": [[1167, 1167], [1168, 1168]], "source_code_file": "src/od.c", "binary_file1": "od.json", "binary_file2": "od.json"}
{"fname": "write_block", "lineno_map": [[1190, 1190], [1191, 1191], [1192, 1192], [1194, 1194], [1201, 1201], [1202, 1202], [1207, 1207], [1208, 1208], [1210, 1210], [1211, 1211], [1212, 1212], [1213, 1213], [1214, 1214], [1216, 1216], [1217, 1217], [1218, 1218], [1219, 1219], [1220, 1220], [1223, 1223], [1224, 1224], [1226, 1226], [1227, 1227], [1229, 1229], [1232, 1232]], "source_code_file": "src/od.c", "binary_file1": "od.json", "binary_file2": "od.json"}
{"fname": "read_char", "lineno_map": [[1249, 1249], [1251, 1251], [1253, 1253], [1255, 1255], [1257, 1257], [1260, 1260], [1262, 1262]], "source_code_file": "src/od.c", "binary_file1": "od.json", "binary_file2": "od.json"}
{"fname": "read_block", "lineno_map": [[1285, 1285], [1287, 1287], [1289, 1289], [1291, 1291], [1296, 1296], [1297, 1297], [1299, 1299], [1301, 1301], [1304, 1304], [1306, 1306]], "source_code_file": "src/od.c", "binary_file1": "od.json", "binary_file2": "od.json"}
{"fname": "get_lcm", "lineno_map": [[1318, 1318], [1320, 1320], [1321, 1321]], "source_code_file": "src/od.c", "binary_file1": "od.json", "binary_file2": "od.json"}
{"fname": "parse_old_offset", "lineno_map": [[1333, 1333], [1337, 1337], [1338, 1338], [1343, 1343], [1344, 1344], [1347, 1347], [1348, 1348], [1350, 1350]], "source_code_file": "src/od.c", "binary_file1": "od.json", "binary_file2": "od.json"}
{"fname": "dump", "lineno_map": [[1373, 1373], [1374, 1374], [1377, 1377], [1378, 1378], [1380, 1380], [1382, 1382], [1387, 1387], [1389, 1389], [1392, 1392], [1394, 1394], [1395, 1395], [1397, 1397], [1398, 1398], [1399, 1399], [1400, 1400], [1401, 1401], [1408, 1408], [1409, 1409], [1411, 1411], [1412, 1412], [1413, 1413], [1414, 1414], [1415, 1415], [1419, 1419], [1424, 1424], [1428, 1428], [1430, 1430], [1431, 1431], [1432, 1432], [1435, 1435], [1437, 1437], [1438, 1438], [1440, 1440]], "source_code_file": "src/od.c", "binary_file1": "od.json", "binary_file2": "od.json"}
{"fname": "dump_strings", "lineno_map": [[1454, 1454], [1455, 1455], [1456, 1456], [1457, 1457], [1467, 1467], [1468, 1468], [1471, 1471], [1473, 1473], [1474, 1474], [1475, 1475], [1477, 1477], [1480, 1480], [1483, 1483], [1488, 1488], [1490, 1490], [1492, 1492], [1494, 1494], [1495, 1495], [1496, 1496], [1498, 1498], [1501, 1501], [1502, 1502], [1503, 1503], [1505, 1505], [1510, 1510], [1511, 1511], [1513, 1513], [1515, 1515], [1518, 1518], [1522, 1522], [1526, 1526], [1530, 1530], [1534, 1534], [1538, 1538], [1542, 1542], [1546, 1546], [1549, 1549], [1555, 1555], [1557, 1557]], "source_code_file": "src/od.c", "binary_file1": "od.json", "binary_file2": "od.json"}
{"fname": "main", "lineno_map": [[1568, 1568], [1569, 1569], [1570, 1570], [1571, 1571], [1579, 1579], [1580, 1580], [1581, 1581], [1582, 1582], [1584, 1584], [1586, 1586], [1587, 1587], [1589, 1589], [1590, 1590], [1591, 1591], [1592, 1592], [1596, 1596], [1599, 1599], [1600, 1600], [1602, 1602], [1606, 1606], [1607, 1607], [1609, 1609], [1610, 1610], [1611, 1611], [1613, 1613], [1614, 1614], [1615, 1615], [1616, 1616], [1622, 1622], [1623, 1623], [1624, 1624], [1627, 1627], [1630, 1630], [1631, 1631], [1634, 1634], [1635, 1635], [1636, 1636], [1639, 1639], [1640, 1640], [1641, 1641], [1644, 1644], [1645, 1645], [1646, 1646], [1649, 1649], [1650, 1650], [1653, 1653], [1662, 1662], [1663, 1663], [1664, 1664], [1665, 1665], [1669, 1669], [1670, 1670], [1672, 1672], [1674, 1674], [1675, 1675], [1679, 1679], [1680, 1680], [1681, 1681], [1684, 1684], [1685, 1685], [1686, 1686], [1693, 1693], [1695, 1695], [1699, 1699], [1700, 1700], [1704, 1704], [1705, 1705], [1709, 1709], [1713, 1713], [1716, 1716], [1719, 1719], [1736, 1736], [1737, 1737], [1738, 1738], [1739, 1739], [1740, 1740], [1742, 1742], [1743, 1743], [1745, 1745], [1746, 1746], [1748, 1748], [1749, 1749], [1751, 1751], [1752, 1752], [1754, 1754], [1759, 1759], [1760, 1760], [1761, 1761], [1763, 1763], [1768, 1768], [1769, 1769], [1770, 1770], [1773, 1773], [1777, 1777], [1779, 1779], [1782, 1782], [1787, 1787], [1790, 1790], [1791, 1791], [1794, 1794], [1808, 1808], [1813, 1813], [1816, 1816], [1817, 1817], [1819, 1819], [1820, 1820], [1821, 1821], [1826, 1826], [1827, 1827], [1828, 1828], [1830, 1830], [1832, 1832], [1833, 1833], [1834, 1834], [1835, 1835], [1836, 1836], [1840, 1840], [1841, 1841], [1842, 1842], [1843, 1843], [1849, 1849], [1850, 1850], [1851, 1851], [1853, 1853], [1854, 1854], [1855, 1855], [1856, 1856], [1857, 1857], [1858, 1858], [1863, 1863], [1865, 1865], [1866, 1866], [1868, 1868], [1872, 1872], [1874, 1874], [1876, 1876], [1877, 1877], [1878, 1878], [1881, 1881], [1884, 1884], [1886, 1886], [1887, 1887], [1888, 1888], [1891, 1891], [1892, 1892], [1894, 1894], [1899, 1899], [1907, 1907], [1911, 1911], [1912, 1912], [1916, 1916], [1917, 1917], [1920, 1920], [1923, 1923], [1925, 1925], [1927, 1927], [1928, 1928], [1931, 1931], [1933, 1933], [1938, 1938], [1939, 1939], [1941, 1941], [1945, 1945], [1947, 1947], [1948, 1948], [1949, 1949], [1950, 1950], [1952, 1952], [1954, 1954], [1955, 1955], [1956, 1956], [1973, 1973], [1977, 1977], [1978, 1978]], "source_code_file": "src/od.c", "binary_file1": "od.json", "binary_file2": "od.json"}
{"fname": "to_uchar", "lineno_map": [[156, 156]], "source_code_file": "src/stat.c", "binary_file1": "stat.json", "binary_file2": "stat.json"}
{"fname": "emit_mandatory_arg_note", "lineno_map": [[586, 586], [587, 587]], "source_code_file": "src/stat.c", "binary_file1": "stat.json", "binary_file2": "stat.json"}
{"fname": "emit_ancillary_info", "lineno_map": [[631, 631], [632, 632], [642, 642], [643, 643], [645, 645], [648, 648], [649, 649], [651, 651], [655, 655], [667, 667], [669, 669]], "source_code_file": "src/stat.c", "binary_file1": "stat.json", "binary_file2": "stat.json"}
{"fname": "timetostr", "lineno_map": [[688, 688], [691, 691]], "source_code_file": "src/stat.c", "binary_file1": "stat.json", "binary_file2": "stat.json"}
{"fname": "human_fstype", "lineno_map": [[236, 236], [573, 573], [576, 576]], "source_code_file": "src/stat.c", "binary_file1": "stat.json", "binary_file2": "stat.json"}
{"fname": "human_access", "lineno_map": [[587, 587], [588, 588]], "source_code_file": "src/stat.c", "binary_file1": "stat.json", "binary_file2": "stat.json"}
{"fname": "human_time", "lineno_map": [[603, 603], [604, 604], [606, 606], [607, 607], [608, 608], [612, 612]], "source_code_file": "src/stat.c", "binary_file1": "stat.json", "binary_file2": "stat.json"}
{"fname": "make_format", "lineno_map": [[625, 625], [627, 627], [628, 628], [629, 629], [630, 630], [631, 631], [632, 632], [633, 633]], "source_code_file": "src/stat.c", "binary_file1": "stat.json", "binary_file2": "stat.json"}
{"fname": "out_string", "lineno_map": [[639, 639], [640, 640]], "source_code_file": "src/stat.c", "binary_file1": "stat.json", "binary_file2": "stat.json"}
{"fname": "out_int", "lineno_map": [[645, 645]], "source_code_file": "src/stat.c", "binary_file1": "stat.json", "binary_file2": "stat.json"}
{"fname": "out_uint", "lineno_map": [[651, 651]], "source_code_file": "src/stat.c", "binary_file1": "stat.json", "binary_file2": "stat.json"}
{"fname": "out_uint_o", "lineno_map": [[657, 657], [658, 658]], "source_code_file": "src/stat.c", "binary_file1": "stat.json", "binary_file2": "stat.json"}
{"fname": "out_uint_x", "lineno_map": [[663, 663], [664, 664]], "source_code_file": "src/stat.c", "binary_file1": "stat.json", "binary_file2": "stat.json"}
{"fname": "out_minus_zero", "lineno_map": [[669, 669]], "source_code_file": "src/stat.c", "binary_file1": "stat.json", "binary_file2": "stat.json"}
{"fname": "out_epoch_sec", "lineno_map": [[680, 680], [681, 681], [682, 682], [683, 683], [684, 684], [686, 686], [688, 688], [689, 689], [691, 691], [693, 693], [694, 694], [698, 698], [701, 701], [706, 706], [707, 707], [710, 710], [711, 711], [713, 713], [714, 714], [715, 715], [717, 717], [718, 718], [719, 719], [722, 722], [724, 724], [725, 725], [727, 727], [728, 728], [730, 730], [731, 731], [733, 733], [735, 735], [736, 736], [737, 737], [744, 744], [745, 745], [746, 746], [747, 747], [752, 752], [753, 753], [755, 755], [756, 756], [757, 757], [758, 758], [759, 759], [761, 761], [763, 763], [768, 768], [770, 770], [771, 771], [772, 772], [773, 773], [774, 774], [776, 776]], "source_code_file": "src/stat.c", "binary_file1": "stat.json", "binary_file2": "stat.json"}
{"fname": "out_file_context", "lineno_map": [[787, 787], [789, 789], [790, 790], [791, 791], [793, 793], [795, 795], [796, 796], [798, 798], [799, 799], [800, 800], [801, 801]], "source_code_file": "src/stat.c", "binary_file1": "stat.json", "binary_file2": "stat.json"}
{"fname": "print_statfs", "lineno_map": [[811, 811], [812, 812], [814, 814], [817, 817], [829, 829], [833, 833], [834, 834], [835, 835], [837, 837], [838, 838], [841, 841], [846, 846], [850, 850], [856, 856], [859, 859], [862, 862], [865, 865], [868, 868], [872, 872], [873, 873], [874, 874], [875, 875], [879, 879], [882, 882], [885, 885]], "source_code_file": "src/stat.c", "binary_file1": "stat.json", "binary_file2": "stat.json"}
{"fname": "find_bind_mount", "lineno_map": [[897, 897], [901, 901], [903, 903], [904, 904], [905, 905], [909, 909], [913, 913], [915, 915], [916, 916], [920, 920], [921, 921], [923, 923]], "source_code_file": "src/stat.c", "binary_file1": "stat.json", "binary_file2": "stat.json"}
{"fname": "out_mount_point", "lineno_map": [[938, 938], [939, 939], [940, 940], [944, 944], [946, 946], [947, 947], [949, 949], [952, 952], [953, 953], [954, 954], [956, 956], [966, 966], [970, 970], [971, 971], [976, 976], [977, 977]], "source_code_file": "src/stat.c", "binary_file1": "stat.json", "binary_file2": "stat.json"}
{"fname": "get_birthtime", "lineno_map": [[984, 984]], "source_code_file": "src/stat.c", "binary_file1": "stat.json", "binary_file2": "stat.json"}
{"fname": "neg_to_zero", "lineno_map": [[1017, 1017], [1019, 1019]], "source_code_file": "src/stat.c", "binary_file1": "stat.json", "binary_file2": "stat.json"}
{"fname": "getenv_quoting_style", "lineno_map": [[1029, 1029], [1030, 1030], [1032, 1032], [1033, 1033], [1034, 1034], [1037, 1037], [1038, 1038], [1043, 1043]], "source_code_file": "src/stat.c", "binary_file1": "stat.json", "binary_file2": "stat.json"}
{"fname": "print_stat", "lineno_map": [[1054, 1054], [1057, 1057], [1059, 1059], [1062, 1062], [1065, 1065], [1066, 1066], [1068, 1068], [1069, 1069], [1071, 1071], [1075, 1075], [1076, 1076], [1077, 1077], [1081, 1081], [1084, 1084], [1087, 1087], [1090, 1090], [1093, 1093], [1096, 1096], [1099, 1099], [1102, 1102], [1105, 1105], [1108, 1108], [1109, 1109], [1113, 1113], [1116, 1116], [1117, 1117], [1121, 1121], [1124, 1124], [1127, 1127], [1130, 1130], [1133, 1133], [1136, 1136], [1139, 1139], [1143, 1143], [1144, 1144], [1145, 1145], [1147, 1147], [1151, 1151], [1155, 1155], [1158, 1158], [1161, 1161], [1164, 1164], [1167, 1167], [1170, 1170], [1173, 1173], [1176, 1176]], "source_code_file": "src/stat.c", "binary_file1": "stat.json", "binary_file2": "stat.json"}
{"fname": "print_esc_char", "lineno_map": [[1187, 1187], [1190, 1190], [1193, 1193], [1196, 1196], [1199, 1199], [1202, 1202], [1205, 1205], [1208, 1208], [1211, 1211], [1217, 1217], [1220, 1220]], "source_code_file": "src/stat.c", "binary_file1": "stat.json", "binary_file2": "stat.json"}
{"fname": "print_it", "lineno_map": [[1232, 1232], [1243, 1243], [1244, 1244], [1246, 1246], [1248, 1248], [1252, 1252], [1253, 1253], [1254, 1254], [1255, 1255], [1256, 1256], [1257, 1257], [1258, 1258], [1259, 1259], [1261, 1261], [1262, 1262], [1265, 1265], [1268, 1268], [1270, 1270], [1271, 1271], [1272, 1272], [1275, 1275], [1278, 1278], [1286, 1286], [1288, 1288], [1291, 1291], [1292, 1292], [1294, 1294], [1295, 1295], [1296, 1296], [1297, 1297], [1299, 1299], [1301, 1301], [1302, 1302], [1304, 1304], [1306, 1306], [1309, 1309], [1310, 1310], [1312, 1312], [1313, 1313], [1315, 1315], [1317, 1317], [1319, 1319], [1320, 1320], [1322, 1322], [1326, 1326], [1331, 1331], [1335, 1335], [1337, 1337]], "source_code_file": "src/stat.c", "binary_file1": "stat.json", "binary_file2": "stat.json"}
{"fname": "do_statfs", "lineno_map": [[1348, 1348], [1350, 1350], [1355, 1355], [1357, 1357], [1362, 1362]], "source_code_file": "src/stat.c", "binary_file1": "stat.json", "binary_file2": "stat.json"}
{"fname": "do_stat", "lineno_map": [[1371, 1371], [1374, 1374], [1376, 1376], [1378, 1378], [1385, 1385], [1386, 1386], [1387, 1387], [1389, 1389], [1393, 1393], [1394, 1394], [1396, 1396]], "source_code_file": "src/stat.c", "binary_file1": "stat.json", "binary_file2": "stat.json"}
{"fname": "default_format", "lineno_map": [[1406, 1406], [1408, 1408], [1409, 1409], [1414, 1414], [1423, 1423], [1428, 1428], [1435, 1435], [1440, 1440], [1441, 1441], [1445, 1445], [1453, 1453], [1457, 1457], [1459, 1459], [1462, 1462], [1465, 1465], [1476, 1476], [1479, 1479], [1484, 1484]], "source_code_file": "src/stat.c", "binary_file1": "stat.json", "binary_file2": "stat.json"}
{"fname": "usage", "lineno_map": [[1493, 1493], [1494, 1494], [1497, 1497], [1498, 1498], [1502, 1502], [1504, 1504], [1508, 1508], [1516, 1516], [1517, 1517], [1519, 1519], [1528, 1528], [1536, 1536], [1547, 1547], [1561, 1561], [1570, 1570], [1580, 1580], [1591, 1591], [1596, 1596], [1597, 1597], [1599, 1599]], "source_code_file": "src/stat.c", "binary_file1": "stat.json", "binary_file2": "stat.json"}
{"fname": "main", "lineno_map": [[1606, 1606], [1607, 1607], [1608, 1608], [1610, 1610], [1613, 1613], [1614, 1614], [1615, 1615], [1616, 1616], [1618, 1618], [1619, 1619], [1620, 1620], [1622, 1622], [1624, 1624], [1626, 1626], [1629, 1629], [1630, 1630], [1631, 1631], [1635, 1635], [1636, 1636], [1637, 1637], [1641, 1641], [1645, 1645], [1649, 1649], [1652, 1652], [1654, 1654], [1657, 1657], [1661, 1661], [1663, 1663], [1664, 1664], [1667, 1667], [1669, 1669], [1670, 1670], [1671, 1671], [1675, 1675], [1676, 1676], [1679, 1679], [1680, 1680], [1681, 1681], [1682, 1682]], "source_code_file": "src/stat.c", "binary_file1": "stat.json", "binary_file2": "stat.json"}
{"fname": "initialize_exit_failure", "lineno_map": [[101, 101], [103, 103]], "source_code_file": "src/printenv.c", "binary_file1": "printenv.json", "binary_file2": "printenv.json"}
{"fname": "usage", "lineno_map": [[58, 58], [59, 59], [62, 62], [69, 69], [72, 72], [73, 73], [74, 74], [75, 75], [77, 77]], "source_code_file": "src/printenv.c", "binary_file1": "printenv.json", "binary_file2": "printenv.json"}
{"fname": "main", "lineno_map": [[88, 88], [91, 91], [92, 92], [93, 93], [94, 94], [96, 96], [97, 97], [99, 99], [101, 101], [104, 104], [106, 106], [107, 107], [109, 109], [113, 113], [115, 115], [116, 116], [117, 117], [121, 121], [123, 123], [125, 125], [128, 128], [129, 129], [131, 131], [133, 133], [134, 134], [135, 135], [137, 137], [139, 139], [141, 141], [147, 147], [150, 150]], "source_code_file": "src/printenv.c", "binary_file1": "printenv.json", "binary_file2": "printenv.json"}
{"fname": "readdir_ignoring_dot_and_dotdot", "lineno_map": [[279, 279], [282, 282], [284, 284]], "source_code_file": "src/pwd.c", "binary_file1": "pwd.json", "binary_file2": "pwd.json"}
{"fname": "usage", "lineno_map": [[53, 53], [54, 54], [57, 57], [58, 58], [62, 62], [66, 66], [67, 67], [68, 68], [71, 71], [72, 72], [74, 74]], "source_code_file": "src/pwd.c", "binary_file1": "pwd.json", "binary_file2": "pwd.json"}
{"fname": "file_name_free", "lineno_map": [[80, 80], [81, 81]], "source_code_file": "src/pwd.c", "binary_file1": "pwd.json", "binary_file2": "pwd.json"}
{"fname": "file_name_init", "lineno_map": [[87, 87], [91, 91], [93, 93], [94, 94], [95, 95]], "source_code_file": "src/pwd.c", "binary_file1": "pwd.json", "binary_file2": "pwd.json"}
{"fname": "file_name_prepend", "lineno_map": [[103, 103], [104, 104], [106, 106], [111, 111], [112, 112], [113, 113], [114, 114], [115, 115], [116, 116], [117, 117], [120, 120], [121, 121], [122, 122]], "source_code_file": "src/pwd.c", "binary_file1": "pwd.json", "binary_file2": "pwd.json"}
{"fname": "nth_parent", "lineno_map": [[129, 129], [130, 130], [132, 132], [134, 134], [135, 135], [137, 137]], "source_code_file": "src/pwd.c", "binary_file1": "pwd.json", "binary_file2": "pwd.json"}
{"fname": "find_dir_entry", "lineno_map": [[162, 162], [163, 163], [164, 164], [167, 167], [168, 168], [169, 169], [172, 172], [173, 173], [178, 178], [180, 180], [187, 187], [188, 188], [190, 190], [193, 193], [194, 194], [195, 195], [198, 198], [203, 203], [205, 205], [207, 207], [210, 210], [212, 212], [215, 215], [216, 216], [220, 220], [222, 222], [223, 223], [228, 228], [232, 232], [236, 236], [237, 237], [241, 241]], "source_code_file": "src/pwd.c", "binary_file1": "pwd.json", "binary_file2": "pwd.json"}
{"fname": "robust_getcwd", "lineno_map": [[270, 270], [272, 272], [275, 275], [276, 276], [279, 279], [280, 280], [285, 285], [288, 288], [292, 292], [293, 293]], "source_code_file": "src/pwd.c", "binary_file1": "pwd.json", "binary_file2": "pwd.json"}
{"fname": "logical_getcwd", "lineno_map": [[304, 304], [308, 308], [310, 310], [311, 311], [313, 313], [314, 314], [316, 316], [320, 320]], "source_code_file": "src/pwd.c", "binary_file1": "pwd.json", "binary_file2": "pwd.json"}
{"fname": "main", "lineno_map": [[333, 333], [336, 336], [337, 337], [338, 338], [339, 339], [341, 341], [345, 345], [346, 346], [348, 348], [351, 351], [354, 354], [357, 357], [359, 359], [362, 362], [366, 366], [367, 367], [369, 369], [371, 371], [372, 372], [374, 374], [379, 379], [380, 380], [382, 382], [383, 383], [387, 387], [388, 388], [389, 389], [390, 390]], "source_code_file": "src/pwd.c", "binary_file1": "pwd.json", "binary_file2": "pwd.json"}
{"fname": "field_sep", "lineno_map": [[162, 162], [163, 163]], "source_code_file": "src/join.c", "binary_file1": "join.json", "binary_file2": "join.json"}
{"fname": "emit_ancillary_info", "lineno_map": [[631, 631], [642, 642], [643, 643], [645, 645], [646, 646], [648, 648], [649, 649], [655, 655], [656, 656], [662, 662], [665, 665], [667, 667], [669, 669]], "source_code_file": "src/join.c", "binary_file1": "join.json", "binary_file2": "join.json"}
{"fname": "usage", "lineno_map": [[188, 188], [189, 189], [192, 192], [196, 196], [201, 201], [205, 205], [211, 211], [217, 217], [227, 227], [230, 230], [231, 231], [232, 232], [249, 249], [251, 251]], "source_code_file": "src/join.c", "binary_file1": "join.json", "binary_file2": "join.json"}
{"fname": "extract_field", "lineno_map": [[259, 259], [261, 261], [263, 263], [264, 264], [265, 265]], "source_code_file": "src/join.c", "binary_file1": "join.json", "binary_file2": "join.json"}
{"fname": "xfields", "lineno_map": [[273, 273], [274, 274], [276, 276], [279, 279], [282, 282], [283, 283], [285, 285], [288, 288], [289, 289], [295, 295], [297, 297], [298, 298], [300, 300], [303, 303], [306, 306]], "source_code_file": "src/join.c", "binary_file1": "join.json", "binary_file2": "join.json"}
{"fname": "freeline", "lineno_map": [[312, 312], [314, 314], [315, 315], [316, 316], [317, 317]], "source_code_file": "src/join.c", "binary_file1": "join.json", "binary_file2": "join.json"}
{"fname": "keycmp", "lineno_map": [[337, 337], [339, 339], [340, 340], [344, 344], [345, 345], [348, 348], [350, 350], [351, 351], [355, 355], [356, 356], [359, 359], [361, 361], [364, 364], [368, 368], [372, 372], [374, 374], [377, 377]], "source_code_file": "src/join.c", "binary_file1": "join.json", "binary_file2": "join.json"}
{"fname": "check_order", "lineno_map": [[398, 398], [399, 399], [401, 401], [403, 403], [404, 404], [407, 407], [408, 408], [409, 409], [413, 413], [415, 415], [417, 417], [418, 418], [423, 423]], "source_code_file": "src/join.c", "binary_file1": "join.json", "binary_file2": "join.json"}
{"fname": "reset_line", "lineno_map": [[432, 432]], "source_code_file": "src/join.c", "binary_file1": "join.json", "binary_file2": "join.json"}
{"fname": "init_linep", "lineno_map": [[438, 438], [439, 439]], "source_code_file": "src/join.c", "binary_file1": "join.json", "binary_file2": "join.json"}
{"fname": "get_line", "lineno_map": [[449, 449], [451, 451], [453, 453], [454, 454], [457, 457], [458, 458], [460, 460], [462, 462], [464, 464], [465, 465], [466, 466], [469, 469], [471, 471], [473, 473], [474, 474], [476, 476]], "source_code_file": "src/join.c", "binary_file1": "join.json", "binary_file2": "join.json"}
{"fname": "free_spareline", "lineno_map": [[483, 483], [485, 485], [487, 487], [488, 488]], "source_code_file": "src/join.c", "binary_file1": "join.json", "binary_file2": "join.json"}
{"fname": "initseq", "lineno_map": [[496, 496], [497, 497], [498, 498]], "source_code_file": "src/join.c", "binary_file1": "join.json", "binary_file2": "join.json"}
{"fname": "getseq", "lineno_map": [[506, 506], [508, 508], [509, 509], [510, 510], [513, 513], [515, 515]], "source_code_file": "src/join.c", "binary_file1": "join.json", "binary_file2": "join.json"}
{"fname": "advance_seq", "lineno_map": [[526, 526], [527, 527]], "source_code_file": "src/join.c", "binary_file1": "join.json", "binary_file2": "join.json"}
{"fname": "delseq", "lineno_map": [[535, 535], [537, 537], [538, 538], [540, 540]], "source_code_file": "src/join.c", "binary_file1": "join.json", "binary_file2": "join.json"}
{"fname": "prfield", "lineno_map": [[552, 552], [554, 554], [555, 555], [556, 556], [557, 557], [558, 558], [560, 560], [561, 561]], "source_code_file": "src/join.c", "binary_file1": "join.json", "binary_file2": "join.json"}
{"fname": "prfields", "lineno_map": [[570, 570], [571, 571], [573, 573], [575, 575], [576, 576], [578, 578], [580, 580], [581, 581]], "source_code_file": "src/join.c", "binary_file1": "join.json", "binary_file2": "join.json"}
{"fname": "prjoin", "lineno_map": [[591, 591], [595, 595], [596, 596], [600, 600], [603, 603], [605, 605], [607, 607], [608, 608], [612, 612], [613, 613], [618, 618], [619, 619], [621, 621], [622, 622], [623, 623], [625, 625], [627, 627], [631, 631], [633, 633], [634, 634], [638, 638], [639, 639], [643, 643], [646, 646], [647, 647], [649, 649]], "source_code_file": "src/join.c", "binary_file1": "join.json", "binary_file2": "join.json"}
{"fname": "system_join", "lineno_map": [[662, 662], [663, 663], [666, 666], [667, 667], [668, 668], [669, 669], [671, 671], [673, 673], [674, 674], [677, 677], [679, 679], [680, 680], [681, 681], [682, 682], [683, 683], [684, 684], [685, 685], [686, 686], [687, 687], [690, 690], [692, 692], [694, 694], [696, 696], [697, 697], [698, 698], [699, 699], [700, 700], [702, 702], [704, 704], [705, 705], [706, 706], [707, 707], [708, 708], [713, 713], [715, 715], [717, 717], [718, 718], [721, 721], [722, 722], [726, 726], [728, 728], [730, 730], [731, 731], [734, 734], [735, 735], [737, 737], [739, 739], [742, 742], [743, 743], [747, 747], [749, 749], [750, 750], [753, 753], [755, 755], [757, 757], [758, 758], [761, 761], [768, 768], [769, 769], [771, 771], [772, 772], [773, 773], [775, 775], [777, 777], [778, 778], [779, 779], [780, 780], [781, 781], [783, 783], [784, 784], [785, 785], [790, 790], [792, 792], [793, 793], [794, 794], [795, 795], [796, 796], [798, 798], [799, 799], [800, 800], [805, 805], [806, 806], [808, 808], [809, 809]], "source_code_file": "src/join.c", "binary_file1": "join.json", "binary_file2": "join.json"}
{"fname": "add_field", "lineno_map": [[819, 819], [820, 820], [822, 822], [823, 823], [824, 824], [825, 825], [828, 828], [829, 829]], "source_code_file": "src/join.c", "binary_file1": "join.json", "binary_file2": "join.json"}
{"fname": "string_to_join_field", "lineno_map": [[845, 845], [846, 846], [847, 847], [848, 848], [849, 849], [851, 851]], "source_code_file": "src/join.c", "binary_file1": "join.json", "binary_file2": "join.json"}
{"fname": "decode_field_spec", "lineno_map": [[864, 864], [867, 867], [870, 870], [872, 872], [873, 873], [878, 878], [879, 879], [880, 880], [881, 881], [885, 885]], "source_code_file": "src/join.c", "binary_file1": "join.json", "binary_file2": "join.json"}
{"fname": "add_field_list", "lineno_map": [[902, 902], [908, 908], [910, 910], [911, 911], [912, 912], [913, 913], [914, 914], [916, 916]], "source_code_file": "src/join.c", "binary_file1": "join.json", "binary_file2": "join.json"}
{"fname": "set_join_field", "lineno_map": [[925, 925], [927, 927], [928, 928], [929, 929], [932, 932]], "source_code_file": "src/join.c", "binary_file1": "join.json", "binary_file2": "join.json"}
{"fname": "add_file_name", "lineno_map": [[961, 961], [963, 963], [965, 965], [966, 966], [967, 967], [970, 970], [971, 971], [974, 974], [975, 975], [979, 979], [980, 980], [984, 984], [987, 987], [989, 989], [990, 990], [992, 992], [995, 995], [996, 996], [997, 997], [998, 998], [999, 999]], "source_code_file": "src/join.c", "binary_file1": "join.json", "binary_file2": "join.json"}
{"fname": "main", "lineno_map": [[1006, 1006], [1008, 1008], [1011, 1011], [1015, 1015], [1016, 1016], [1017, 1017], [1018, 1018], [1019, 1019], [1021, 1021], [1022, 1022], [1024, 1024], [1025, 1025], [1026, 1026], [1027, 1027], [1029, 1029], [1033, 1033], [1035, 1035], [1038, 1038], [1044, 1044], [1045, 1045], [1046, 1046], [1048, 1048], [1049, 1049], [1051, 1051], [1056, 1056], [1057, 1057], [1059, 1059], [1063, 1063], [1067, 1067], [1071, 1071], [1075, 1075], [1076, 1076], [1079, 1079], [1080, 1080], [1081, 1081], [1085, 1085], [1086, 1086], [1091, 1091], [1092, 1092], [1095, 1095], [1096, 1096], [1102, 1102], [1103, 1103], [1104, 1104], [1105, 1105], [1107, 1107], [1108, 1108], [1110, 1110], [1113, 1113], [1114, 1114], [1115, 1115], [1120, 1120], [1124, 1124], [1128, 1128], [1132, 1132], [1137, 1137], [1140, 1140], [1142, 1142], [1145, 1145], [1148, 1148], [1152, 1152], [1153, 1153], [1154, 1154], [1157, 1157], [1159, 1159], [1160, 1160], [1162, 1162], [1163, 1163], [1168, 1168], [1169, 1169], [1171, 1171], [1172, 1172], [1175, 1175], [1176, 1176], [1177, 1177], [1178, 1178], [1180, 1180], [1181, 1181], [1182, 1182], [1183, 1183], [1184, 1184], [1185, 1185], [1186, 1186], [1187, 1187], [1188, 1188], [1190, 1190], [1191, 1191], [1192, 1192], [1193, 1193], [1195, 1195]], "source_code_file": "src/join.c", "binary_file1": "join.json", "binary_file2": "join.json"}
{"fname": "usage", "lineno_map": [[43, 43], [44, 44], [47, 47], [53, 53], [57, 57], [58, 58], [59, 59], [61, 61]], "source_code_file": "src/yes.c", "binary_file1": "yes.json", "binary_file2": "yes.json"}
{"fname": "main", "lineno_map": [[68, 68], [69, 69], [70, 70], [71, 71], [73, 73], [75, 75], [77, 77], [78, 78], [80, 80], [81, 81], [82, 82], [83, 83], [87, 87], [88, 88], [89, 89], [91, 91], [92, 92], [93, 93], [94, 94], [95, 95], [99, 99], [101, 101], [102, 102], [107, 107], [108, 108], [109, 109], [111, 111], [112, 112], [113, 113], [114, 114], [115, 115], [117, 117], [121, 121], [122, 122], [124, 124], [125, 125], [129, 129], [130, 130], [131, 131]], "source_code_file": "src/yes.c", "binary_file1": "yes.json", "binary_file2": "yes.json"}
{"fname": "usage", "lineno_map": [[41, 41], [42, 42], [45, 45], [46, 46], [50, 50], [51, 51], [52, 52], [54, 54]], "source_code_file": "src/logname.c", "binary_file1": "logname.json", "binary_file2": "logname.json"}
{"fname": "main", "lineno_map": [[63, 63], [64, 64], [65, 65], [66, 66], [68, 68], [70, 70], [72, 72], [73, 73], [75, 75], [77, 77], [78, 78], [83, 83], [84, 84], [85, 85], [87, 87]], "source_code_file": "src/logname.c", "binary_file1": "logname.json", "binary_file2": "logname.json"}
{"fname": "usage", "lineno_map": [[73, 73], [74, 74], [77, 77], [83, 83], [87, 87], [89, 89], [95, 95], [96, 96], [97, 97], [102, 102], [103, 103], [105, 105]], "source_code_file": "src/kill.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "print_table_row", "lineno_map": [[116, 116], [117, 117]], "source_code_file": "src/kill.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "list_signals", "lineno_map": [[129, 129], [132, 132], [134, 134], [137, 137], [138, 138], [139, 139], [142, 142], [143, 143], [145, 145], [146, 146], [147, 147], [150, 150], [151, 151], [153, 153], [154, 154], [155, 155], [157, 157], [160, 160], [161, 161], [162, 162], [166, 166], [167, 167], [169, 169], [170, 170], [171, 171], [174, 174], [175, 175], [177, 177], [181, 181], [182, 182], [183, 183]], "source_code_file": "src/kill.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "send_signals", "lineno_map": [[195, 195], [196, 196], [201, 201], [202, 202], [204, 204], [206, 206], [207, 207], [209, 209], [211, 211], [212, 212], [215, 215]], "source_code_file": "src/kill.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "main", "lineno_map": [[224, 224], [225, 225], [226, 226], [230, 230], [231, 231], [232, 232], [233, 233], [235, 235], [237, 237], [239, 239], [243, 243], [246, 246], [256, 256], [257, 257], [258, 258], [260, 260], [261, 261], [263, 263], [267, 267], [269, 269], [270, 270], [272, 272], [273, 273], [274, 274], [279, 279], [282, 282], [284, 284], [285, 285], [287, 287], [290, 290], [291, 291], [293, 293], [297, 297], [298, 298], [299, 299], [301, 301], [302, 302], [305, 305], [307, 307], [308, 308], [312, 312], [313, 313]], "source_code_file": "src/kill.c", "binary_file1": "kill.json", "binary_file2": "kill.json"}
{"fname": "chopt_init", "lineno_map": [[60, 60], [61, 61], [62, 62], [63, 63], [64, 64], [65, 65], [66, 66]], "source_code_file": "src/chown-core.c", "binary_file1": "chgrp.json", "binary_file2": "chgrp.json"}
{"fname": "chopt_free", "lineno_map": [[72, 72], [73, 73]], "source_code_file": "src/chown-core.c", "binary_file1": "chgrp.json", "binary_file2": "chgrp.json"}
{"fname": "gid_to_name", "lineno_map": [[84, 84], [87, 87]], "source_code_file": "src/chown-core.c", "binary_file1": "chgrp.json", "binary_file2": "chgrp.json"}
{"fname": "uid_to_name", "lineno_map": [[98, 98], [101, 101]], "source_code_file": "src/chown-core.c", "binary_file1": "chgrp.json", "binary_file2": "chgrp.json"}
{"fname": "user_group_str", "lineno_map": [[109, 109], [111, 111], [113, 113], [115, 115], [116, 116], [120, 120], [123, 123], [125, 125]], "source_code_file": "src/chown-core.c", "binary_file1": "chgrp.json", "binary_file2": "chgrp.json"}
{"fname": "describe_change", "lineno_map": [[144, 144], [146, 146], [151, 151], [152, 152], [154, 154], [157, 157], [162, 162], [164, 164], [170, 170], [173, 173], [174, 174], [175, 175], [179, 179], [184, 184], [187, 187], [189, 189], [190, 190]], "source_code_file": "src/chown-core.c", "binary_file1": "chgrp.json", "binary_file2": "chgrp.json"}
{"fname": "restricted_chown", "lineno_map": [[217, 217], [219, 219], [222, 222], [225, 225], [227, 227], [228, 228], [233, 233], [234, 234], [235, 235], [236, 236], [239, 239], [240, 240], [241, 241], [242, 242], [243, 243], [244, 244], [246, 246], [248, 248], [254, 254], [258, 258], [259, 259], [260, 260]], "source_code_file": "src/chown-core.c", "binary_file1": "chgrp.json", "binary_file2": "chgrp.json"}
{"fname": "change_file_owner", "lineno_map": [[276, 276], [277, 277], [280, 280], [282, 282], [284, 284], [287, 287], [289, 289], [293, 293], [295, 295], [297, 297], [305, 305], [317, 317], [319, 319], [320, 320], [323, 323], [324, 324], [326, 326], [330, 330], [331, 331], [332, 332], [336, 336], [337, 337], [339, 339], [343, 343], [345, 345], [354, 354], [356, 356], [357, 357], [359, 359], [360, 360], [361, 361], [362, 362], [364, 364], [365, 365], [369, 369], [373, 373], [375, 375], [377, 377], [378, 378], [380, 380], [383, 383], [386, 386], [387, 387], [388, 388], [389, 389], [390, 390], [394, 394], [395, 395], [396, 396], [398, 398], [402, 402], [404, 404], [406, 406], [411, 411], [413, 413], [414, 414], [429, 429], [430, 430], [432, 432], [438, 438], [442, 442], [448, 448], [449, 449], [453, 453], [464, 464], [465, 465], [471, 471], [473, 473], [474, 474], [475, 475], [476, 476], [478, 478], [480, 480], [481, 481], [482, 482], [483, 483], [485, 485], [486, 486], [487, 487], [489, 489], [490, 490], [491, 491], [495, 495], [496, 496]], "source_code_file": "src/chown-core.c", "binary_file1": "chgrp.json", "binary_file2": "chgrp.json"}
{"fname": "chown_files", "lineno_map": [[516, 516], [519, 519], [520, 520], [521, 521], [523, 523], [525, 525], [531, 531], [532, 532], [534, 534], [537, 537], [538, 538], [539, 539], [544, 544], [548, 548], [550, 550], [551, 551]], "source_code_file": "src/chown-core.c", "binary_file1": "chgrp.json", "binary_file2": "chgrp.json"}
{"fname": "compute_context_from_mask", "lineno_map": [[96, 96], [97, 97], [98, 98], [100, 100], [119, 119], [120, 120], [121, 121], [122, 122], [124, 124], [126, 126], [127, 127], [128, 128], [132, 132]], "source_code_file": "src/chcon.c", "binary_file1": "chcon.json", "binary_file2": "chcon.json"}
{"fname": "change_file_context", "lineno_map": [[143, 143], [146, 146], [148, 148], [150, 150], [152, 152], [154, 154], [156, 156], [164, 164], [166, 166], [171, 171], [174, 174], [178, 178], [181, 181], [183, 183], [184, 184], [185, 185], [187, 187], [189, 189], [190, 190], [195, 195], [197, 197], [198, 198]], "source_code_file": "src/chcon.c", "binary_file1": "chcon.json", "binary_file2": "chcon.json"}
{"fname": "process_file", "lineno_map": [[211, 211], [212, 212], [213, 213], [214, 214], [216, 216], [219, 219], [221, 221], [225, 225], [227, 227], [229, 229], [237, 237], [249, 249], [251, 251], [252, 252], [255, 255], [257, 257], [261, 261], [262, 262], [266, 266], [268, 268], [272, 272], [274, 274], [283, 283], [284, 284], [286, 286], [287, 287], [290, 290], [292, 292], [293, 293], [296, 296], [297, 297], [300, 300], [301, 301]], "source_code_file": "src/chcon.c", "binary_file1": "chcon.json", "binary_file2": "chcon.json"}
{"fname": "process_files", "lineno_map": [[313, 313], [315, 315], [321, 321], [322, 322], [324, 324], [327, 327], [328, 328], [333, 333], [336, 336], [338, 338], [339, 339]], "source_code_file": "src/chcon.c", "binary_file1": "chcon.json", "binary_file2": "chcon.json"}
{"fname": "usage", "lineno_map": [[348, 348], [349, 349], [352, 352], [358, 358], [363, 363], [365, 365], [370, 370], [376, 376], [380, 380], [384, 384], [387, 387], [390, 390], [403, 403], [404, 404], [405, 405], [407, 407]], "source_code_file": "src/chcon.c", "binary_file1": "chcon.json", "binary_file2": "chcon.json"}
{"fname": "main", "lineno_map": [[414, 414], [418, 418], [421, 421], [422, 422], [423, 423], [427, 427], [428, 428], [429, 429], [430, 430], [432, 432], [434, 434], [437, 437], [440, 440], [444, 444], [448, 448], [452, 452], [457, 457], [461, 461], [465, 465], [469, 469], [473, 473], [481, 481], [485, 485], [486, 486], [490, 490], [491, 491], [495, 495], [496, 496], [500, 500], [501, 501], [504, 504], [505, 505], [507, 507], [511, 511], [513, 513], [515, 515], [516, 516], [518, 518], [522, 522], [523, 523], [524, 524], [529, 529], [530, 530], [533, 533], [535, 535], [536, 536], [538, 538], [539, 539], [542, 542], [544, 544], [546, 546], [547, 547], [550, 550], [552, 552], [555, 555], [559, 559], [560, 560], [561, 561], [565, 565], [567, 567], [568, 568], [571, 571], [574, 574], [575, 575], [576, 576], [581, 581], [584, 584]], "source_code_file": "src/chcon.c", "binary_file1": "chcon.json", "binary_file2": "chcon.json"}
{"fname": "usage", "lineno_map": [[63, 63], [64, 64], [67, 67], [68, 68], [73, 73], [76, 76], [77, 77], [82, 82], [86, 86], [93, 93], [98, 98], [99, 99], [100, 100], [103, 103]], "source_code_file": "src/mktemp.c", "binary_file1": "mktemp.json", "binary_file2": "mktemp.json"}
{"fname": "count_consecutive_X_s", "lineno_map": [[109, 109], [110, 110], [111, 111]], "source_code_file": "src/mktemp.c", "binary_file1": "mktemp.json", "binary_file2": "mktemp.json"}
{"fname": "maybe_close_stdout", "lineno_map": [[139, 139], [140, 140], [141, 141], [142, 142]], "source_code_file": "src/mktemp.c", "binary_file1": "mktemp.json", "binary_file2": "mktemp.json"}
{"fname": "main", "lineno_map": [[149, 149], [150, 150], [154, 154], [155, 155], [156, 156], [157, 157], [158, 158], [159, 159], [165, 165], [166, 166], [167, 167], [168, 168], [170, 170], [172, 172], [174, 174], [177, 177], [180, 180], [181, 181], [184, 184], [187, 187], [188, 188], [191, 191], [195, 195], [198, 198], [202, 202], [204, 204], [208, 208], [209, 209], [211, 211], [212, 212], [215, 215], [217, 217], [218, 218], [222, 222], [225, 225], [227, 227], [228, 228], [230, 230], [234, 234], [235, 235], [236, 236], [237, 237], [238, 238], [239, 239], [243, 243], [244, 244], [245, 245], [246, 246], [248, 248], [249, 249], [253, 253], [255, 255], [259, 259], [260, 260], [261, 261], [263, 263], [265, 265], [267, 267], [268, 268], [269, 269], [270, 270], [271, 271], [273, 273], [275, 275], [276, 276], [282, 282], [283, 283], [286, 286], [287, 287], [289, 289], [290, 290], [296, 296], [297, 297], [298, 298], [304, 304], [306, 306], [308, 308], [309, 309], [311, 311], [312, 312], [314, 314], [319, 319], [320, 320], [322, 322], [323, 323], [325, 325], [329, 329], [331, 331], [334, 334], [336, 336], [337, 337], [338, 338], [339, 339], [340, 340]], "source_code_file": "src/mktemp.c", "binary_file1": "mktemp.json", "binary_file2": "mktemp.json"}
{"fname": "samedir_template", "lineno_map": [[53, 53], [54, 54], [56, 56], [57, 57], [60, 60], [61, 61], [64, 64]], "source_code_file": "src/force-link.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "try_link", "lineno_map": [[82, 82]], "source_code_file": "src/force-link.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "force_linkat", "lineno_map": [[96, 96], [97, 97], [101, 101], [102, 102], [104, 104], [107, 107], [108, 108], [111, 111], [115, 115], [118, 118], [119, 119], [120, 120], [122, 122]], "source_code_file": "src/force-link.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "try_symlink", "lineno_map": [[138, 138]], "source_code_file": "src/force-link.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "force_symlinkat", "lineno_map": [[151, 151], [152, 152], [156, 156], [157, 157], [159, 159], [162, 162], [163, 163], [164, 164], [166, 166], [167, 167], [173, 173], [176, 176], [177, 177], [178, 178], [180, 180]], "source_code_file": "src/force-link.c", "binary_file1": "cp.json", "binary_file2": "cp.json"}
{"fname": "parse_group", "lineno_map": [[81, 81], [83, 83], [85, 85], [86, 86], [87, 87], [91, 91], [93, 93], [95, 95], [97, 97]], "source_code_file": "src/chgrp.c", "binary_file1": "chgrp.json", "binary_file2": "chgrp.json"}
{"fname": "usage", "lineno_map": [[106, 106], [107, 107], [110, 110], [115, 115], [120, 120], [125, 125], [130, 130], [134, 134], [138, 138], [142, 142], [145, 145], [158, 158], [159, 159], [160, 160], [167, 167], [169, 169]], "source_code_file": "src/chgrp.c", "binary_file1": "chgrp.json", "binary_file2": "chgrp.json"}
{"fname": "main", "lineno_map": [[175, 175], [179, 179], [183, 183], [190, 190], [191, 191], [192, 192], [193, 193], [195, 195], [197, 197], [199, 199], [202, 202], [205, 205], [209, 209], [213, 213], [217, 217], [222, 222], [226, 226], [230, 230], [234, 234], [238, 238], [242, 242], [246, 246], [250, 250], [253, 253], [254, 254], [256, 256], [260, 260], [262, 262], [264, 264], [265, 265], [267, 267], [272, 272], [274, 274], [276, 276], [278, 278], [279, 279], [281, 281], [282, 282], [285, 285], [288, 288], [289, 289], [292, 292], [293, 293], [297, 297], [298, 298], [299, 299], [302, 302], [305, 305], [306, 306], [307, 307], [311, 311], [312, 312]], "source_code_file": "src/chgrp.c", "binary_file1": "chgrp.json", "binary_file2": "chgrp.json"}
{"fname": "emit_mandatory_arg_note", "lineno_map": [[587, 587]], "source_code_file": "src/csplit.c", "binary_file1": "csplit.json", "binary_file2": "csplit.json"}
{"fname": "emit_ancillary_info", "lineno_map": [[631, 631], [642, 642], [643, 643], [648, 648], [649, 649], [651, 651], [655, 655], [656, 656], [662, 662], [665, 665], [667, 667], [669, 669]], "source_code_file": "src/csplit.c", "binary_file1": "csplit.json", "binary_file2": "csplit.json"}
{"fname": "cleanup", "lineno_map": [[215, 215], [217, 217], [218, 218], [219, 219]], "source_code_file": "src/csplit.c", "binary_file1": "csplit.json", "binary_file2": "csplit.json"}
{"fname": "cleanup_fatal", "lineno_map": [[226, 226], [227, 227]], "source_code_file": "src/csplit.c", "binary_file1": "csplit.json", "binary_file2": "csplit.json"}
{"fname": "xalloc_die", "lineno_map": [[233, 233], [234, 234]], "source_code_file": "src/csplit.c", "binary_file1": "csplit.json", "binary_file2": "csplit.json"}
{"fname": "interrupt_handler", "lineno_map": [[240, 240], [241, 241], [245, 245]], "source_code_file": "src/csplit.c", "binary_file1": "csplit.json", "binary_file2": "csplit.json"}
{"fname": "save_to_hold_area", "lineno_map": [[254, 254], [255, 255], [256, 256]], "source_code_file": "src/csplit.c", "binary_file1": "csplit.json", "binary_file2": "csplit.json"}
{"fname": "read_input", "lineno_map": [[267, 267], [270, 270], [272, 272], [273, 273], [275, 275], [277, 277], [278, 278]], "source_code_file": "src/csplit.c", "binary_file1": "csplit.json", "binary_file2": "csplit.json"}
{"fname": "clear_line_control", "lineno_map": [[289, 289], [290, 290], [291, 291]], "source_code_file": "src/csplit.c", "binary_file1": "csplit.json", "binary_file2": "csplit.json"}
{"fname": "new_line_control", "lineno_map": [[299, 299], [301, 301], [302, 302]], "source_code_file": "src/csplit.c", "binary_file1": "csplit.json", "binary_file2": "csplit.json"}
{"fname": "keep_new_line", "lineno_map": [[316, 316], [317, 317], [320, 320], [322, 322], [323, 323], [326, 326], [329, 329], [330, 330], [331, 331], [332, 332]], "source_code_file": "src/csplit.c", "binary_file1": "csplit.json", "binary_file2": "csplit.json"}
{"fname": "record_line_starts", "lineno_map": [[352, 352], [355, 355], [356, 356], [357, 357], [361, 361], [362, 362], [364, 364], [365, 365], [366, 366], [367, 367], [368, 368], [372, 372], [374, 374], [376, 376], [377, 377], [380, 380], [383, 383], [384, 384], [385, 385]], "source_code_file": "src/csplit.c", "binary_file1": "csplit.json", "binary_file2": "csplit.json"}
{"fname": "create_new_buffer", "lineno_map": [[396, 396], [398, 398], [400, 400], [401, 401]], "source_code_file": "src/csplit.c", "binary_file1": "csplit.json", "binary_file2": "csplit.json"}
{"fname": "get_new_buffer", "lineno_map": [[415, 415], [416, 416], [418, 418], [419, 419], [422, 422], [424, 424], [425, 425], [426, 426], [427, 427]], "source_code_file": "src/csplit.c", "binary_file1": "csplit.json", "binary_file2": "csplit.json"}
{"fname": "free_buffer", "lineno_map": [[436, 436], [438, 438], [439, 439], [440, 440], [442, 442], [443, 443], [444, 444]], "source_code_file": "src/csplit.c", "binary_file1": "csplit.json", "binary_file2": "csplit.json"}
{"fname": "save_buffer", "lineno_map": [[455, 455], [456, 456], [458, 458], [459, 459], [462, 462], [464, 464]], "source_code_file": "src/csplit.c", "binary_file1": "csplit.json", "binary_file2": "csplit.json"}
{"fname": "load_buffer", "lineno_map": [[485, 485], [490, 490], [495, 495], [496, 496], [500, 500], [501, 501], [502, 502], [505, 505], [507, 507], [508, 508], [509, 509], [510, 510], [511, 511], [514, 514], [516, 516], [518, 518], [521, 521], [522, 522], [523, 523], [524, 524], [525, 525], [528, 528], [529, 529], [532, 532], [533, 533]], "source_code_file": "src/csplit.c", "binary_file1": "csplit.json", "binary_file2": "csplit.json"}
{"fname": "get_first_line_in_buffer", "lineno_map": [[544, 544], [545, 545]], "source_code_file": "src/csplit.c", "binary_file1": "csplit.json", "binary_file2": "csplit.json"}
{"fname": "remove_line", "lineno_map": [[565, 565], [567, 567], [568, 568], [569, 569], [572, 572], [575, 575], [576, 576], [578, 578], [580, 580], [582, 582], [585, 585], [588, 588], [589, 589], [594, 594], [595, 595]], "source_code_file": "src/csplit.c", "binary_file1": "csplit.json", "binary_file2": "csplit.json"}
{"fname": "find_line", "lineno_map": [[610, 610], [613, 613], [616, 616], [618, 618], [619, 619], [625, 625], [626, 626], [628, 628], [630, 630], [631, 631], [635, 635], [637, 637]], "source_code_file": "src/csplit.c", "binary_file1": "csplit.json", "binary_file2": "csplit.json"}
{"fname": "set_input_file", "lineno_map": [[654, 654], [655, 655]], "source_code_file": "src/csplit.c", "binary_file1": "csplit.json", "binary_file2": "csplit.json"}
{"fname": "write_to_file", "lineno_map": [[672, 672], [674, 674], [676, 676], [677, 677], [678, 678], [681, 681], [683, 683], [685, 685], [686, 686], [688, 688], [689, 689], [690, 690], [692, 692], [693, 693]], "source_code_file": "src/csplit.c", "binary_file1": "csplit.json", "binary_file2": "csplit.json"}
{"fname": "dump_rest_of_file", "lineno_map": [[704, 704], [705, 705]], "source_code_file": "src/csplit.c", "binary_file1": "csplit.json", "binary_file2": "csplit.json"}
{"fname": "handle_line_error", "lineno_map": [[718, 718], [719, 719], [720, 720], [721, 721], [723, 723], [725, 725]], "source_code_file": "src/csplit.c", "binary_file1": "csplit.json", "binary_file2": "csplit.json"}
{"fname": "process_line_count", "lineno_map": [[737, 737], [739, 739], [744, 744], [745, 745], [747, 747], [748, 748], [750, 750], [751, 751], [752, 752], [753, 753], [756, 756], [758, 758], [759, 759], [763, 763], [764, 764]], "source_code_file": "src/csplit.c", "binary_file1": "csplit.json", "binary_file2": "csplit.json"}
{"fname": "regexp_error", "lineno_map": [[771, 771], [772, 772], [774, 774], [777, 777], [780, 780], [782, 782], [784, 784], [785, 785], [787, 787]], "source_code_file": "src/csplit.c", "binary_file1": "csplit.json", "binary_file2": "csplit.json"}
{"fname": "process_regexp", "lineno_map": [[800, 800], [803, 803], [804, 804], [806, 806], [807, 807], [812, 812], [816, 816], [817, 817], [819, 819], [821, 821], [823, 823], [824, 824], [826, 826], [829, 829], [831, 831], [832, 832], [833, 833], [834, 834], [836, 836], [838, 838], [839, 839], [841, 841], [843, 843], [844, 844], [845, 845], [856, 856], [857, 857], [859, 859], [861, 861], [863, 863], [864, 864], [866, 866], [869, 869], [871, 871], [872, 872], [873, 873], [874, 874], [876, 876], [878, 878], [879, 879], [881, 881], [887, 887], [889, 889], [891, 891], [892, 892], [894, 894], [895, 895]], "source_code_file": "src/csplit.c", "binary_file1": "csplit.json", "binary_file2": "csplit.json"}
{"fname": "split_file", "lineno_map": [[903, 903], [906, 906], [908, 908], [909, 909], [910, 910], [914, 914], [915, 915], [916, 916], [920, 920], [921, 921], [922, 922]], "source_code_file": "src/csplit.c", "binary_file1": "csplit.json", "binary_file2": "csplit.json"}
{"fname": "make_filename", "lineno_map": [[935, 935], [936, 936], [937, 937], [939, 939]], "source_code_file": "src/csplit.c", "binary_file1": "csplit.json", "binary_file2": "csplit.json"}
{"fname": "create_output_file", "lineno_map": [[951, 951], [953, 953], [955, 955], [956, 956], [962, 962], [963, 963], [964, 964], [965, 965], [966, 966], [967, 967], [970, 970], [972, 972], [973, 973], [975, 975]], "source_code_file": "src/csplit.c", "binary_file1": "csplit.json", "binary_file2": "csplit.json"}
{"fname": "delete_all_files", "lineno_map": [[984, 984], [987, 987], [989, 989], [990, 990], [991, 991], [994, 994]], "source_code_file": "src/csplit.c", "binary_file1": "csplit.json", "binary_file2": "csplit.json"}
{"fname": "close_output_file", "lineno_map": [[1003, 1003], [1005, 1005], [1007, 1007], [1008, 1008], [1009, 1009], [1011, 1011], [1013, 1013], [1014, 1014], [1015, 1015], [1017, 1017], [1024, 1024], [1025, 1025], [1026, 1026], [1027, 1027], [1028, 1028], [1030, 1030], [1031, 1031], [1035, 1035], [1038, 1038], [1041, 1041]], "source_code_file": "src/csplit.c", "binary_file1": "csplit.json", "binary_file2": "csplit.json"}
{"fname": "save_line_to_file", "lineno_map": [[1051, 1051], [1052, 1052], [1054, 1054], [1055, 1055], [1056, 1056], [1058, 1058]], "source_code_file": "src/csplit.c", "binary_file1": "csplit.json", "binary_file2": "csplit.json"}
{"fname": "new_control_record", "lineno_map": [[1069, 1069], [1070, 1070], [1071, 1071], [1072, 1072], [1073, 1073], [1074, 1074], [1075, 1075], [1076, 1076]], "source_code_file": "src/csplit.c", "binary_file1": "csplit.json", "binary_file2": "csplit.json"}
{"fname": "check_for_offset", "lineno_map": [[1088, 1088], [1089, 1089]], "source_code_file": "src/csplit.c", "binary_file1": "csplit.json", "binary_file2": "csplit.json"}
{"fname": "parse_repeat_count", "lineno_map": [[1104, 1104], [1105, 1105], [1106, 1106], [1108, 1108], [1110, 1110], [1111, 1111], [1114, 1114], [1116, 1116], [1120, 1120], [1123, 1123]], "source_code_file": "src/csplit.c", "binary_file1": "csplit.json", "binary_file2": "csplit.json"}
{"fname": "extract_regexp", "lineno_map": [[1136, 1136], [1141, 1141], [1142, 1142], [1143, 1143], [1146, 1146], [1147, 1147], [1148, 1148], [1149, 1149], [1151, 1151], [1152, 1152], [1153, 1153], [1154, 1154], [1155, 1155], [1156, 1156], [1158, 1158], [1159, 1159], [1161, 1161], [1162, 1162], [1165, 1165], [1166, 1166]], "source_code_file": "src/csplit.c", "binary_file1": "csplit.json", "binary_file2": "csplit.json"}
{"fname": "parse_patterns", "lineno_map": [[1181, 1181], [1183, 1183], [1185, 1185], [1189, 1189], [1190, 1190], [1192, 1192], [1193, 1193], [1194, 1194], [1195, 1195], [1197, 1197], [1200, 1200], [1205, 1205], [1206, 1206], [1207, 1207], [1208, 1208], [1210, 1210], [1212, 1212], [1215, 1215], [1218, 1218], [1219, 1219]], "source_code_file": "src/csplit.c", "binary_file1": "csplit.json", "binary_file2": "csplit.json"}
{"fname": "get_format_flags", "lineno_map": [[1234, 1234], [1236, 1236], [1238, 1238], [1245, 1245], [1249, 1249], [1253, 1253]], "source_code_file": "src/csplit.c", "binary_file1": "csplit.json", "binary_file2": "csplit.json"}
{"fname": "check_format_conv_type", "lineno_map": [[1265, 1265], [1266, 1266], [1268, 1268], [1272, 1272], [1281, 1281], [1285, 1285], [1288, 1288], [1289, 1289], [1292, 1292], [1296, 1296], [1297, 1297]], "source_code_file": "src/csplit.c", "binary_file1": "csplit.json", "binary_file2": "csplit.json"}
{"fname": "max_out", "lineno_map": [[1308, 1308], [1310, 1310], [1311, 1311], [1313, 1313], [1314, 1314], [1316, 1316], [1318, 1318], [1319, 1319], [1320, 1320], [1321, 1321], [1322, 1322], [1323, 1323], [1324, 1324], [1327, 1327], [1328, 1328], [1331, 1331], [1332, 1332], [1333, 1333]], "source_code_file": "src/csplit.c", "binary_file1": "csplit.json", "binary_file2": "csplit.json"}
{"fname": "main", "lineno_map": [[1343, 1343], [1344, 1344], [1345, 1345], [1346, 1346], [1348, 1348], [1350, 1350], [1351, 1351], [1352, 1352], [1353, 1353], [1354, 1354], [1355, 1355], [1356, 1356], [1358, 1358], [1359, 1359], [1362, 1362], [1366, 1366], [1370, 1370], [1374, 1374], [1375, 1375], [1380, 1380], [1384, 1384], [1388, 1388], [1391, 1391], [1393, 1393], [1396, 1396], [1399, 1399], [1401, 1401], [1402, 1402], [1404, 1404], [1405, 1405], [1408, 1408], [1409, 1409], [1411, 1411], [1412, 1412], [1413, 1413], [1414, 1414], [1415, 1415], [1417, 1417], [1419, 1419], [1447, 1447], [1448, 1448], [1450, 1450], [1451, 1451], [1452, 1452], [1455, 1455], [1456, 1456], [1457, 1457], [1459, 1459], [1460, 1460], [1461, 1461], [1464, 1464], [1466, 1466], [1468, 1468], [1469, 1469]], "source_code_file": "src/csplit.c", "binary_file1": "csplit.json", "binary_file2": "csplit.json"}
{"fname": "usage", "lineno_map": [[1478, 1478], [1479, 1479], [1482, 1482], [1486, 1486], [1490, 1490], [1495, 1495], [1497, 1497], [1502, 1502], [1505, 1505], [1510, 1510], [1511, 1511], [1512, 1512], [1523, 1523], [1525, 1525]], "source_code_file": "src/csplit.c", "binary_file1": "csplit.json", "binary_file2": "csplit.json"}
{"fname": "usage", "lineno_map": [[60, 60], [61, 61], [64, 64], [65, 65], [73, 73], [76, 76], [80, 80], [81, 81], [82, 82], [84, 84]], "source_code_file": "src/sync.c", "binary_file1": "sync.json", "binary_file2": "sync.json"}
{"fname": "sync_arg", "lineno_map": [[93, 93], [94, 94], [105, 105], [106, 106], [110, 110], [111, 111], [112, 112], [113, 113], [114, 114], [120, 120], [121, 121], [122, 122], [124, 124], [126, 126], [129, 129], [131, 131], [133, 133], [136, 136], [140, 140], [145, 145], [153, 153], [155, 155], [156, 156], [160, 160], [162, 162], [163, 163]], "source_code_file": "src/sync.c", "binary_file1": "sync.json", "binary_file2": "sync.json"}
{"fname": "main", "lineno_map": [[174, 174], [176, 176], [179, 179], [180, 180], [181, 181], [182, 182], [184, 184], [186, 186], [189, 189], [192, 192], [196, 196], [199, 199], [201, 201], [204, 204], [208, 208], [210, 210], [212, 212], [216, 216], [217, 217], [219, 219], [220, 220], [221, 221], [222, 222], [223, 223], [224, 224], [226, 226], [228, 228], [229, 229], [232, 232], [233, 233]], "source_code_file": "src/sync.c", "binary_file1": "sync.json", "binary_file2": "sync.json"}
{"fname": "usage", "lineno_map": [[65, 65], [66, 66], [69, 69], [73, 73], [77, 77], [78, 78], [80, 80], [84, 84], [85, 85], [86, 86], [87, 87], [89, 89]], "source_code_file": "src/expand.c", "binary_file1": "expand.json", "binary_file2": "expand.json"}
{"fname": "expand", "lineno_map": [[100, 100], [102, 102], [111, 111], [118, 118], [121, 121], [128, 128], [129, 129], [131, 131], [133, 133], [139, 139], [142, 142], [143, 143], [145, 145], [146, 146], [148, 148], [149, 149], [150, 150], [152, 152], [154, 154], [158, 158], [159, 159], [163, 163], [164, 164], [165, 165], [168, 168], [171, 171], [174, 174], [175, 175], [177, 177]], "source_code_file": "src/expand.c", "binary_file1": "expand.json", "binary_file2": "expand.json"}
{"fname": "main", "lineno_map": [[187, 187], [188, 188], [189, 189], [190, 190], [192, 192], [193, 193], [195, 195], [197, 197], [200, 200], [204, 204], [209, 209], [210, 210], [214, 214], [215, 215], [216, 216], [220, 220], [222, 222], [225, 225], [229, 229], [231, 231], [233, 233], [235, 235]], "source_code_file": "src/expand.c", "binary_file1": "expand.json", "binary_file2": "expand.json"}
{"fname": "emit_mandatory_arg_note", "lineno_map": [[587, 587], [590, 590]], "source_code_file": "src/du.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "emit_size_note", "lineno_map": [[594, 594], [595, 595], [599, 599]], "source_code_file": "src/du.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "emit_blocksize_note", "lineno_map": [[604, 604]], "source_code_file": "src/du.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "emit_ancillary_info", "lineno_map": [[631, 631], [632, 632], [642, 642], [645, 645], [646, 646], [648, 648], [649, 649], [651, 651], [655, 655], [656, 656], [662, 662], [665, 665]], "source_code_file": "src/du.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "timetostr", "lineno_map": [[688, 688], [691, 691]], "source_code_file": "src/du.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "bad_cast", "lineno_map": [[695, 695], [696, 696], [697, 697]], "source_code_file": "src/du.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "duinfo_init", "lineno_map": [[93, 93], [94, 94], [95, 95], [96, 96]], "source_code_file": "src/du.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "duinfo_set", "lineno_map": [[103, 103], [104, 104], [105, 105]], "source_code_file": "src/du.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "duinfo_add", "lineno_map": [[112, 112], [113, 113], [114, 114], [115, 115], [116, 116]], "source_code_file": "src/du.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "usage", "lineno_map": [[280, 280], [281, 281], [284, 284], [288, 288], [292, 292], [294, 294], [303, 303], [316, 316], [325, 325], [331, 331], [337, 337], [348, 348], [353, 353], [354, 354], [355, 355], [356, 356], [357, 357], [359, 359]], "source_code_file": "src/du.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "hash_ins", "lineno_map": [[368, 368], [369, 369], [370, 370]], "source_code_file": "src/du.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "show_date", "lineno_map": [[382, 382], [383, 383], [387, 387], [388, 388], [389, 389]], "source_code_file": "src/du.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "print_only_size", "lineno_map": [[399, 399]], "source_code_file": "src/du.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "print_size", "lineno_map": [[411, 411], [415, 415], [417, 417], [418, 418], [420, 420], [421, 421]], "source_code_file": "src/du.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "fill_mount_table", "lineno_map": [[429, 429], [430, 430], [433, 433], [436, 436], [437, 437], [445, 445], [446, 446], [447, 447]], "source_code_file": "src/du.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "mount_point_in_fts_cycle", "lineno_map": [[457, 457], [459, 459], [462, 462], [463, 463], [464, 464], [466, 466], [469, 469], [471, 471], [476, 476]], "source_code_file": "src/du.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "process_file", "lineno_map": [[490, 490], [505, 505], [506, 506], [507, 507], [509, 509], [512, 512], [513, 513], [515, 515], [517, 517], [518, 518], [522, 522], [524, 524], [525, 525], [526, 526], [527, 527], [530, 530], [532, 532], [541, 541], [542, 542], [543, 543], [544, 544], [547, 547], [548, 548], [549, 549], [550, 550], [555, 555], [557, 557], [558, 558], [559, 559], [565, 565], [572, 572], [573, 573], [578, 578], [579, 579], [581, 581], [588, 588], [590, 590], [591, 591], [592, 592], [593, 593], [596, 596], [597, 597], [599, 599], [601, 601], [602, 602], [606, 606], [610, 610], [617, 617], [619, 619], [620, 620], [623, 623], [625, 625], [626, 626], [637, 637], [638, 638], [639, 639], [640, 640], [641, 641], [642, 642], [646, 646], [650, 650], [651, 651], [655, 655], [657, 657], [658, 658], [659, 659], [662, 662], [663, 663], [664, 664], [666, 666]], "source_code_file": "src/du.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "du_files", "lineno_map": [[680, 680], [682, 682], [684, 684], [690, 690], [691, 691], [693, 693], [695, 695], [696, 696], [697, 697], [703, 703], [708, 708], [711, 711], [713, 713], [714, 714]], "source_code_file": "src/du.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "main", "lineno_map": [[725, 725], [726, 726], [727, 727], [730, 730], [734, 734], [737, 737], [739, 739], [740, 740], [743, 743], [744, 744], [745, 745], [746, 746], [748, 748], [750, 750], [752, 752], [757, 757], [758, 758], [760, 760], [763, 763], [772, 772], [776, 776], [780, 780], [784, 784], [785, 785], [786, 786], [790, 790], [794, 794], [795, 795], [799, 799], [800, 800], [804, 804], [805, 805], [811, 811], [814, 814], [815, 815], [819, 819], [821, 821], [827, 827], [828, 828], [832, 832], [836, 836], [842, 842], [843, 843], [844, 844], [845, 845], [848, 848], [854, 854], [859, 859], [861, 861], [862, 862], [868, 868], [872, 872], [876, 876], [880, 880], [884, 884], [887, 887], [888, 888], [893, 893], [897, 897], [901, 901], [905, 905], [906, 906], [908, 908], [910, 910], [914, 914], [917, 917], [919, 919], [922, 922], [926, 926], [927, 927], [929, 929], [931, 931], [932, 932], [935, 935], [937, 937], [938, 938], [941, 941], [943, 943], [944, 944], [945, 945], [948, 948], [949, 949], [951, 951], [953, 953], [955, 955], [958, 958], [962, 962], [964, 964], [966, 966], [969, 969], [970, 970], [971, 971], [975, 975], [976, 976], [977, 977], [984, 984], [985, 985], [989, 989], [990, 990], [993, 993], [997, 997], [1001, 1001], [1005, 1005], [1012, 1012], [1016, 1016], [1018, 1018], [1019, 1019], [1021, 1021], [1024, 1024], [1025, 1025], [1028, 1028], [1032, 1032], [1036, 1036], [1037, 1037], [1042, 1042], [1045, 1045], [1046, 1046], [1049, 1049], [1050, 1050], [1051, 1051], [1055, 1055], [1056, 1056], [1058, 1058], [1063, 1063], [1065, 1065], [1066, 1066], [1068, 1068], [1073, 1073], [1075, 1075], [1078, 1078], [1080, 1080], [1083, 1083], [1087, 1087], [1090, 1090], [1097, 1097], [1103, 1103], [1104, 1104], [1110, 1110], [1111, 1111], [1114, 1114], [1117, 1117], [1118, 1118], [1121, 1121], [1122, 1122], [1127, 1127], [1128, 1128], [1129, 1129], [1130, 1130], [1132, 1132], [1133, 1133], [1135, 1135], [1136, 1136]], "source_code_file": "src/du.c", "binary_file1": "du.json", "binary_file2": "du.json"}
{"fname": "find_mount_point", "lineno_map": [[36, 36], [38, 38], [40, 40], [44, 44], [47, 47], [48, 48], [50, 50], [57, 57], [59, 59], [60, 60], [62, 62], [64, 64], [68, 68], [70, 70], [82, 82], [84, 84], [87, 87], [90, 90], [92, 92], [95, 95], [99, 99], [104, 104], [105, 105], [106, 106], [108, 108], [109, 109]], "source_code_file": "src/find-mount-point.c", "binary_file1": "df.json", "binary_file2": "df.json"}
{"fname": "usage", "lineno_map": [[55, 55], [56, 56], [59, 59], [63, 63], [67, 67], [69, 69], [74, 74], [75, 75], [76, 76], [78, 78]], "source_code_file": "src/sum.c", "binary_file1": "sum.json", "binary_file2": "sum.json"}
{"fname": "bsd_sum_file", "lineno_map": [[91, 91], [92, 92], [95, 95], [97, 97], [99, 99], [100, 100], [101, 101], [105, 105], [106, 106], [108, 108], [113, 113], [115, 115], [117, 117], [118, 118], [119, 119], [120, 120], [123, 123], [125, 125], [126, 126], [127, 127], [131, 131], [133, 133], [137, 137], [139, 139], [140, 140], [141, 141]], "source_code_file": "src/sum.c", "binary_file1": "sum.json", "binary_file2": "sum.json"}
{"fname": "sysv_sum_file", "lineno_map": [[156, 156], [162, 162], [164, 164], [166, 166], [168, 168], [169, 169], [170, 170], [174, 174], [175, 175], [177, 177], [184, 184], [186, 186], [189, 189], [191, 191], [192, 192], [193, 193], [197, 197], [198, 198], [199, 199], [202, 202], [204, 204], [208, 208], [209, 209], [211, 211], [213, 213], [214, 214], [215, 215]], "source_code_file": "src/sum.c", "binary_file1": "sum.json", "binary_file2": "sum.json"}
{"fname": "main", "lineno_map": [[226, 226], [229, 229], [230, 230], [231, 231], [232, 232], [234, 234], [238, 238], [240, 240], [242, 242], [244, 244], [247, 247], [251, 251], [254, 254], [256, 256], [259, 259], [263, 263], [264, 264], [265, 265], [267, 267], [268, 268], [270, 270], [271, 271]], "source_code_file": "src/sum.c", "binary_file1": "sum.json", "binary_file2": "sum.json"}
{"fname": "usage", "lineno_map": [[38, 38], [43, 43], [47, 47], [48, 48], [49, 49], [50, 50], [51, 51]], "source_code_file": "src/true.c", "binary_file1": "true.json", "binary_file2": "true.json"}
{"fname": "main", "lineno_map": [[59, 59], [62, 62], [63, 63], [64, 64], [65, 65], [69, 69], [71, 71], [72, 72], [74, 74], [75, 75]], "source_code_file": "src/true.c", "binary_file1": "true.json", "binary_file2": "true.json"}
{"fname": "usage", "lineno_map": [[37, 37], [38, 38], [41, 41], [45, 45], [50, 50], [58, 58], [59, 59], [60, 60], [65, 65], [77, 77], [81, 81], [82, 82], [84, 84]], "source_code_file": "src/echo.c", "binary_file1": "echo.json", "binary_file2": "echo.json"}
{"fname": "hextobin", "lineno_map": [[91, 91], [93, 93], [94, 94], [95, 95], [96, 96], [97, 97], [98, 98], [99, 99]], "source_code_file": "src/echo.c", "binary_file1": "echo.json", "binary_file2": "echo.json"}
{"fname": "main", "lineno_map": [[110, 110], [111, 111], [112, 112], [113, 113], [118, 118], [121, 121], [122, 122], [123, 123], [124, 124], [126, 126], [130, 130], [132, 132], [133, 133], [135, 135], [137, 137], [143, 143], [144, 144], [146, 146], [147, 147], [149, 149], [156, 156], [157, 157], [165, 165], [170, 170], [171, 171], [174, 174], [178, 178], [182, 182], [186, 186], [187, 187], [192, 192], [194, 194], [196, 196], [199, 199], [201, 201], [203, 203], [205, 205], [206, 206], [207, 207], [208, 208], [209, 209], [210, 210], [211, 211], [212, 212], [213, 213], [216, 216], [217, 217], [219, 219], [220, 220], [221, 221], [222, 222], [224, 224], [225, 225], [230, 230], [231, 231], [233, 233], [237, 237], [238, 238], [239, 239], [240, 240], [241, 241], [243, 243], [246, 246], [249, 249], [251, 251], [252, 252], [253, 253], [254, 254], [259, 259], [261, 261], [262, 262], [263, 263], [264, 264], [265, 265], [269, 269], [270, 270]], "source_code_file": "src/echo.c", "binary_file1": "echo.json", "binary_file2": "echo.json"}
{"fname": "usage", "lineno_map": [[84, 84], [85, 85], [88, 88], [93, 93], [95, 95], [98, 98], [99, 99], [100, 100], [103, 103]], "source_code_file": "src/tsort.c", "binary_file1": "tsort.json", "binary_file2": "tsort.json"}
{"fname": "new_item", "lineno_map": [[110, 110], [112, 112], [113, 113], [114, 114], [117, 117], [118, 118], [119, 119]], "source_code_file": "src/tsort.c", "binary_file1": "tsort.json", "binary_file2": "tsort.json"}
{"fname": "search_item", "lineno_map": [[138, 138], [142, 142], [146, 146], [147, 147], [152, 152], [153, 153], [157, 157], [158, 158], [160, 160], [162, 162], [165, 165], [168, 168], [169, 169], [171, 171], [174, 174], [175, 175], [177, 177], [178, 178], [182, 182], [183, 183], [186, 186], [188, 188], [189, 189], [191, 191], [192, 192], [196, 196], [197, 197], [202, 202], [204, 204], [208, 208], [211, 211], [212, 212], [214, 214], [215, 215], [219, 219], [220, 220], [222, 222], [227, 227], [229, 229], [230, 230], [231, 231], [232, 232], [233, 233], [237, 237], [238, 238], [239, 239], [240, 240], [241, 241], [244, 244], [245, 245], [246, 246], [247, 247], [248, 248], [249, 249], [250, 250], [254, 254], [255, 255], [257, 257], [263, 263], [265, 265], [266, 266], [269, 269]], "source_code_file": "src/tsort.c", "binary_file1": "tsort.json", "binary_file2": "tsort.json"}
{"fname": "record_relation", "lineno_map": [[282, 282], [284, 284], [285, 285], [286, 286], [287, 287], [288, 288]], "source_code_file": "src/tsort.c", "binary_file1": "tsort.json", "binary_file2": "tsort.json"}
{"fname": "count_items", "lineno_map": [[295, 295]], "source_code_file": "src/tsort.c", "binary_file1": "tsort.json", "binary_file2": "tsort.json"}
{"fname": "scan_zeros", "lineno_map": [[303, 303], [305, 305], [306, 306], [308, 308], [310, 310]], "source_code_file": "src/tsort.c", "binary_file1": "tsort.json", "binary_file2": "tsort.json"}
{"fname": "detect_loop", "lineno_map": [[337, 337], [342, 342], [344, 344], [347, 347], [349, 349], [351, 351], [353, 353], [356, 356], [358, 358], [360, 360], [363, 363], [366, 366], [367, 367], [373, 373], [374, 374], [377, 377], [379, 379], [381, 381], [382, 382], [391, 391], [392, 392], [397, 397]], "source_code_file": "src/tsort.c", "binary_file1": "tsort.json", "binary_file2": "tsort.json"}
{"fname": "recurse_tree", "lineno_map": [[411, 411], [415, 415], [416, 416], [418, 418], [420, 420], [421, 421]], "source_code_file": "src/tsort.c", "binary_file1": "tsort.json", "binary_file2": "tsort.json"}
{"fname": "walk_tree", "lineno_map": [[434, 434], [435, 435]], "source_code_file": "src/tsort.c", "binary_file1": "tsort.json", "binary_file2": "tsort.json"}
{"fname": "tsort", "lineno_map": [[443, 443], [445, 445], [446, 446], [448, 448], [451, 451], [453, 453], [454, 454], [456, 456], [458, 458], [463, 463], [464, 464], [467, 467], [469, 469], [470, 470], [473, 473], [474, 474], [477, 477], [480, 480], [481, 481], [485, 485], [487, 487], [490, 490], [492, 492], [494, 494], [497, 497], [503, 503], [504, 504], [507, 507], [509, 509], [510, 510], [512, 512], [513, 513], [516, 516], [520, 520], [524, 524], [527, 527], [528, 528], [532, 532], [533, 533], [539, 539], [540, 540]], "source_code_file": "src/tsort.c", "binary_file1": "tsort.json", "binary_file2": "tsort.json"}
{"fname": "main", "lineno_map": [[552, 552], [553, 553], [554, 554], [555, 555], [557, 557], [559, 559], [561, 561], [562, 562], [564, 564], [566, 566], [567, 567], [570, 570]], "source_code_file": "src/tsort.c", "binary_file1": "tsort.json", "binary_file2": "tsort.json"}
{"fname": "usage", "lineno_map": [[47, 47], [48, 48], [51, 51], [54, 54], [57, 57], [58, 58], [59, 59], [61, 61]], "source_code_file": "src/link.c", "binary_file1": "link.json", "binary_file2": "link.json"}
{"fname": "main", "lineno_map": [[68, 68], [69, 69], [70, 70], [71, 71], [73, 73], [75, 75], [77, 77], [78, 78], [80, 80], [82, 82], [83, 83], [85, 85], [86, 86], [89, 89], [91, 91], [92, 92], [95, 95], [96, 96]], "source_code_file": "src/link.c", "binary_file1": "link.json", "binary_file2": "link.json"}
{"fname": "to_uchar", "lineno_map": [[156, 156]], "source_code_file": "src/split.c", "binary_file1": "split.json", "binary_file2": "split.json"}
{"fname": "ptr_align", "lineno_map": [[499, 499], [500, 500], [501, 501], [502, 502], [503, 503]], "source_code_file": "src/split.c", "binary_file1": "split.json", "binary_file2": "split.json"}
{"fname": "emit_stdin_note", "lineno_map": [[579, 579], [583, 583]], "source_code_file": "src/split.c", "binary_file1": "split.json", "binary_file2": "split.json"}
{"fname": "emit_mandatory_arg_note", "lineno_map": [[590, 590]], "source_code_file": "src/split.c", "binary_file1": "split.json", "binary_file2": "split.json"}
{"fname": "emit_size_note", "lineno_map": [[594, 594], [595, 595]], "source_code_file": "src/split.c", "binary_file1": "split.json", "binary_file2": "split.json"}
{"fname": "emit_ancillary_info", "lineno_map": [[631, 631], [632, 632], [642, 642], [645, 645], [648, 648], [651, 651], [656, 656], [662, 662], [665, 665], [667, 667]], "source_code_file": "src/split.c", "binary_file1": "split.json", "binary_file2": "split.json"}
{"fname": "bad_cast", "lineno_map": [[696, 696], [697, 697]], "source_code_file": "src/split.c", "binary_file1": "split.json", "binary_file2": "split.json"}
{"fname": "usable_st_size", "lineno_map": [[703, 703], [704, 704], [705, 705]], "source_code_file": "src/split.c", "binary_file1": "split.json", "binary_file2": "split.json"}
{"fname": "io_blksize", "lineno_map": [[76, 76], [77, 77], [78, 78]], "source_code_file": "src/split.c", "binary_file1": "split.json", "binary_file2": "split.json"}
{"fname": "set_suffix_length", "lineno_map": [[167, 167], [172, 172], [173, 173], [176, 176], [177, 177], [179, 179], [180, 180], [183, 183], [185, 185], [191, 191], [192, 192], [196, 196], [197, 197], [198, 198], [199, 199], [200, 200], [201, 201], [204, 204], [206, 206], [208, 208], [212, 212], [216, 216]], "source_code_file": "src/split.c", "binary_file1": "split.json", "binary_file2": "split.json"}
{"fname": "usage", "lineno_map": [[222, 222], [223, 223], [226, 226], [230, 230], [235, 235], [236, 236], [238, 238], [256, 256], [260, 260], [261, 261], [262, 262], [263, 263], [272, 272], [274, 274]], "source_code_file": "src/split.c", "binary_file1": "split.json", "binary_file2": "split.json"}
{"fname": "input_file_size", "lineno_map": [[285, 285], [286, 286], [288, 288], [289, 289], [293, 293], [296, 296], [297, 297], [299, 299], [301, 301], [303, 303], [308, 308], [313, 313], [317, 317], [319, 319], [320, 320], [323, 323], [324, 324], [326, 326], [328, 328], [330, 330], [331, 331], [335, 335], [336, 336], [339, 339]], "source_code_file": "src/split.c", "binary_file1": "split.json", "binary_file2": "split.json"}
{"fname": "next_file_name", "lineno_map": [[358, 358], [363, 363], [365, 365], [369, 369], [370, 370], [371, 371], [380, 380], [381, 381], [384, 384], [385, 385], [386, 386], [388, 388], [389, 389], [393, 393], [394, 394], [397, 397], [398, 398], [399, 399], [400, 400], [401, 401], [403, 403], [404, 404], [406, 406], [408, 408], [411, 411], [412, 412], [415, 415], [416, 416], [417, 417], [438, 438], [439, 439], [441, 441], [442, 442], [444, 444], [445, 445], [447, 447], [448, 448], [450, 450]], "source_code_file": "src/split.c", "binary_file1": "split.json", "binary_file2": "split.json"}
{"fname": "create", "lineno_map": [[459, 459], [461, 461], [462, 462], [464, 464], [465, 465], [468, 468], [469, 469], [470, 470], [471, 471], [473, 473], [474, 474], [482, 482], [483, 483], [484, 484], [485, 485], [486, 486], [488, 488], [489, 489], [490, 490], [491, 491], [492, 492], [493, 493], [503, 503], [504, 504], [505, 505], [506, 506], [507, 507], [508, 508], [510, 510], [511, 511], [512, 512], [513, 513], [515, 515], [516, 516], [518, 518], [521, 521], [522, 522], [523, 523], [524, 524], [525, 525], [526, 526], [527, 527], [529, 529]], "source_code_file": "src/split.c", "binary_file1": "split.json", "binary_file2": "split.json"}
{"fname": "closeout", "lineno_map": [[540, 540], [541, 541], [542, 542], [544, 544], [545, 545], [547, 547], [549, 549], [551, 551], [556, 556], [558, 558], [559, 559], [560, 560], [561, 561], [563, 563], [564, 564], [567, 567], [568, 568], [569, 569], [570, 570], [574, 574], [576, 576], [577, 577], [578, 578], [584, 584]], "source_code_file": "src/split.c", "binary_file1": "split.json", "binary_file2": "split.json"}
{"fname": "cwrite", "lineno_map": [[598, 598], [600, 600], [602, 602], [603, 603], [604, 604], [605, 605], [606, 606], [609, 609], [613, 613], [614, 614]], "source_code_file": "src/split.c", "binary_file1": "split.json", "binary_file2": "split.json"}
{"fname": "bytes_split", "lineno_map": [[628, 628], [629, 629], [630, 630], [631, 631], [636, 636], [638, 638], [639, 639], [640, 640], [644, 644], [645, 645], [647, 647], [648, 648], [651, 651], [652, 652], [653, 653], [654, 654], [656, 656], [657, 657], [659, 659], [660, 660], [661, 661], [662, 662], [663, 663], [666, 666], [667, 667], [670, 670], [671, 671], [672, 672], [674, 674], [676, 676], [677, 677], [678, 678], [679, 679], [680, 680], [685, 685], [688, 688], [693, 693], [694, 694]], "source_code_file": "src/split.c", "binary_file1": "split.json", "binary_file2": "split.json"}
{"fname": "lines_split", "lineno_map": [[705, 705], [706, 706], [710, 710], [711, 711], [712, 712], [713, 713], [714, 714], [715, 715], [718, 718], [719, 719], [721, 721], [723, 723], [724, 724], [725, 725], [730, 730], [731, 731], [733, 733], [734, 734], [735, 735], [736, 736], [740, 740]], "source_code_file": "src/split.c", "binary_file1": "split.json", "binary_file2": "split.json"}
{"fname": "line_bytes_split", "lineno_map": [[751, 751], [752, 752], [753, 753], [754, 754], [755, 755], [759, 759], [760, 760], [761, 761], [762, 762], [763, 763], [764, 764], [766, 766], [767, 767], [772, 772], [775, 775], [776, 776], [777, 777], [780, 780], [783, 783], [785, 785], [786, 786], [787, 787], [788, 788], [789, 789], [790, 790], [794, 794], [796, 796], [797, 797], [798, 798], [799, 799], [800, 800], [801, 801], [802, 802], [803, 803], [807, 807], [809, 809], [810, 810], [811, 811], [812, 812], [813, 813], [814, 814], [815, 815], [819, 819], [821, 821], [822, 822], [824, 824], [825, 825], [827, 827], [828, 828], [830, 830], [831, 831], [832, 832], [833, 833], [837, 837], [839, 839], [840, 840], [844, 844], [847, 847], [848, 848], [850, 850]], "source_code_file": "src/split.c", "binary_file1": "split.json", "binary_file2": "split.json"}
{"fname": "lines_chunk_split", "lineno_map": [[865, 865], [867, 867], [868, 868], [869, 869], [870, 870], [871, 871], [872, 872], [874, 874], [877, 877], [878, 878], [880, 880], [881, 881], [885, 885], [886, 886], [887, 887], [889, 889], [890, 890], [891, 891], [894, 894], [896, 896], [898, 898], [900, 900], [901, 901], [905, 905], [906, 906], [907, 907], [909, 909], [910, 910], [911, 911], [912, 912], [913, 913], [915, 915], [918, 918], [921, 921], [922, 922], [923, 923], [924, 924], [926, 926], [927, 927], [929, 929], [934, 934], [935, 935], [937, 937], [938, 938], [939, 939], [940, 940], [941, 941], [942, 942], [946, 946], [948, 948], [951, 951], [954, 954], [955, 955], [957, 957], [958, 958], [960, 960], [961, 961], [963, 963], [964, 964], [967, 967], [972, 972], [973, 973], [978, 978], [979, 979]], "source_code_file": "src/split.c", "binary_file1": "split.json", "binary_file2": "split.json"}
{"fname": "bytes_chunk_extract", "lineno_map": [[991, 991], [993, 993], [994, 994], [996, 996], [998, 998], [999, 999], [1003, 1003], [1004, 1004], [1005, 1005], [1008, 1008], [1011, 1011], [1013, 1013], [1014, 1014], [1018, 1018], [1019, 1019], [1020, 1020], [1022, 1022], [1023, 1023], [1024, 1024], [1025, 1025], [1026, 1026], [1027, 1027], [1028, 1028]], "source_code_file": "src/split.c", "binary_file1": "split.json", "binary_file2": "split.json"}
{"fname": "ofile_open", "lineno_map": [[1054, 1054], [1056, 1056], [1059, 1059], [1066, 1066], [1067, 1067], [1084, 1084], [1088, 1088], [1091, 1091], [1092, 1092], [1094, 1094], [1097, 1097], [1099, 1099], [1101, 1101], [1102, 1102], [1106, 1106], [1107, 1107], [1108, 1108], [1109, 1109], [1112, 1112], [1113, 1113], [1114, 1114], [1115, 1115], [1116, 1116]], "source_code_file": "src/split.c", "binary_file1": "split.json", "binary_file2": "split.json"}
{"fname": "lines_rr", "lineno_map": [[1130, 1130], [1131, 1131], [1137, 1137], [1138, 1138], [1143, 1143], [1146, 1146], [1148, 1148], [1149, 1149], [1150, 1150], [1151, 1151], [1152, 1152], [1154, 1154], [1155, 1155], [1160, 1160], [1161, 1161], [1162, 1162], [1163, 1163], [1164, 1164], [1165, 1165], [1166, 1166], [1168, 1168], [1171, 1171], [1174, 1174], [1175, 1175], [1177, 1177], [1178, 1178], [1181, 1181], [1182, 1182], [1184, 1184], [1186, 1186], [1188, 1188], [1189, 1189], [1191, 1191], [1193, 1193], [1194, 1194], [1196, 1196], [1197, 1197], [1202, 1202], [1203, 1203], [1207, 1207], [1208, 1208], [1210, 1210], [1214, 1214], [1215, 1215], [1217, 1217], [1221, 1221], [1222, 1222], [1224, 1224], [1226, 1226], [1228, 1228], [1231, 1231], [1232, 1232], [1234, 1234], [1236, 1236], [1238, 1238], [1240, 1240], [1241, 1241], [1245, 1245], [1254, 1254], [1256, 1256], [1257, 1257], [1259, 1259], [1260, 1260], [1261, 1261], [1262, 1262], [1263, 1263], [1264, 1264]], "source_code_file": "src/split.c", "binary_file1": "split.json", "binary_file2": "split.json"}
{"fname": "parse_chunk", "lineno_map": [[1284, 1284], [1285, 1285], [1286, 1286], [1288, 1288], [1289, 1289], [1290, 1290]], "source_code_file": "src/split.c", "binary_file1": "split.json", "binary_file2": "split.json"}
{"fname": "main", "lineno_map": [[1298, 1298], [1299, 1299], [1300, 1300], [1301, 1301], [1302, 1302], [1306, 1306], [1307, 1307], [1310, 1310], [1311, 1311], [1312, 1312], [1313, 1313], [1315, 1315], [1319, 1319], [1320, 1320], [1325, 1325], [1328, 1328], [1330, 1330], [1333, 1333], [1336, 1336], [1337, 1337], [1341, 1341], [1343, 1343], [1344, 1344], [1346, 1346], [1348, 1348], [1352, 1352], [1353, 1353], [1354, 1354], [1358, 1358], [1359, 1359], [1363, 1363], [1364, 1364], [1365, 1365], [1366, 1366], [1367, 1367], [1371, 1371], [1372, 1372], [1373, 1373], [1374, 1374], [1375, 1375], [1379, 1379], [1380, 1380], [1382, 1382], [1383, 1383], [1384, 1384], [1386, 1386], [1387, 1387], [1389, 1389], [1391, 1391], [1392, 1392], [1395, 1395], [1396, 1396], [1397, 1397], [1399, 1399], [1400, 1400], [1404, 1404], [1409, 1409], [1410, 1410], [1411, 1411], [1412, 1412], [1414, 1414], [1415, 1415], [1422, 1422], [1427, 1427], [1429, 1429], [1433, 1433], [1447, 1447], [1449, 1449], [1450, 1450], [1452, 1452], [1453, 1453], [1454, 1454], [1455, 1455], [1456, 1456], [1457, 1457], [1460, 1460], [1468, 1468], [1469, 1469], [1471, 1471], [1472, 1472], [1474, 1474], [1476, 1476], [1481, 1481], [1486, 1486], [1487, 1487], [1488, 1488], [1494, 1494], [1498, 1498], [1502, 1502], [1503, 1503], [1507, 1507], [1510, 1510], [1512, 1512], [1515, 1515], [1519, 1519], [1521, 1521], [1522, 1522], [1526, 1526], [1528, 1528], [1529, 1529], [1532, 1532], [1534, 1534], [1535, 1535], [1538, 1538], [1539, 1539], [1541, 1541], [1545, 1545], [1546, 1546], [1548, 1548], [1549, 1549], [1551, 1551], [1553, 1553], [1554, 1554], [1559, 1559], [1561, 1561], [1563, 1563], [1567, 1567], [1568, 1568], [1569, 1569], [1573, 1573], [1577, 1577], [1578, 1578], [1580, 1580], [1581, 1581], [1582, 1582], [1584, 1584], [1585, 1585], [1586, 1586], [1588, 1588], [1590, 1590], [1592, 1592], [1593, 1593], [1595, 1595], [1597, 1597], [1600, 1600], [1606, 1606], [1611, 1611], [1614, 1614], [1615, 1615], [1616, 1616], [1617, 1617], [1618, 1618], [1621, 1621], [1625, 1625], [1629, 1629], [1633, 1633], [1637, 1637], [1638, 1638], [1641, 1641], [1646, 1646], [1653, 1653], [1657, 1657], [1662, 1662], [1663, 1663], [1664, 1664]], "source_code_file": "src/split.c", "binary_file1": "split.json", "binary_file2": "split.json"}
{"fname": "to_uchar", "lineno_map": [[156, 156]], "source_code_file": "src/printf.c", "binary_file1": "printf.json", "binary_file2": "printf.json"}
{"fname": "emit_ancillary_info", "lineno_map": [[631, 631], [632, 632], [642, 642], [643, 643], [646, 646], [649, 649], [651, 651], [655, 655], [656, 656], [662, 662], [665, 665], [667, 667], [669, 669]], "source_code_file": "src/printf.c", "binary_file1": "printf.json", "binary_file2": "printf.json"}
{"fname": "usage", "lineno_map": [[89, 89], [90, 90], [93, 93], [98, 98], [102, 102], [103, 103], [104, 104], [110, 110], [122, 122], [128, 128], [138, 138], [139, 139], [141, 141]], "source_code_file": "src/printf.c", "binary_file1": "printf.json", "binary_file2": "printf.json"}
{"fname": "verify_numeric", "lineno_map": [[147, 147], [149, 149], [150, 150], [152, 152], [154, 154], [155, 155], [157, 157], [158, 158]], "source_code_file": "src/printf.c", "binary_file1": "printf.json", "binary_file2": "printf.json"}
{"fname": "vstrtoimax", "lineno_map": [[189, 189]], "source_code_file": "src/printf.c", "binary_file1": "printf.json", "binary_file2": "printf.json"}
{"fname": "vstrtoumax", "lineno_map": [[190, 190]], "source_code_file": "src/printf.c", "binary_file1": "printf.json", "binary_file2": "printf.json"}
{"fname": "vstrtold", "lineno_map": [[191, 191]], "source_code_file": "src/printf.c", "binary_file1": "printf.json", "binary_file2": "printf.json"}
{"fname": "print_esc_char", "lineno_map": [[198, 198], [201, 201], [204, 204], [207, 207], [210, 210], [213, 213], [216, 216], [219, 219], [222, 222], [225, 225], [228, 228]], "source_code_file": "src/printf.c", "binary_file1": "printf.json", "binary_file2": "printf.json"}
{"fname": "print_esc", "lineno_map": [[242, 242], [243, 243], [246, 246], [249, 249], [250, 250], [251, 251], [252, 252], [253, 253], [254, 254], [255, 255], [257, 257], [262, 262], [263, 263], [264, 264], [265, 265], [266, 266], [268, 268], [269, 269], [270, 270], [272, 272], [275, 275], [276, 276], [278, 278], [280, 280], [281, 281], [282, 282], [290, 290], [291, 291], [292, 292], [293, 293], [296, 296], [300, 300], [301, 301], [303, 303], [304, 304]], "source_code_file": "src/printf.c", "binary_file1": "printf.json", "binary_file2": "printf.json"}
{"fname": "print_esc_string", "lineno_map": [[315, 315], [316, 316], [317, 317], [319, 319]], "source_code_file": "src/printf.c", "binary_file1": "printf.json", "binary_file2": "printf.json"}
{"fname": "print_direc", "lineno_map": [[346, 346], [349, 349], [350, 350], [355, 355], [356, 356], [360, 360], [361, 361], [365, 365], [366, 366], [367, 367], [368, 368], [369, 369], [372, 372], [377, 377], [378, 378], [380, 380], [381, 381], [383, 383], [387, 387], [388, 388], [390, 390], [400, 400], [401, 401], [403, 403], [404, 404], [406, 406], [410, 410], [411, 411], [413, 413], [427, 427], [428, 428], [430, 430], [431, 431], [433, 433], [437, 437], [438, 438], [440, 440], [446, 446], [447, 447], [449, 449], [453, 453], [455, 455], [456, 456], [458, 458], [462, 462], [463, 463], [465, 465], [470, 470]], "source_code_file": "src/printf.c", "binary_file1": "printf.json", "binary_file2": "printf.json"}
{"fname": "print_formatted", "lineno_map": [[480, 480], [485, 485], [487, 487], [490, 490], [492, 492], [495, 495], [496, 496], [497, 497], [498, 498], [500, 500], [503, 503], [507, 507], [509, 509], [510, 510], [511, 511], [516, 516], [518, 518], [520, 520], [522, 522], [523, 523], [528, 528], [529, 529], [530, 530], [531, 531], [533, 533], [534, 534], [540, 540], [541, 541], [546, 546], [549, 549], [554, 554], [556, 556], [558, 558], [559, 559], [560, 560], [562, 562], [563, 563], [564, 564], [566, 566], [568, 568], [569, 569], [572, 572], [573, 573], [576, 576], [578, 578], [579, 579], [581, 581], [583, 583], [584, 584], [585, 585], [586, 586], [588, 588], [589, 589], [590, 590], [592, 592], [593, 593], [598, 598], [600, 600], [601, 601], [604, 604], [605, 605], [606, 606], [609, 609], [610, 610], [613, 613], [615, 615], [616, 616], [620, 620], [621, 621], [622, 622], [625, 625], [626, 626], [627, 627], [632, 632], [635, 635], [639, 639], [643, 643]], "source_code_file": "src/printf.c", "binary_file1": "printf.json", "binary_file2": "printf.json"}
{"fname": "main", "lineno_map": [[657, 657], [658, 658], [659, 659], [660, 660], [662, 662], [664, 664], [666, 666], [670, 670], [672, 672], [673, 673], [675, 675], [677, 677], [685, 685], [687, 687], [688, 688], [691, 691], [693, 693], [694, 694], [697, 697], [698, 698], [699, 699], [703, 703], [704, 704], [705, 705], [707, 707], [709, 709], [710, 710], [711, 711]], "source_code_file": "src/printf.c", "binary_file1": "printf.json", "binary_file2": "printf.json"}
{"fname": "rm_option_init", "lineno_map": [[77, 77], [78, 78], [79, 79], [80, 80], [84, 84], [85, 85], [87, 87], [93, 93], [97, 97], [98, 98], [99, 99], [103, 103]], "source_code_file": "src/mv.c", "binary_file1": "mv.json", "binary_file2": "mv.json"}
{"fname": "cp_option_init", "lineno_map": [[109, 109], [111, 111], [112, 112], [113, 113], [114, 114], [115, 115], [116, 116], [117, 117], [118, 118], [119, 119], [120, 120], [121, 121], [122, 122], [123, 123], [124, 124], [125, 125], [126, 126], [127, 127], [128, 128], [129, 129], [130, 130], [131, 131], [132, 132], [133, 133], [134, 134], [135, 135], [136, 136], [137, 137], [138, 138], [139, 139], [140, 140], [142, 142], [143, 143], [144, 144], [145, 145], [146, 146]], "source_code_file": "src/mv.c", "binary_file1": "mv.json", "binary_file2": "mv.json"}
{"fname": "target_directory_operand", "lineno_map": [[157, 157], [158, 158], [159, 159], [160, 160]], "source_code_file": "src/mv.c", "binary_file1": "mv.json", "binary_file2": "mv.json"}
{"fname": "do_move", "lineno_map": [[173, 173], [175, 175], [178, 178], [191, 191], [192, 192], [194, 194], [198, 198], [224, 224], [227, 227], [233, 233], [234, 234], [235, 235], [236, 236], [238, 238], [239, 239], [240, 240], [241, 241]], "source_code_file": "src/mv.c", "binary_file1": "mv.json", "binary_file2": "mv.json"}
{"fname": "movefile", "lineno_map": [[265, 265], [266, 266], [268, 268], [271, 271], [272, 272], [273, 273], [274, 274], [275, 275], [279, 279]], "source_code_file": "src/mv.c", "binary_file1": "mv.json", "binary_file2": "mv.json"}
{"fname": "usage", "lineno_map": [[288, 288], [289, 289], [292, 292], [298, 298], [302, 302], [304, 304], [313, 313], [318, 318], [328, 328], [329, 329], [330, 330], [331, 331], [333, 333]], "source_code_file": "src/mv.c", "binary_file1": "mv.json", "binary_file2": "mv.json"}
{"fname": "main", "lineno_map": [[341, 341], [342, 342], [343, 343], [345, 345], [346, 346], [349, 349], [352, 352], [353, 353], [354, 354], [355, 355], [357, 357], [359, 359], [362, 362], [364, 364], [367, 367], [370, 370], [371, 371], [372, 372], [375, 375], [378, 378], [381, 381], [384, 384], [387, 387], [388, 388], [392, 392], [393, 393], [395, 395], [396, 396], [399, 399], [402, 402], [405, 405], [408, 408], [411, 411], [412, 412], [417, 417], [419, 419], [420, 420], [423, 423], [424, 424], [426, 426], [430, 430], [431, 431], [433, 433], [435, 435], [436, 436], [438, 438], [440, 440], [443, 443], [445, 445], [446, 446], [449, 449], [451, 451], [452, 452], [455, 455], [457, 457], [458, 458], [459, 459], [461, 461], [462, 462], [464, 464], [465, 465], [467, 467], [468, 468], [472, 472], [473, 473], [475, 475], [477, 477], [478, 478], [479, 479], [482, 482], [483, 483], [486, 486], [488, 488], [490, 490], [495, 495], [496, 496], [498, 498], [499, 499], [501, 501], [502, 502], [507, 507], [508, 508]], "source_code_file": "src/mv.c", "binary_file1": "mv.json", "binary_file2": "mv.json"}
{"fname": "usage", "lineno_map": [[61, 61], [62, 62], [65, 65], [70, 70], [71, 71], [73, 73], [80, 80], [81, 81], [82, 82], [89, 89], [92, 92]], "source_code_file": "src/base64.c", "binary_file1": "base32.json", "binary_file2": "base32.json"}
{"fname": "wrap_write", "lineno_map": [[135, 135], [138, 138], [139, 139], [142, 142], [144, 144], [145, 145], [146, 146], [148, 148], [150, 150], [151, 151], [152, 152], [156, 156], [157, 157], [158, 158], [159, 159]], "source_code_file": "src/base64.c", "binary_file1": "base32.json", "binary_file2": "base32.json"}
{"fname": "do_encode", "lineno_map": [[167, 167], [176, 176], [179, 179], [180, 180], [182, 182], [184, 184], [188, 188], [190, 190], [194, 194], [197, 197], [198, 198], [200, 200], [201, 201]], "source_code_file": "src/base64.c", "binary_file1": "base32.json", "binary_file2": "base32.json"}
{"fname": "do_decode", "lineno_map": [[212, 212], [220, 220], [223, 223], [225, 225], [227, 227], [229, 229], [230, 230], [232, 232], [236, 236], [238, 238], [239, 239], [241, 241], [247, 247], [249, 249], [251, 251], [252, 252], [254, 254], [255, 255], [257, 257], [258, 258], [261, 261]], "source_code_file": "src/base64.c", "binary_file1": "base32.json", "binary_file2": "base32.json"}
{"fname": "main", "lineno_map": [[272, 272], [274, 274], [276, 276], [279, 279], [280, 280], [281, 281], [282, 282], [284, 284], [286, 286], [287, 287], [290, 290], [294, 294], [295, 295], [299, 299], [302, 302], [304, 304], [307, 307], [311, 311], [313, 313], [314, 314], [317, 317], [318, 318], [320, 320], [322, 322], [324, 324], [325, 325], [329, 329], [330, 330], [331, 331], [334, 334], [336, 336], [337, 337], [339, 339], [341, 341], [343, 343], [344, 344], [346, 346]], "source_code_file": "src/base64.c", "binary_file1": "base32.json", "binary_file2": "base32.json"}
{"fname": "blake2b_stream", "lineno_map": [[32, 32], [36, 36], [38, 38], [40, 40], [44, 44], [48, 48], [49, 49], [51, 51], [54, 54], [56, 56], [62, 62], [66, 66], [71, 71], [73, 73], [74, 74], [76, 76]], "source_code_file": "src/blake2/b2sum.c", "binary_file1": "b2sum.json", "binary_file2": "b2sum.json"}
{"fname": "store32", "lineno_map": [[92, 92], [96, 96], [97, 97], [98, 98], [100, 100], [102, 102]], "source_code_file": "src/blake2/blake2b-ref.c", "binary_file1": "b2sum.json", "binary_file2": "b2sum.json"}
{"fname": "secure_zero_memory", "lineno_map": [[155, 155], [157, 157], [158, 158]], "source_code_file": "src/blake2/blake2b-ref.c", "binary_file1": "b2sum.json", "binary_file2": "b2sum.json"}
{"fname": "blake2b_set_lastnode", "lineno_map": [[50, 50]], "source_code_file": "src/blake2/blake2b-ref.c", "binary_file1": "b2sum.json", "binary_file2": "b2sum.json"}
{"fname": "blake2b_set_lastblock", "lineno_map": [[61, 61], [63, 63]], "source_code_file": "src/blake2/blake2b-ref.c", "binary_file1": "b2sum.json", "binary_file2": "b2sum.json"}
{"fname": "blake2b_increment_counter", "lineno_map": [[68, 68], [69, 69]], "source_code_file": "src/blake2/blake2b-ref.c", "binary_file1": "b2sum.json", "binary_file2": "b2sum.json"}
{"fname": "blake2b_init0", "lineno_map": [[75, 75], [77, 77]], "source_code_file": "src/blake2/blake2b-ref.c", "binary_file1": "b2sum.json", "binary_file2": "b2sum.json"}
{"fname": "blake2b_init_param", "lineno_map": [[83, 83], [86, 86], [89, 89], [90, 90], [92, 92]], "source_code_file": "src/blake2/blake2b-ref.c", "binary_file1": "b2sum.json", "binary_file2": "b2sum.json"}
{"fname": "blake2b_init", "lineno_map": [[102, 102], [104, 104], [105, 105], [106, 106], [107, 107], [108, 108], [109, 109], [110, 110], [111, 111], [112, 112], [113, 113], [114, 114], [115, 115]], "source_code_file": "src/blake2/blake2b-ref.c", "binary_file1": "b2sum.json", "binary_file2": "b2sum.json"}
{"fname": "blake2b_init_key", "lineno_map": [[124, 124], [126, 126], [128, 128], [129, 129], [130, 130], [131, 131], [132, 132], [133, 133], [134, 134], [135, 135], [136, 136], [137, 137], [138, 138], [139, 139], [141, 141], [145, 145], [146, 146], [147, 147], [148, 148]], "source_code_file": "src/blake2/blake2b-ref.c", "binary_file1": "b2sum.json", "binary_file2": "b2sum.json"}
{"fname": "blake2b_compress", "lineno_map": [[183, 183], [184, 184], [187, 187], [188, 188], [191, 191], [192, 192], [193, 193], [194, 194], [195, 195], [196, 196], [197, 197], [198, 198], [200, 200], [201, 201], [202, 202], [203, 203], [204, 204], [205, 205], [206, 206], [207, 207], [208, 208], [209, 209], [210, 210], [211, 211], [213, 213], [214, 214]], "source_code_file": "src/blake2/blake2b-ref.c", "binary_file1": "b2sum.json", "binary_file2": "b2sum.json"}
{"fname": "blake2b_update", "lineno_map": [[223, 223], [224, 224], [226, 226], [227, 227], [228, 228], [230, 230], [231, 231], [232, 232], [233, 233], [234, 234], [235, 235], [236, 236], [237, 237], [238, 238], [239, 239], [242, 242], [243, 243]], "source_code_file": "src/blake2/blake2b-ref.c", "binary_file1": "b2sum.json", "binary_file2": "b2sum.json"}
{"fname": "blake2b_final", "lineno_map": [[250, 250], [253, 253], [256, 256], [259, 259], [260, 260], [261, 261], [262, 262], [264, 264], [265, 265], [267, 267], [268, 268]], "source_code_file": "src/blake2/blake2b-ref.c", "binary_file1": "b2sum.json", "binary_file2": "b2sum.json"}
{"fname": "blake2b", "lineno_map": [[278, 278], [280, 280], [282, 282], [284, 284], [286, 286], [288, 288], [290, 290], [294, 294], [297, 297], [298, 298]], "source_code_file": "src/blake2/blake2b-ref.c", "binary_file1": "b2sum.json", "binary_file2": "b2sum.json"}
{"fname": "blake2", "lineno_map": [[302, 302]], "source_code_file": "src/blake2/blake2b-ref.c", "binary_file1": "b2sum.json", "binary_file2": "b2sum.json"}
