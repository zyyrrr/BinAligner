{"fname": "ts_difference", "lineno_map": [[154, 154], [155, 155]], "source_code_file": "find/pred.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "compare_ts", "lineno_map": [[164, 164], [165, 165], [171, 171]], "source_code_file": "find/pred.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "pred_timewindow", "lineno_map": [[195, 195], [218, 218], [222, 222]], "source_code_file": "find/pred.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "pred_and", "lineno_map": [[237, 237], [238, 238]], "source_code_file": "find/pred.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "pred_anewer", "lineno_map": [[250, 250]], "source_code_file": "find/pred.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "pred_cnewer", "lineno_map": [[283, 283]], "source_code_file": "find/pred.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "pred_comma", "lineno_map": [[290, 290], [292, 292]], "source_code_file": "find/pred.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "pred_delete", "lineno_map": [[316, 316], [318, 318], [319, 319], [320, 320], [321, 321], [327, 327], [329, 329], [332, 332], [333, 333], [338, 338], [350, 350]], "source_code_file": "find/pred.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "pred_empty", "lineno_map": [[366, 366], [371, 371], [373, 373], [374, 374], [380, 380], [381, 381], [384, 384], [385, 385], [387, 387], [388, 388], [391, 391], [393, 393], [394, 394], [395, 395], [397, 397], [401, 401], [409, 409]], "source_code_file": "find/pred.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "pred_fls", "lineno_map": [[443, 443], [444, 444], [447, 447]], "source_code_file": "find/pred.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "pred_fprint", "lineno_map": [[457, 457], [458, 458]], "source_code_file": "find/pred.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "pred_fprint0", "lineno_map": [[468, 468], [472, 472], [473, 473]], "source_code_file": "find/pred.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "pred_fstype", "lineno_map": [[484, 484]], "source_code_file": "find/pred.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "pred_gid", "lineno_map": [[495, 495], [498, 498], [502, 502], [506, 506]], "source_code_file": "find/pred.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "pred_group", "lineno_map": [[518, 518]], "source_code_file": "find/pred.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "pred_name_common", "lineno_map": [[543, 543], [545, 545], [550, 550], [551, 551]], "source_code_file": "find/pred.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "pred_inum", "lineno_map": [[567, 567], [569, 569], [572, 572], [576, 576], [580, 580]], "source_code_file": "find/pred.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "pred_ipath", "lineno_map": [[592, 592]], "source_code_file": "find/pred.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "pred_links", "lineno_map": [[602, 602], [605, 605], [609, 609], [613, 613]], "source_code_file": "find/pred.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "match_lname", "lineno_map": [[629, 629], [631, 631], [633, 633], [634, 634], [636, 636], [638, 638], [642, 642], [643, 643], [645, 645]], "source_code_file": "find/pred.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "pred_newer", "lineno_map": [[689, 689]], "source_code_file": "find/pred.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "pred_newerXY", "lineno_map": [[697, 697], [699, 699], [701, 701], [704, 704], [708, 708], [709, 709], [713, 713], [714, 714], [715, 715], [718, 718], [725, 725], [726, 726], [730, 730], [731, 731], [735, 735]], "source_code_file": "find/pred.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "is_ok", "lineno_map": [[759, 759], [766, 766], [768, 768], [770, 770]], "source_code_file": "find/pred.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "pred_ok", "lineno_map": [[777, 777]], "source_code_file": "find/pred.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "pred_okdir", "lineno_map": [[786, 786]], "source_code_file": "find/pred.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "pred_or", "lineno_map": [[804, 804], [805, 805]], "source_code_file": "find/pred.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "pred_path", "lineno_map": [[817, 817]], "source_code_file": "find/pred.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "pred_perm", "lineno_map": [[825, 825], [826, 826], [828, 828], [845, 845], [856, 856]], "source_code_file": "find/pred.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "pred_print", "lineno_map": [[901, 901], [902, 902]], "source_code_file": "find/pred.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "pred_prune", "lineno_map": [[920, 920], [921, 921], [922, 922], [923, 923], [924, 924]], "source_code_file": "find/pred.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "pred_quit", "lineno_map": [[944, 944], [949, 949]], "source_code_file": "find/pred.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "pred_regex", "lineno_map": [[955, 955], [957, 957]], "source_code_file": "find/pred.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "pred_size", "lineno_map": [[969, 969], [970, 970], [971, 971], [974, 974], [978, 978], [982, 982]], "source_code_file": "find/pred.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "pred_samefile", "lineno_map": [[1011, 1011], [1013, 1013], [1017, 1017], [1021, 1021]], "source_code_file": "find/pred.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "pred_type", "lineno_map": [[1043, 1043], [1045, 1045], [1047, 1047], [1057, 1057], [1058, 1058], [1060, 1060], [1083, 1083]], "source_code_file": "find/pred.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "pred_uid", "lineno_map": [[1094, 1094], [1097, 1097], [1101, 1101], [1105, 1105]], "source_code_file": "find/pred.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "pred_used", "lineno_map": [[1120, 1120], [1121, 1121], [1122, 1122], [1123, 1123], [1124, 1124], [1126, 1126], [1127, 1127]], "source_code_file": "find/pred.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "pred_user", "lineno_map": [[1136, 1136]], "source_code_file": "find/pred.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "pred_xtype", "lineno_map": [[1151, 1151], [1152, 1152], [1154, 1154], [1156, 1156], [1157, 1157], [1159, 1159], [1169, 1169], [1170, 1170]], "source_code_file": "find/pred.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "pred_context", "lineno_map": [[1186, 1186], [1190, 1190], [1192, 1192], [1197, 1197], [1198, 1198]], "source_code_file": "find/pred.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "blank_rtrim", "lineno_map": [[1210, 1210], [1212, 1212], [1213, 1213], [1214, 1214], [1215, 1215], [1216, 1216]], "source_code_file": "find/pred.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "print_list", "lineno_map": [[1227, 1227], [1228, 1228], [1230, 1230], [1231, 1231], [1233, 1233]], "source_code_file": "find/pred.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "print_parenthesised", "lineno_map": [[1240, 1240], [1242, 1242], [1244, 1244], [1245, 1245], [1250, 1250], [1254, 1254], [1255, 1255], [1257, 1257], [1258, 1258], [1259, 1259], [1260, 1260], [1261, 1261]], "source_code_file": "find/pred.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "left_dir", "lineno_map": [[96, 96], [98, 98], [100, 100], [101, 101]], "source_code_file": "find/ftsfind.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "inside_dir", "lineno_map": [[118, 118], [120, 120], [122, 122], [123, 123], [125, 125], [127, 127], [129, 129], [131, 131], [138, 138]], "source_code_file": "find/ftsfind.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "get_fts_info_name", "lineno_map": [[165, 165], [167, 167], [168, 168], [169, 169], [170, 170], [171, 171], [172, 172], [173, 173], [174, 174], [175, 175], [176, 176], [177, 177], [178, 178], [179, 179], [180, 180], [182, 182]], "source_code_file": "find/ftsfind.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "visit", "lineno_map": [[192, 192], [193, 193], [194, 194], [197, 197], [198, 198], [201, 201], [203, 203]], "source_code_file": "find/ftsfind.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "partial_quotearg_n", "lineno_map": [[210, 210], [219, 219], [220, 220], [221, 221], [222, 222]], "source_code_file": "find/ftsfind.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "issue_loop_warning", "lineno_map": [[242, 242], [244, 244], [245, 245], [246, 246], [258, 258], [259, 259], [261, 261], [263, 263], [264, 264]], "source_code_file": "find/ftsfind.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "symlink_loop", "lineno_map": [[279, 279]], "source_code_file": "find/ftsfind.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "show_outstanding_execdirs", "lineno_map": [[287, 287], [289, 289], [291, 291], [292, 292], [294, 294], [298, 298], [299, 299], [300, 300], [301, 301], [303, 303], [304, 304], [307, 307], [308, 308], [310, 310], [311, 311], [312, 312], [313, 313], [314, 314], [316, 316], [318, 318], [320, 320], [322, 322], [323, 323]], "source_code_file": "find/ftsfind.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "consider_visiting", "lineno_map": [[338, 338], [339, 339], [343, 343], [344, 344], [345, 345], [346, 346], [347, 347], [349, 349], [351, 351], [353, 353], [355, 355], [357, 357], [358, 358], [360, 360], [363, 363], [364, 364], [366, 366], [369, 369], [371, 371], [372, 372], [375, 375], [384, 384], [386, 386], [390, 390], [392, 392], [395, 395], [403, 403], [405, 405], [410, 410], [427, 427], [428, 428], [430, 430], [431, 431], [432, 432], [436, 436], [437, 437], [438, 438], [439, 439], [441, 441], [444, 444], [445, 445], [452, 452], [453, 453], [455, 455], [460, 460], [461, 461], [462, 462], [463, 463], [464, 464], [466, 466], [473, 473], [477, 477], [479, 479], [481, 481], [483, 483], [484, 484], [488, 488], [491, 491], [493, 493], [496, 496], [498, 498], [500, 500], [503, 503], [504, 504], [507, 507], [508, 508], [509, 509], [511, 511], [513, 513], [516, 516], [519, 519]], "source_code_file": "find/ftsfind.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "find", "lineno_map": [[532, 532], [533, 533], [535, 535], [536, 536], [538, 538], [541, 541], [545, 545], [549, 549], [553, 553], [554, 554], [556, 556], [557, 557], [559, 559], [561, 561], [565, 565], [567, 567], [569, 569], [578, 578], [580, 580], [581, 581], [584, 584], [586, 586], [587, 587], [588, 588], [589, 589], [590, 590], [593, 593], [595, 595], [598, 598], [602, 602], [608, 608], [609, 609], [611, 611], [614, 614]], "source_code_file": "find/ftsfind.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "process_all_startpoints", "lineno_map": [[626, 626], [628, 628], [629, 629], [633, 633], [641, 641]], "source_code_file": "find/ftsfind.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "main", "lineno_map": [[653, 653], [656, 656], [657, 657], [659, 659], [661, 661], [663, 663], [664, 664], [665, 665], [666, 666], [668, 668], [670, 670], [673, 673], [674, 674], [676, 676], [677, 677], [683, 683], [686, 686], [689, 689], [690, 690], [691, 691], [693, 693], [699, 699], [701, 701], [702, 702], [712, 712], [738, 738], [739, 739], [745, 745], [746, 746]], "source_code_file": "find/ftsfind.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "is_fts_enabled", "lineno_map": [[755, 755]], "source_code_file": "find/ftsfind.c", "binary_file1": "find.json", "binary_file2": "find.json"}
{"fname": "get_char_oct_or_hex_escape", "lineno_map": [[239, 239], [243, 243], [245, 245], [248, 248], [249, 249], [251, 251], [254, 254], [255, 255], [259, 259], [260, 260], [261, 261], [264, 264], [265, 265], [266, 266], [273, 273], [274, 274], [276, 276], [278, 278], [279, 279], [284, 284], [285, 285], [291, 291], [293, 293], [294, 294]], "source_code_file": "xargs/xargs.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "get_input_delimiter", "lineno_map": [[305, 305], [311, 311], [314, 314], [338, 338], [339, 339]], "source_code_file": "xargs/xargs.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "fail_due_to_env_size", "lineno_map": [[356, 356]], "source_code_file": "xargs/xargs.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "smaller_of", "lineno_map": [[362, 362]], "source_code_file": "xargs/xargs.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "fopen_cloexec_for_read_only", "lineno_map": [[371, 371], [372, 372], [378, 378], [379, 379], [381, 381], [382, 382], [383, 383]], "source_code_file": "xargs/xargs.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "main", "lineno_map": [[395, 395], [396, 396], [397, 397], [398, 398], [400, 400], [401, 401], [406, 406], [407, 407], [409, 409], [411, 411], [412, 412], [413, 413], [416, 416], [418, 418], [419, 419], [421, 421], [423, 423], [430, 430], [442, 442], [444, 444], [446, 446], [459, 459], [469, 469], [470, 470], [472, 472], [476, 476], [477, 477], [500, 500], [503, 503], [508, 508], [511, 511], [514, 514], [517, 517], [518, 518], [522, 522], [523, 523], [528, 528], [529, 529], [531, 531], [535, 535], [540, 540], [541, 541], [543, 543], [545, 545], [546, 546], [550, 550], [552, 552], [553, 553], [557, 557], [558, 558], [560, 560], [562, 562], [563, 563], [567, 567], [569, 569], [570, 570], [572, 572], [574, 574], [584, 584], [585, 585], [586, 586], [587, 587], [589, 589], [590, 590], [592, 592], [593, 593], [595, 595], [600, 600], [604, 604], [608, 608], [612, 612], [613, 613], [617, 617], [622, 622], [626, 626], [630, 630], [634, 634], [636, 636], [637, 637], [640, 640], [641, 641], [648, 648], [649, 649], [655, 655], [660, 660], [662, 662], [663, 663], [673, 673], [674, 674], [681, 681], [682, 682], [683, 683], [684, 684], [685, 685], [687, 687], [688, 688], [689, 689], [690, 690], [691, 691], [696, 696], [698, 698], [702, 702], [703, 703], [704, 704], [706, 706], [707, 707], [712, 712], [713, 713], [715, 715], [717, 717], [718, 718], [719, 719], [720, 720], [723, 723], [725, 725], [726, 726], [727, 727], [728, 728], [729, 729], [730, 730], [731, 731], [732, 732], [733, 733], [734, 734], [735, 735], [736, 736], [737, 737], [738, 738], [739, 739], [740, 740], [741, 741], [744, 744], [746, 746], [747, 747], [752, 752], [754, 754], [755, 755], [758, 758], [763, 763], [764, 764], [767, 767], [769, 769], [771, 771], [772, 772], [773, 773], [776, 776], [777, 777], [778, 778], [779, 779], [782, 782], [783, 783], [785, 785], [786, 786], [791, 791], [792, 792], [793, 793], [799, 799], [801, 801], [802, 802], [803, 803], [804, 804], [806, 806], [808, 808], [809, 809], [811, 811], [812, 812], [815, 815], [816, 816], [818, 818], [819, 819], [820, 820], [824, 824], [828, 828]], "source_code_file": "xargs/xargs.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "read_line", "lineno_map": [[853, 853], [855, 855], [856, 856], [857, 857], [858, 858], [860, 860], [862, 862], [864, 864], [868, 868], [869, 869], [871, 871], [875, 875], [876, 876], [878, 878], [879, 879], [880, 880], [882, 882], [883, 883], [886, 886], [888, 888], [889, 889], [895, 895], [898, 898], [899, 899], [900, 900], [904, 904], [906, 906], [907, 907], [908, 908], [910, 910], [917, 917], [918, 918], [921, 921], [922, 922], [923, 923], [925, 925], [928, 928], [929, 929], [935, 935], [940, 940], [942, 942], [943, 943], [944, 944], [946, 946], [949, 949], [953, 953], [954, 954], [955, 955], [956, 956], [958, 958], [961, 961], [962, 962], [966, 966], [967, 967], [968, 968], [973, 973], [975, 975], [976, 976], [979, 979], [981, 981], [982, 982], [983, 983], [988, 988], [992, 992], [995, 995], [996, 996], [999, 999], [1003, 1003], [1005, 1005], [1006, 1006], [1008, 1008]], "source_code_file": "xargs/xargs.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "read_string", "lineno_map": [[1033, 1033], [1035, 1035], [1037, 1037], [1041, 1041], [1042, 1042], [1044, 1044], [1045, 1045], [1047, 1047], [1048, 1048], [1049, 1049], [1050, 1050], [1056, 1056], [1058, 1058], [1059, 1059], [1060, 1060], [1061, 1061], [1062, 1062], [1068, 1068], [1070, 1070], [1071, 1071], [1073, 1073]], "source_code_file": "xargs/xargs.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "print_args", "lineno_map": [[1087, 1087], [1089, 1089], [1090, 1090], [1093, 1093], [1098, 1098], [1100, 1100], [1101, 1101], [1102, 1102], [1103, 1103], [1105, 1105], [1106, 1106], [1107, 1107], [1109, 1109], [1110, 1110], [1111, 1111], [1112, 1112], [1113, 1113], [1114, 1114], [1118, 1118]], "source_code_file": "xargs/xargs.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "set_slot_var", "lineno_map": [[1139, 1139], [1140, 1140], [1148, 1148], [1150, 1150], [1154, 1154], [1160, 1160], [1162, 1162], [1164, 1164], [1165, 1165], [1168, 1168]], "source_code_file": "xargs/xargs.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "prep_child_for_exec", "lineno_map": [[1179, 1179], [1186, 1186], [1187, 1187], [1189, 1189], [1191, 1191], [1194, 1194], [1195, 1195], [1202, 1202]], "source_code_file": "xargs/xargs.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "xargs_do_exec", "lineno_map": [[1229, 1229], [1231, 1231], [1233, 1233], [1237, 1237], [1239, 1239], [1240, 1240], [1251, 1251], [1253, 1253], [1254, 1254], [1255, 1255], [1259, 1259], [1260, 1260], [1262, 1262], [1265, 1265], [1269, 1269], [1270, 1270], [1272, 1272], [1274, 1274], [1275, 1275], [1277, 1277], [1278, 1278], [1292, 1292], [1295, 1295], [1296, 1296], [1298, 1298], [1303, 1303], [1311, 1311], [1319, 1319], [1323, 1323], [1324, 1324], [1325, 1325], [1335, 1335], [1346, 1346], [1349, 1349], [1353, 1353], [1355, 1355], [1359, 1359], [1372, 1372], [1377, 1377], [1378, 1378], [1382, 1382]], "source_code_file": "xargs/xargs.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "exec_if_possible", "lineno_map": [[1392, 1392], [1393, 1393], [1395, 1395]], "source_code_file": "xargs/xargs.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "add_proc", "lineno_map": [[1407, 1407], [1411, 1411], [1413, 1413], [1416, 1416], [1417, 1417], [1420, 1420], [1423, 1423], [1424, 1424], [1425, 1425]], "source_code_file": "xargs/xargs.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "wait_for_proc", "lineno_map": [[1438, 1438], [1440, 1440], [1445, 1445], [1447, 1447], [1449, 1449], [1456, 1456], [1460, 1460], [1467, 1467], [1469, 1469], [1470, 1470], [1471, 1471], [1473, 1473], [1481, 1481], [1487, 1487], [1489, 1489], [1493, 1493], [1495, 1495], [1497, 1497], [1504, 1504], [1517, 1517], [1518, 1518], [1519, 1519], [1521, 1521], [1522, 1522], [1523, 1523], [1524, 1524], [1525, 1525], [1526, 1526], [1527, 1527], [1528, 1528], [1529, 1529], [1530, 1530], [1531, 1531]], "source_code_file": "xargs/xargs.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "wait_for_proc_all", "lineno_map": [[1548, 1548], [1550, 1550], [1553, 1553], [1554, 1554], [1555, 1555], [1557, 1557], [1567, 1567]], "source_code_file": "xargs/xargs.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "increment_proc_max", "lineno_map": [[1583, 1583], [1584, 1584], [1587, 1587]], "source_code_file": "xargs/xargs.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "decrement_proc_max", "lineno_map": [[1594, 1594], [1595, 1595]], "source_code_file": "xargs/xargs.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "parse_num", "lineno_map": [[1611, 1611], [1612, 1612], [1614, 1614], [1616, 1616], [1617, 1617], [1619, 1619], [1621, 1621], [1623, 1623], [1625, 1625], [1626, 1626], [1630, 1630], [1633, 1633], [1635, 1635], [1637, 1637], [1639, 1639], [1640, 1640], [1644, 1644]], "source_code_file": "xargs/xargs.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "usage", "lineno_map": [[1653, 1653], [1654, 1654], [1659, 1659], [1661, 1661], [1663, 1663], [1666, 1666], [1667, 1667], [1670, 1670], [1673, 1673], [1675, 1675], [1676, 1676], [1679, 1679], [1681, 1681], [1683, 1683], [1684, 1684], [1685, 1685], [1686, 1686], [1687, 1687], [1690, 1690], [1691, 1691], [1692, 1692], [1693, 1693], [1695, 1695], [1696, 1696], [1697, 1697]], "source_code_file": "xargs/xargs.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "set_max_db_age", "lineno_map": [[175, 175], [177, 177], [178, 178], [186, 186], [187, 187], [190, 190], [191, 191], [193, 193], [194, 194], [197, 197], [200, 200], [201, 201], [206, 206]], "source_code_file": "locate/locate.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "get_short", "lineno_map": [[220, 220], [221, 221]], "source_code_file": "locate/locate.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "contains_metacharacter", "lineno_map": [[232, 232]], "source_code_file": "locate/locate.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "locate_read_str", "lineno_map": [[255, 255], [256, 256], [260, 260], [261, 261], [263, 263], [265, 265], [266, 266], [268, 268], [269, 269], [275, 275], [276, 276], [279, 279], [280, 280]], "source_code_file": "locate/locate.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "visit", "lineno_map": [[350, 350], [351, 351], [353, 353], [354, 354]], "source_code_file": "locate/locate.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "process_or", "lineno_map": [[372, 372], [373, 373], [374, 374], [375, 375], [378, 378], [379, 379]], "source_code_file": "locate/locate.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "process_and", "lineno_map": [[391, 391], [392, 392], [393, 393], [394, 394], [397, 397], [398, 398]], "source_code_file": "locate/locate.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "add_visitor", "lineno_map": [[411, 411], [412, 412], [413, 413], [414, 414], [416, 416], [418, 418], [422, 422], [423, 423]], "source_code_file": "locate/locate.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "visit_justprint_quoted", "lineno_map": [[431, 431], [433, 433], [434, 434]], "source_code_file": "locate/locate.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "visit_justprint_unquoted", "lineno_map": [[442, 442], [443, 443]], "source_code_file": "locate/locate.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "toolong", "lineno_map": [[450, 450], [451, 451]], "source_code_file": "locate/locate.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "extend", "lineno_map": [[460, 460], [462, 462], [464, 464], [466, 466], [467, 467]], "source_code_file": "locate/locate.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "visit_old_format", "lineno_map": [[479, 479], [483, 483], [488, 488], [489, 489], [490, 490], [491, 491], [493, 493], [494, 494], [496, 496], [497, 497], [501, 501], [502, 502], [508, 508], [509, 509], [511, 511], [514, 514], [517, 517], [518, 518], [523, 523], [524, 524], [525, 525], [526, 526], [533, 533], [534, 534], [535, 535], [536, 536]], "source_code_file": "locate/locate.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "visit_locate02_format", "lineno_map": [[548, 548], [549, 549], [550, 550], [551, 551], [553, 553], [555, 555], [561, 561], [566, 566], [569, 569], [571, 571], [572, 572], [574, 574], [580, 580], [584, 584], [585, 585], [586, 586], [587, 587], [589, 589]], "source_code_file": "locate/locate.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "visit_basename", "lineno_map": [[598, 598]], "source_code_file": "locate/locate.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "visit_existing_follow", "lineno_map": [[616, 616]], "source_code_file": "locate/locate.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "visit_non_existing_follow", "lineno_map": [[638, 638]], "source_code_file": "locate/locate.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "visit_existing_nofollow", "lineno_map": [[660, 660]], "source_code_file": "locate/locate.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "visit_non_existing_nofollow", "lineno_map": [[682, 682]], "source_code_file": "locate/locate.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "visit_substring_match_nocasefold_wide", "lineno_map": [[695, 695], [697, 697]], "source_code_file": "locate/locate.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "visit_substring_match_nocasefold_narrow", "lineno_map": [[706, 706], [707, 707], [708, 708]], "source_code_file": "locate/locate.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "visit_substring_match_casefold_wide", "lineno_map": [[717, 717], [719, 719]], "source_code_file": "locate/locate.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "visit_substring_match_casefold_narrow", "lineno_map": [[729, 729], [731, 731], [732, 732]], "source_code_file": "locate/locate.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "visit_globmatch_nofold", "lineno_map": [[742, 742], [743, 743]], "source_code_file": "locate/locate.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "visit_globmatch_casefold", "lineno_map": [[753, 753], [754, 754]], "source_code_file": "locate/locate.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "visit_regex", "lineno_map": [[764, 764], [765, 765], [767, 767], [770, 770]], "source_code_file": "locate/locate.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "visit_stats", "lineno_map": [[784, 784], [785, 785], [789, 789], [790, 790], [792, 792], [793, 793], [795, 795], [796, 796], [797, 797], [799, 799], [801, 801], [803, 803], [807, 807], [808, 808], [809, 809], [810, 810], [811, 811], [812, 812]], "source_code_file": "locate/locate.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "visit_limit", "lineno_map": [[821, 821], [825, 825]], "source_code_file": "locate/locate.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "visit_count", "lineno_map": [[834, 834], [838, 838]], "source_code_file": "locate/locate.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "print_stats", "lineno_map": [[852, 852], [854, 854], [855, 855], [859, 859], [862, 862], [863, 863], [864, 864], [865, 865], [866, 866], [867, 867], [868, 868], [869, 869], [873, 873], [878, 878], [886, 886], [896, 896], [898, 898], [900, 900], [905, 905], [913, 913], [914, 914], [915, 915], [916, 916], [920, 920], [924, 924]], "source_code_file": "locate/locate.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "looking_at_gnu_locatedb", "lineno_map": [[934, 934], [936, 936]], "source_code_file": "locate/locate.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "looking_at_slocate_locatedb", "lineno_map": [[952, 952], [954, 954], [961, 961], [963, 963], [966, 966], [968, 968], [974, 974], [975, 975], [979, 979]], "source_code_file": "locate/locate.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "i_am_little_endian", "lineno_map": [[1010, 1010], [1011, 1011], [1012, 1012]], "source_code_file": "locate/locate.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "search_one_database", "lineno_map": [[1057, 1057], [1060, 1060], [1061, 1061], [1063, 1063], [1064, 1064], [1065, 1065], [1067, 1067], [1068, 1068], [1071, 1071], [1072, 1072], [1073, 1073], [1074, 1074], [1075, 1075], [1076, 1076], [1079, 1079], [1081, 1081], [1082, 1082], [1083, 1083], [1087, 1087], [1088, 1088], [1096, 1096], [1101, 1101], [1102, 1102], [1107, 1107], [1113, 1113], [1118, 1118], [1119, 1119], [1125, 1125], [1127, 1127], [1129, 1129], [1130, 1130], [1134, 1134], [1137, 1137], [1138, 1138], [1139, 1139], [1145, 1145], [1146, 1146], [1147, 1147], [1149, 1149], [1151, 1151], [1152, 1152], [1158, 1158], [1159, 1159], [1161, 1161], [1163, 1163], [1164, 1164], [1165, 1165], [1167, 1167], [1168, 1168], [1175, 1175], [1177, 1177], [1178, 1178], [1180, 1180], [1181, 1181], [1182, 1182], [1186, 1186], [1187, 1187], [1190, 1190], [1192, 1192], [1193, 1193], [1194, 1194], [1196, 1196], [1197, 1197], [1199, 1199], [1201, 1201], [1202, 1202], [1203, 1203], [1204, 1204], [1205, 1205], [1206, 1206], [1208, 1208], [1210, 1210], [1212, 1212], [1216, 1216], [1219, 1219], [1221, 1221], [1222, 1222], [1224, 1224], [1235, 1235], [1243, 1243], [1244, 1244], [1249, 1249], [1250, 1250], [1253, 1253], [1257, 1257], [1262, 1262], [1265, 1265], [1266, 1266], [1267, 1267], [1269, 1269], [1273, 1273], [1274, 1274], [1275, 1275], [1277, 1277], [1289, 1289], [1290, 1290], [1292, 1292], [1294, 1294], [1295, 1295], [1297, 1297], [1301, 1301], [1302, 1302], [1304, 1304], [1307, 1307], [1309, 1309], [1310, 1310], [1311, 1311], [1313, 1313], [1316, 1316], [1318, 1318], [1320, 1320], [1326, 1326], [1327, 1327], [1330, 1330], [1331, 1331], [1336, 1336], [1337, 1337], [1342, 1342], [1344, 1344], [1346, 1346], [1347, 1347], [1349, 1349], [1352, 1352], [1354, 1354], [1356, 1356], [1358, 1358], [1362, 1362], [1366, 1366], [1367, 1367], [1370, 1370], [1372, 1372]], "source_code_file": "locate/locate.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "usage", "lineno_map": [[1385, 1385], [1394, 1394]], "source_code_file": "locate/locate.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "drop_privs", "lineno_map": [[1434, 1434], [1435, 1435], [1436, 1436], [1437, 1437], [1441, 1441], [1445, 1445], [1446, 1446], [1448, 1448], [1455, 1455], [1457, 1457], [1463, 1463], [1464, 1464], [1466, 1466], [1478, 1478], [1480, 1480], [1487, 1487], [1495, 1495], [1496, 1496], [1498, 1498], [1506, 1506], [1508, 1508]], "source_code_file": "locate/locate.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "opendb", "lineno_map": [[1522, 1522], [1527, 1527], [1530, 1530], [1532, 1532], [1533, 1533]], "source_code_file": "locate/locate.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "cleanup_quote_opts", "lineno_map": [[1542, 1542]], "source_code_file": "locate/locate.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "dolocate", "lineno_map": [[1549, 1549], [1553, 1553], [1554, 1554], [1555, 1555], [1556, 1556], [1557, 1557], [1558, 1558], [1559, 1559], [1560, 1560], [1561, 1561], [1562, 1562], [1563, 1563], [1565, 1565], [1567, 1567], [1568, 1568], [1570, 1570], [1573, 1573], [1575, 1575], [1576, 1576], [1578, 1578], [1579, 1579], [1581, 1581], [1584, 1584], [1585, 1585], [1587, 1587], [1593, 1593], [1595, 1595], [1599, 1599], [1600, 1600], [1602, 1602], [1605, 1605], [1608, 1608], [1609, 1609], [1613, 1613], [1617, 1617], [1621, 1621], [1625, 1625], [1626, 1626], [1630, 1630], [1634, 1634], [1638, 1638], [1642, 1642], [1647, 1647], [1651, 1651], [1655, 1655], [1659, 1659], [1663, 1663], [1667, 1667], [1671, 1671], [1675, 1675], [1685, 1685], [1690, 1690], [1691, 1691], [1693, 1693], [1694, 1694], [1695, 1695], [1707, 1707], [1716, 1716], [1718, 1718], [1720, 1720], [1721, 1721], [1725, 1725], [1726, 1726], [1728, 1728], [1730, 1730], [1731, 1731], [1735, 1735], [1737, 1737], [1742, 1742], [1743, 1743], [1745, 1745], [1747, 1747], [1749, 1749], [1754, 1754], [1762, 1762], [1763, 1763], [1764, 1764], [1765, 1765], [1766, 1766], [1767, 1767], [1769, 1769], [1772, 1772], [1773, 1773], [1775, 1775], [1777, 1777], [1778, 1778], [1783, 1783], [1784, 1784], [1785, 1785], [1790, 1790], [1791, 1791], [1792, 1792], [1794, 1794], [1798, 1798], [1800, 1800], [1804, 1804], [1805, 1805], [1807, 1807], [1815, 1815], [1822, 1822], [1823, 1823], [1824, 1824], [1829, 1829], [1831, 1831], [1834, 1834], [1835, 1835], [1841, 1841], [1842, 1842], [1843, 1843], [1845, 1845], [1851, 1851], [1855, 1855], [1856, 1856], [1857, 1857], [1861, 1861], [1862, 1862], [1870, 1870], [1871, 1871], [1873, 1873], [1879, 1879], [1887, 1887], [1889, 1889], [1893, 1893], [1895, 1895], [1896, 1896], [1899, 1899], [1907, 1907], [1914, 1914], [1916, 1916], [1919, 1919]], "source_code_file": "locate/locate.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "open_secure_db", "lineno_map": [[1931, 1931], [1937, 1937], [1939, 1939], [1940, 1940], [1942, 1942]], "source_code_file": "locate/locate.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "main", "lineno_map": [[1952, 1952], [1953, 1953]], "source_code_file": "locate/locate.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "__bswap_32", "lineno_map": [[46, 46], [47, 47]], "source_code_file": "locate/word_io.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "decode_value", "lineno_map": [[74, 74], [75, 75], [76, 76], [78, 78], [80, 80], [82, 82], [88, 88], [94, 94], [97, 97], [98, 98], [101, 101], [116, 116]], "source_code_file": "locate/word_io.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "getword", "lineno_map": [[135, 135], [136, 136], [137, 137], [139, 139], [144, 144], [145, 145], [147, 147], [148, 148], [149, 149]], "source_code_file": "locate/word_io.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "putword", "lineno_map": [[167, 167], [168, 168], [170, 170], [173, 173], [174, 174]], "source_code_file": "locate/word_io.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "field_length", "lineno_map": [[36, 36], [38, 38], [39, 39]], "source_code_file": "lib/splitstring.c", "binary_file1": "find.json", "binary_file2": "locate.json"}
{"fname": "splitstring", "lineno_map": [[50, 50], [52, 52], [53, 53], [57, 57], [58, 58], [59, 59], [63, 63]], "source_code_file": "lib/splitstring.c", "binary_file1": "find.json", "binary_file2": "locate.json"}
{"fname": "display_findutils_version", "lineno_map": [[52, 52], [53, 53]], "source_code_file": "lib/findutils-version.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "decide_size", "lineno_map": [[47, 47], [48, 48], [50, 50], [52, 52], [54, 54], [56, 56]], "source_code_file": "lib/extendbuf.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "extendbuf", "lineno_map": [[69, 69], [71, 71], [72, 72], [74, 74], [79, 79], [81, 81], [82, 82], [86, 86], [88, 88], [89, 89], [90, 90], [92, 92], [97, 97], [101, 101], [106, 106]], "source_code_file": "lib/extendbuf.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "xextendbuf", "lineno_map": [[115, 115], [116, 116], [118, 118], [119, 119]], "source_code_file": "lib/extendbuf.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "get_regex_type", "lineno_map": [[86, 86], [87, 87], [89, 89], [92, 92], [98, 98], [99, 99], [101, 101], [103, 103], [104, 104], [106, 106], [109, 109], [110, 110]], "source_code_file": "lib/regextype.c", "binary_file1": "find.json", "binary_file2": "locate.json"}
{"fname": "get_regex_type_name", "lineno_map": [[121, 121]], "source_code_file": "lib/regextype.c", "binary_file1": "find.json", "binary_file2": "locate.json"}
{"fname": "get_regex_type_flags", "lineno_map": [[130, 130]], "source_code_file": "lib/regextype.c", "binary_file1": "find.json", "binary_file2": "locate.json"}
{"fname": "get_regex_type_context", "lineno_map": [[138, 138]], "source_code_file": "lib/regextype.c", "binary_file1": "find.json", "binary_file2": "locate.json"}
{"fname": "get_regex_type_synonym", "lineno_map": [[150, 150], [153, 153], [154, 154], [156, 156]], "source_code_file": "lib/regextype.c", "binary_file1": "find.json", "binary_file2": "locate.json"}
{"fname": "bc_args_complete", "lineno_map": [[77, 77]], "source_code_file": "lib/buildcmd.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "bc_do_insert", "lineno_map": [[105, 105], [112, 112], [113, 113], [114, 114], [119, 119], [120, 120], [122, 122], [126, 126], [129, 129], [132, 132], [134, 134], [135, 135], [136, 136], [137, 137], [139, 139], [141, 141], [144, 144], [146, 146], [148, 148], [149, 149], [151, 151], [152, 152], [154, 154], [155, 155], [158, 158], [159, 159], [160, 160], [161, 161], [163, 163], [164, 164]], "source_code_file": "lib/buildcmd.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "update_limit", "lineno_map": [[179, 179], [181, 181], [182, 182], [186, 186], [187, 187], [188, 188], [191, 191], [192, 192], [196, 196], [198, 198], [199, 199], [203, 203], [208, 208], [209, 209], [210, 210], [212, 212], [213, 213], [215, 215], [219, 219], [220, 220], [222, 222], [229, 229], [230, 230], [231, 231], [232, 232]], "source_code_file": "lib/buildcmd.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "copy_args", "lineno_map": [[246, 246], [247, 247], [249, 249], [251, 251], [253, 253], [254, 254], [256, 256], [258, 258], [259, 259]], "source_code_file": "lib/buildcmd.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "bc_do_exec", "lineno_map": [[275, 275], [277, 277], [278, 278], [280, 280], [281, 281], [282, 282], [286, 286], [288, 288], [290, 290], [291, 291], [295, 295], [299, 299], [300, 300], [305, 305], [309, 309], [313, 313], [314, 314]], "source_code_file": "lib/buildcmd.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "bc_argc_limit_reached", "lineno_map": [[331, 331], [332, 332]], "source_code_file": "lib/buildcmd.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "bc_push_arg", "lineno_map": [[355, 355], [357, 357], [359, 359], [361, 361], [364, 364], [366, 366], [368, 368], [369, 369], [370, 370], [373, 373], [374, 374], [375, 375], [376, 376], [377, 377], [379, 379], [380, 380], [383, 383], [386, 386], [388, 388], [389, 389], [393, 393], [394, 394], [395, 395], [399, 399], [400, 400], [403, 403], [404, 404], [406, 406], [407, 407], [410, 410], [411, 411], [416, 416], [418, 418], [423, 423], [425, 425]], "source_code_file": "lib/buildcmd.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "bc_get_arg_max", "lineno_map": [[440, 440], [445, 445]], "source_code_file": "lib/buildcmd.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "bc_size_of_environment", "lineno_map": [[487, 487], [488, 488], [490, 490], [491, 491]], "source_code_file": "lib/buildcmd.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "bc_init_controlinfo", "lineno_map": [[501, 501], [507, 507], [508, 508], [510, 510], [513, 513], [517, 517], [528, 528], [529, 529], [533, 533], [534, 534], [535, 535], [536, 536], [537, 537], [538, 538], [539, 539], [540, 540], [545, 545]], "source_code_file": "lib/buildcmd.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "bc_use_sensible_arg_max", "lineno_map": [[560, 560], [561, 561], [562, 562], [563, 563], [565, 565]], "source_code_file": "lib/buildcmd.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "bc_init_state", "lineno_map": [[576, 576], [577, 577], [578, 578], [579, 579], [580, 580], [581, 581], [588, 588], [589, 589], [591, 591], [592, 592], [593, 593], [594, 594]], "source_code_file": "lib/buildcmd.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "bc_clear_args", "lineno_map": [[601, 601], [602, 602], [603, 603], [604, 604]], "source_code_file": "lib/buildcmd.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "exceeds", "lineno_map": [[614, 614], [615, 615], [620, 620], [622, 622], [627, 627], [628, 628]], "source_code_file": "lib/buildcmd.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "bc_args_exceed_testing_limit", "lineno_map": [[646, 646], [648, 648], [649, 649], [653, 653]], "source_code_file": "lib/buildcmd.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "print_quoted", "lineno_map": [[46, 46], [49, 49], [51, 51], [52, 52], [60, 60], [61, 61], [65, 65], [67, 67], [68, 68], [70, 70], [71, 71], [77, 77]], "source_code_file": "lib/printquoted.c", "binary_file1": "find.json", "binary_file2": "locate.json"}
{"fname": "unibyte_qmark_chars", "lineno_map": [[93, 93], [94, 94], [96, 96], [98, 98], [99, 99], [100, 100]], "source_code_file": "lib/qmark.c", "binary_file1": "find.json", "binary_file2": "locate.json"}
{"fname": "qmark_chars", "lineno_map": [[119, 119], [125, 125], [126, 126], [127, 127], [129, 129], [130, 130], [153, 153], [161, 161], [168, 168], [170, 170], [175, 175], [176, 176], [180, 180], [185, 185], [186, 186], [190, 190], [192, 192], [194, 194], [195, 195], [199, 199], [200, 200], [207, 207], [208, 208], [211, 211], [217, 217]], "source_code_file": "lib/qmark.c", "binary_file1": "find.json", "binary_file2": "locate.json"}
{"fname": "get_proc_max_fd", "lineno_map": [[73, 73], [74, 74], [80, 80], [81, 81], [83, 83], [86, 86], [88, 88], [89, 89], [90, 90], [92, 92], [93, 93], [94, 94], [95, 95], [98, 98], [99, 99]], "source_code_file": "lib/fdleak.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "get_max_fd", "lineno_map": [[114, 114], [115, 115], [118, 118], [119, 119], [120, 120], [124, 124], [126, 126]], "source_code_file": "lib/fdleak.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "visit_open_fds", "lineno_map": [[143, 143], [145, 145], [148, 148], [149, 149], [150, 150], [152, 152], [154, 154], [155, 155], [156, 156], [158, 158], [159, 159], [166, 166], [168, 168], [170, 170], [175, 175]], "source_code_file": "lib/fdleak.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "fd_is_cloexec", "lineno_map": [[183, 183]], "source_code_file": "lib/fdleak.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "remember_fd_if_non_cloexec", "lineno_map": [[201, 201], [207, 207], [208, 208], [209, 209], [211, 211], [213, 213], [214, 214], [215, 215]], "source_code_file": "lib/fdleak.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "remember_non_cloexec_fds", "lineno_map": [[228, 228], [230, 230], [231, 231], [233, 233], [234, 234], [235, 235], [237, 237], [238, 238]], "source_code_file": "lib/fdleak.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "find_first_leak_callback", "lineno_map": [[256, 256], [258, 258], [259, 259], [261, 261], [263, 263], [265, 265], [278, 278]], "source_code_file": "lib/fdleak.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "find_first_leaked_fd", "lineno_map": [[289, 289], [291, 291], [292, 292], [293, 293], [294, 294], [295, 295], [296, 296], [297, 297]], "source_code_file": "lib/fdleak.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "o_cloexec_works", "lineno_map": [[307, 307], [308, 308], [309, 309], [311, 311], [312, 312]], "source_code_file": "lib/fdleak.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "open_cloexec", "lineno_map": [[322, 322], [326, 326], [330, 330], [334, 334], [345, 345], [347, 347], [348, 348], [350, 350], [351, 351], [353, 353]], "source_code_file": "lib/fdleak.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "forget_non_cloexec_fds", "lineno_map": [[361, 361], [362, 362], [363, 363]], "source_code_file": "lib/fdleak.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "complain_about_leaky_fds", "lineno_map": [[370, 370], [371, 371], [373, 373], [375, 375], [376, 376], [377, 377], [382, 382]], "source_code_file": "lib/fdleak.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "safe_atoi", "lineno_map": [[53, 53], [54, 54], [55, 55], [58, 58], [61, 61], [66, 66], [79, 79], [81, 81], [85, 85], [87, 87]], "source_code_file": "lib/safe-atoi.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "open_safer", "lineno_map": [[31, 31], [33, 33], [36, 36], [40, 40]], "source_code_file": "gl/lib/open-safer.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "close_stdout_set_file_name", "lineno_map": [[43, 43]], "source_code_file": "gl/lib/closeout.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "close_stdout_set_ignore_EPIPE", "lineno_map": [[80, 80]], "source_code_file": "gl/lib/closeout.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "close_stdout", "lineno_map": [[109, 109], [110, 110], [112, 112], [113, 113], [114, 114], [117, 117], [119, 119], [122, 122], [123, 123]], "source_code_file": "gl/lib/closeout.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "adjust_value", "lineno_map": [[60, 60], [62, 62], [63, 63]], "source_code_file": "gl/lib/human.c", "binary_file1": "find.json", "binary_file2": "locate.json"}
{"fname": "group_number", "lineno_map": [[83, 83], [84, 84], [85, 85], [91, 91], [92, 92], [96, 96], [98, 98], [100, 100], [101, 101], [104, 104], [105, 105], [107, 107], [108, 108], [109, 109], [110, 110], [113, 113], [114, 114]], "source_code_file": "gl/lib/human.c", "binary_file1": "find.json", "binary_file2": "locate.json"}
{"fname": "human_readable", "lineno_map": [[156, 156], [158, 158], [161, 161], [162, 162], [173, 173], [174, 174], [175, 175], [176, 176], [177, 177], [178, 178], [179, 179], [181, 181], [182, 182], [184, 184], [185, 185], [186, 186], [188, 188], [189, 189], [194, 194], [196, 196], [198, 198], [199, 199], [200, 200], [202, 202], [203, 203], [208, 208], [210, 210], [211, 211], [212, 212], [213, 213], [214, 214], [215, 215], [224, 224], [225, 225], [229, 229], [231, 231], [232, 232], [233, 233], [237, 237], [238, 238], [242, 242], [243, 243], [245, 245], [247, 247], [249, 249], [250, 250], [251, 251], [253, 253], [254, 254], [255, 255], [257, 257], [258, 258], [259, 259], [260, 260], [264, 264], [265, 265], [266, 266], [277, 277], [279, 279], [281, 281], [285, 285], [286, 286], [287, 287], [288, 288], [289, 289], [290, 290], [291, 291], [292, 292], [294, 294], [296, 296], [298, 298], [299, 299], [300, 300], [302, 302], [303, 303], [305, 305], [307, 307], [308, 308], [312, 312], [313, 313], [315, 315], [316, 316], [317, 317], [318, 318], [324, 324], [325, 325], [326, 326], [328, 328], [330, 330], [331, 331], [333, 333], [334, 334], [336, 336], [337, 337], [338, 338], [340, 340], [344, 344], [348, 348], [349, 349], [351, 351], [355, 355], [356, 356], [358, 358], [360, 360], [363, 363], [364, 364], [365, 365], [369, 369], [370, 370], [372, 372], [373, 373], [377, 377], [379, 379], [380, 380], [381, 381], [385, 385]], "source_code_file": "gl/lib/human.c", "binary_file1": "find.json", "binary_file2": "locate.json"}
{"fname": "humblock", "lineno_map": [[414, 414], [416, 416], [417, 417], [418, 418], [419, 419], [422, 422], [424, 424], [425, 425], [428, 428], [430, 430], [431, 431], [436, 436], [438, 438], [440, 440], [443, 443], [444, 444], [446, 446], [447, 447], [448, 448], [449, 449], [450, 450], [456, 456]], "source_code_file": "gl/lib/human.c", "binary_file1": "find.json", "binary_file2": "locate.json"}
{"fname": "human_options", "lineno_map": [[463, 463], [464, 464], [466, 466], [467, 467]], "source_code_file": "gl/lib/human.c", "binary_file1": "find.json", "binary_file2": "locate.json"}
{"fname": "strnlen1", "lineno_map": [[30, 30], [31, 31]], "source_code_file": "gl/lib/strnlen1.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "safe_read", "lineno_map": [[66, 66], [68, 68], [70, 70], [71, 71], [72, 72], [73, 73]], "source_code_file": "gl/lib/safe-read.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "last_component", "lineno_map": [[32, 32], [34, 34], [36, 36], [37, 37], [39, 39], [41, 41], [42, 42], [43, 43], [45, 45], [46, 46]], "source_code_file": "gl/lib/basename-lgpl.c", "binary_file1": "find.json", "binary_file2": "locate.json"}
{"fname": "base_len", "lineno_map": [[61, 61], [63, 63]], "source_code_file": "gl/lib/basename-lgpl.c", "binary_file1": "find.json", "binary_file2": "locate.json"}
{"fname": "get_charset_aliases", "lineno_map": [[128, 128], [129, 129], [133, 133], [138, 138], [139, 139], [140, 140], [144, 144], [145, 145], [146, 146], [147, 147], [148, 148], [150, 150], [151, 151], [152, 152], [153, 153], [157, 157], [159, 159], [171, 171], [173, 173], [175, 175], [180, 180], [181, 181], [184, 184], [185, 185], [190, 190], [191, 191], [201, 201], [202, 202], [204, 204], [205, 205], [206, 206], [210, 210], [211, 211], [212, 212], [214, 214], [216, 216], [217, 217], [219, 219], [220, 220], [221, 221], [222, 222], [224, 224], [225, 225], [229, 229], [230, 230], [232, 232], [235, 235], [236, 236], [239, 239], [240, 240], [242, 242], [243, 243], [244, 244], [247, 247], [248, 248], [253, 253], [377, 377]], "source_code_file": "gl/lib/localcharset.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "locale_charset", "lineno_map": [[403, 403], [584, 584], [586, 586], [589, 589], [590, 590], [591, 591], [592, 592], [593, 593], [595, 595], [602, 602], [603, 603]], "source_code_file": "gl/lib/localcharset.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "__argmatch_die", "lineno_map": [[63, 63]], "source_code_file": "gl/lib/argmatch.c", "binary_file1": "find.json", "binary_file2": "locate.json"}
{"fname": "argmatch", "lineno_map": [[88, 88], [89, 89], [91, 91], [94, 94], [96, 96], [98, 98], [101, 101], [103, 103], [107, 107], [108, 108], [109, 109], [113, 113], [118, 118]], "source_code_file": "gl/lib/argmatch.c", "binary_file1": "find.json", "binary_file2": "locate.json"}
{"fname": "argmatch_invalid", "lineno_map": [[132, 132], [136, 136]], "source_code_file": "gl/lib/argmatch.c", "binary_file1": "find.json", "binary_file2": "locate.json"}
{"fname": "argmatch_valid", "lineno_map": [[149, 149], [153, 153], [154, 154], [155, 155], [156, 156], [158, 158], [159, 159], [163, 163], [165, 165]], "source_code_file": "gl/lib/argmatch.c", "binary_file1": "find.json", "binary_file2": "locate.json"}
{"fname": "__xargmatch_internal", "lineno_map": [[180, 180], [181, 181], [186, 186], [187, 187], [188, 188]], "source_code_file": "gl/lib/argmatch.c", "binary_file1": "find.json", "binary_file2": "locate.json"}
{"fname": "argmatch_to_argument", "lineno_map": [[202, 202], [203, 203]], "source_code_file": "gl/lib/argmatch.c", "binary_file1": "find.json", "binary_file2": "locate.json"}
{"fname": "mmalloca", "lineno_map": [[79, 79], [81, 81], [83, 83], [85, 85], [88, 88], [90, 90], [93, 93], [96, 96], [97, 97], [98, 98]], "source_code_file": "gl/lib/malloca.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "freea", "lineno_map": [[119, 119], [125, 125], [129, 129], [130, 130], [131, 131], [133, 133], [134, 134], [137, 137], [138, 138], [139, 139], [142, 142], [143, 143]], "source_code_file": "gl/lib/malloca.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "xalloc_die", "lineno_map": [[34, 34], [40, 40]], "source_code_file": "gl/lib/xalloc-die.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "set_program_name", "lineno_map": [[51, 51], [54, 54], [56, 56], [59, 59], [60, 60], [61, 61], [63, 63], [64, 64], [66, 66], [70, 70], [84, 84], [90, 90]], "source_code_file": "gl/lib/progname.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "clear_ungetc_buffer_preserving_position", "lineno_map": [[42, 42], [44, 44]], "source_code_file": "gl/lib/fflush.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "rpl_fflush", "lineno_map": [[148, 148], [153, 153]], "source_code_file": "gl/lib/fflush.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "knuth_morris_pratt", "lineno_map": [[38, 38], [39, 39], [43, 43], [44, 44], [65, 65], [67, 67], [73, 73], [80, 80], [83, 83], [84, 84], [92, 92], [93, 93], [107, 107], [118, 118], [119, 119], [120, 120], [121, 121], [123, 123], [124, 124], [126, 126], [127, 127], [132, 132], [135, 135], [138, 138], [139, 139], [144, 144], [145, 145], [149, 149], [151, 151]], "source_code_file": "gl/lib/mbsstr.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "knuth_morris_pratt_multibyte", "lineno_map": [[43, 43], [48, 48], [50, 50], [52, 52], [53, 53], [54, 54], [61, 61], [62, 62], [63, 63], [85, 85], [86, 86], [88, 88], [94, 94], [101, 101], [104, 104], [110, 110], [113, 113], [127, 127], [139, 139], [140, 140], [141, 141], [142, 142], [144, 144], [145, 145], [147, 147], [148, 148], [149, 149], [152, 152], [156, 156], [159, 159], [160, 160], [161, 161], [163, 163], [164, 164], [165, 165], [171, 171], [172, 172], [173, 173], [174, 174], [178, 178]], "source_code_file": "gl/lib/mbsstr.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "mbsstr", "lineno_map": [[192, 192], [196, 196], [197, 197], [213, 213], [214, 214], [215, 215], [216, 216], [221, 221], [222, 222], [223, 223], [225, 225], [231, 231], [232, 232], [233, 233], [237, 237], [238, 238], [239, 239], [240, 240], [241, 241], [242, 242], [243, 243], [247, 247], [250, 250], [252, 252], [256, 256], [257, 257], [258, 258], [264, 264], [265, 265], [267, 267], [268, 268], [269, 269], [270, 270], [272, 272], [274, 274], [277, 277], [280, 280], [281, 281], [293, 293], [309, 309], [310, 310], [311, 311], [312, 312], [313, 313], [317, 317], [319, 319], [321, 321], [327, 327], [328, 328], [329, 329], [333, 333], [335, 335], [338, 338], [339, 339], [340, 340], [342, 342], [346, 346], [347, 347], [351, 351], [353, 353], [357, 357], [358, 358], [359, 359], [362, 362], [363, 363], [365, 365], [367, 367], [370, 370], [373, 373], [374, 374]], "source_code_file": "gl/lib/mbsstr.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "clone_quoting_options", "lineno_map": [[114, 114], [115, 115], [117, 117]], "source_code_file": "gl/lib/quotearg.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "set_quoting_style", "lineno_map": [[133, 133]], "source_code_file": "gl/lib/quotearg.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "set_char_quoting", "lineno_map": [[144, 144], [145, 145], [146, 146], [147, 147], [148, 148], [149, 149]], "source_code_file": "gl/lib/quotearg.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "set_quoting_flags", "lineno_map": [[161, 161], [162, 162], [163, 163], [164, 164]], "source_code_file": "gl/lib/quotearg.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "set_custom_quoting", "lineno_map": [[172, 172], [173, 173], [174, 174], [175, 175], [176, 176], [177, 177], [178, 178]], "source_code_file": "gl/lib/quotearg.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "quoting_options_from_style", "lineno_map": [[185, 185], [186, 186], [187, 187], [188, 188]], "source_code_file": "gl/lib/quotearg.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "gettext_quote", "lineno_map": [[199, 199], [202, 202], [223, 223], [224, 224], [226, 226]], "source_code_file": "gl/lib/quotearg.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "quotearg_buffer_restyled", "lineno_map": [[254, 254], [255, 255], [256, 256], [257, 257], [258, 258], [259, 259], [260, 260], [301, 301], [304, 304], [305, 305], [308, 308], [309, 309], [310, 310], [311, 311], [312, 312], [316, 316], [317, 317], [324, 324], [347, 347], [348, 348], [350, 350], [351, 351], [352, 352], [353, 353], [354, 354], [355, 355], [360, 360], [363, 363], [366, 366], [367, 367], [370, 370], [371, 371], [372, 372], [373, 373], [374, 374], [378, 378], [382, 382], [385, 385], [389, 389], [390, 390], [392, 392], [393, 393], [394, 394], [395, 395], [396, 396], [400, 400], [401, 401], [403, 403], [405, 405], [408, 408], [409, 409], [412, 412], [414, 414], [421, 421], [422, 422], [424, 424], [425, 425], [427, 427], [433, 433], [434, 434], [438, 438], [441, 441], [446, 446], [447, 447], [448, 448], [455, 455], [457, 457], [458, 458], [459, 459], [460, 460], [461, 461], [462, 462], [475, 475], [476, 476], [477, 477], [478, 478], [479, 479], [480, 480], [481, 481], [482, 482], [484, 484], [486, 486], [493, 493], [497, 497], [498, 498], [502, 502], [504, 504], [510, 510], [514, 514], [530, 530], [531, 531], [536, 536], [538, 538], [540, 540], [541, 541], [542, 542], [543, 543], [583, 583], [585, 585], [586, 586], [591, 591], [593, 593], [594, 594], [595, 595], [596, 596], [601, 601], [602, 602], [603, 603], [605, 605], [607, 607], [610, 610], [612, 612], [613, 613], [614, 614], [623, 623], [624, 624], [627, 627], [628, 628], [639, 639], [640, 640], [641, 641], [644, 644], [647, 647], [651, 651], [655, 655], [657, 657], [658, 658], [659, 659], [660, 660], [662, 662], [664, 664], [665, 665], [667, 667], [669, 669], [670, 670], [671, 671], [679, 679], [680, 680], [681, 681], [682, 682], [683, 683], [687, 687], [690, 690], [691, 691], [694, 694], [695, 695], [698, 698], [699, 699], [700, 700], [702, 702], [703, 703], [709, 709], [710, 710]], "source_code_file": "gl/lib/quotearg.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "quotearg_buffer", "lineno_map": [[731, 731], [732, 732], [733, 733], [734, 734], [736, 736]], "source_code_file": "gl/lib/quotearg.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "quotearg_alloc_mem", "lineno_map": [[758, 758], [759, 759], [761, 761], [762, 762], [763, 763], [766, 766], [767, 767], [768, 768], [770, 770], [771, 771], [772, 772]], "source_code_file": "gl/lib/quotearg.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "quotearg_free", "lineno_map": [[793, 793], [795, 795], [796, 796], [797, 797], [799, 799], [800, 800], [801, 801], [803, 803], [805, 805], [806, 806], [808, 808]], "source_code_file": "gl/lib/quotearg.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "quotearg_n_options", "lineno_map": [[823, 823], [825, 825], [826, 826], [828, 828], [829, 829], [831, 831], [838, 838], [839, 839], [841, 841], [842, 842], [844, 844], [845, 845], [846, 846], [847, 847], [848, 848], [852, 852], [853, 853], [855, 855], [856, 856], [858, 858], [862, 862], [864, 864], [865, 865], [866, 866], [867, 867], [868, 868], [869, 869], [874, 874]], "source_code_file": "gl/lib/quotearg.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "quotearg_n_style", "lineno_map": [[906, 906]], "source_code_file": "gl/lib/quotearg.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "quotearg_n_style_mem", "lineno_map": [[914, 914]], "source_code_file": "gl/lib/quotearg.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "quotearg_char_mem", "lineno_map": [[934, 934], [935, 935]], "source_code_file": "gl/lib/quotearg.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "quotearg_n_style_colon", "lineno_map": [[961, 961], [962, 962]], "source_code_file": "gl/lib/quotearg.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "quotearg_n_custom_mem", "lineno_map": [[979, 979], [980, 980]], "source_code_file": "gl/lib/quotearg.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "rpl_fcntl", "lineno_map": [[188, 188], [189, 189], [190, 190], [235, 235], [249, 249], [251, 251], [252, 252], [254, 254], [262, 262], [263, 263], [265, 265], [269, 269], [270, 270], [272, 272], [273, 273], [275, 275], [276, 276], [277, 277], [278, 278], [317, 317], [318, 318]], "source_code_file": "gl/lib/fcntl.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "c_strcasecmp", "lineno_map": [[29, 29], [30, 30], [33, 33], [38, 38], [39, 39], [41, 41], [44, 44], [45, 45], [47, 47]], "source_code_file": "gl/lib/c-strcasecmp.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "version_etc_arn", "lineno_map": [[67, 67], [68, 68], [70, 70], [84, 84], [86, 86], [95, 95], [99, 99], [102, 102], [106, 106], [110, 110], [111, 111], [117, 117], [118, 118], [124, 124], [125, 125], [131, 131], [132, 132], [133, 133], [139, 139], [140, 140], [141, 141], [147, 147], [149, 149], [150, 150], [156, 156], [158, 158], [159, 159], [167, 167], [169, 169], [170, 170]], "source_code_file": "gl/lib/version-etc.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "version_etc_ar", "lineno_map": [[186, 186], [188, 188]], "source_code_file": "gl/lib/version-etc.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "version_etc_va", "lineno_map": [[203, 203], [205, 205], [206, 206], [208, 208]], "source_code_file": "gl/lib/version-etc.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "version_etc", "lineno_map": [[233, 233], [234, 234]], "source_code_file": "gl/lib/version-etc.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "emit_bug_reporting_address", "lineno_map": [[245, 245], [251, 251], [256, 256]], "source_code_file": "gl/lib/version-etc.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "knuth_morris_pratt", "lineno_map": [[38, 38], [39, 39], [42, 42], [43, 43], [44, 44], [65, 65], [67, 67], [73, 73], [80, 80], [83, 83], [84, 84], [89, 89], [92, 92], [93, 93], [106, 106], [118, 118], [121, 121], [123, 123], [124, 124], [126, 126], [127, 127], [128, 128], [131, 131], [132, 132], [138, 138], [144, 144], [145, 145], [149, 149], [151, 151]], "source_code_file": "gl/lib/mbscasestr.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "knuth_morris_pratt_multibyte", "lineno_map": [[46, 46], [51, 51], [52, 52], [54, 54], [55, 55], [62, 62], [63, 63], [65, 65], [66, 66], [67, 67], [90, 90], [91, 91], [93, 93], [99, 99], [106, 106], [109, 109], [115, 115], [118, 118], [132, 132], [144, 144], [145, 145], [146, 146], [147, 147], [149, 149], [153, 153], [154, 154], [155, 155], [156, 156], [158, 158], [159, 159], [160, 160], [163, 163], [167, 167], [170, 170], [171, 171], [172, 172], [174, 174], [175, 175], [176, 176], [182, 182], [183, 183], [184, 184], [185, 185], [190, 190]], "source_code_file": "gl/lib/mbscasestr.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "mbscasestr", "lineno_map": [[206, 206], [210, 210], [211, 211], [227, 227], [228, 228], [229, 229], [230, 230], [236, 236], [238, 238], [239, 239], [240, 240], [242, 242], [243, 243], [247, 247], [253, 253], [254, 254], [255, 255], [259, 259], [260, 260], [261, 261], [262, 262], [263, 263], [264, 264], [265, 265], [269, 269], [272, 272], [274, 274], [278, 278], [279, 279], [280, 280], [281, 281], [282, 282], [283, 283], [289, 289], [290, 290], [292, 292], [293, 293], [294, 294], [295, 295], [297, 297], [299, 299], [302, 302], [305, 305], [306, 306], [319, 319], [335, 335], [336, 336], [337, 337], [338, 338], [339, 339], [343, 343], [345, 345], [346, 346], [348, 348], [354, 354], [355, 355], [356, 356], [360, 360], [362, 362], [365, 365], [366, 366], [367, 367], [369, 369], [373, 373], [374, 374], [378, 378], [380, 380], [384, 384], [385, 385], [386, 386], [389, 389], [390, 390], [392, 392], [394, 394], [397, 397], [400, 400], [401, 401], [402, 402]], "source_code_file": "gl/lib/mbscasestr.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "xnrealloc", "lineno_map": [[118, 118], [119, 119]], "source_code_file": "gl/lib/xmalloc.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "xmalloc", "lineno_map": [[41, 41], [42, 42], [43, 43]], "source_code_file": "gl/lib/xmalloc.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "xrealloc", "lineno_map": [[53, 53], [57, 57], [61, 61], [62, 62], [63, 63]], "source_code_file": "gl/lib/xmalloc.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "xcalloc", "lineno_map": [[100, 100], [102, 102]], "source_code_file": "gl/lib/xmalloc.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "mbslen", "lineno_map": [[31, 31], [36, 36], [37, 37], [38, 38]], "source_code_file": "gl/lib/mbslen.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "set_cloexec_flag", "lineno_map": [[43, 43], [45, 45], [47, 47], [49, 49], [50, 50]], "source_code_file": "gl/lib/cloexec.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "close_stream", "lineno_map": [[58, 58], [59, 59], [60, 60], [70, 70], [72, 72], [73, 73]], "source_code_file": "gl/lib/close-stream.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "fd_safer", "lineno_map": [[39, 39], [41, 41], [42, 42], [43, 43], [44, 44], [45, 45]], "source_code_file": "gl/lib/fd-safer.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "freadahead", "lineno_map": [[29, 29], [32, 32]], "source_code_file": "gl/lib/freadahead.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "xstrtol_error", "lineno_map": [[52, 52], [57, 57], [60, 60], [63, 63], [68, 68], [72, 72], [76, 76], [78, 78], [79, 79], [80, 80], [81, 81], [84, 84], [86, 86]], "source_code_file": "gl/lib/xstrtol-error.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "xstrtol_fatal", "lineno_map": [[96, 96], [97, 97]], "source_code_file": "gl/lib/xstrtol-error.c", "binary_file1": "locate.json", "binary_file2": "locate.json"}
{"fname": "close_stdin_set_file_name", "lineno_map": [[45, 45]], "source_code_file": "gl/lib/closein.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "close_stdin", "lineno_map": [[81, 81], [87, 87], [91, 91], [92, 92], [94, 94], [95, 95], [96, 96], [100, 100], [101, 101], [102, 102], [105, 105], [108, 108], [110, 110], [111, 111]], "source_code_file": "gl/lib/closein.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "opendir_safer", "lineno_map": [[33, 33], [35, 35], [37, 37], [39, 39], [52, 52], [53, 53], [55, 55], [56, 56], [60, 60], [61, 61], [62, 62], [63, 63], [69, 69], [70, 70], [71, 71]], "source_code_file": "gl/lib/opendir-safer.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
{"fname": "rpl_fseeko", "lineno_map": [[51, 51], [52, 52], [53, 53], [116, 116], [117, 117], [127, 127], [128, 128]], "source_code_file": "gl/lib/fseeko.c", "binary_file1": "xargs.json", "binary_file2": "xargs.json"}
